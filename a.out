在归档文件 ./library/libsys.a 中：

utils.cpp.o：     文件格式 elf64-x86-64


Disassembly of section .gnu.debuglto_.debug_info:

0000000000000000 <utils.cpp.0ab61856>:
   0:	38 04 00             	cmp    %al,(%rax,%rax,1)
   3:	00 05 00 01 08 00    	add    %al,0x80100(%rip)        # 80109 <utils.cpp.0ab61856+0x80109>
   9:	00 00                	add    %al,(%rax)
   b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 11 <utils.cpp.0ab61856+0x11>
  11:	21 00                	and    %eax,(%rax)
	...
  1b:	00 00                	add    %al,(%rax)
  1d:	00 16                	add    %dl,(%rsi)
  1f:	00 00                	add    %al,(%rax)
  21:	00 00                	add    %al,(%rax)
  23:	01 22                	add    %esp,(%rdx)
  25:	0c 6f                	or     $0x6f,%al
  27:	01 00                	add    %eax,(%rax)
  29:	00 17                	add    %dl,(%rdi)
  2b:	4c 69 62 00 01 22 18 	imul   $0x2d182201,0x0(%rdx),%r12
  32:	2d 
  33:	01 00                	add    %eax,(%rax)
  35:	00 18                	add    %bl,(%rax)
  37:	00 00                	add    %al,(%rax)
  39:	00 00                	add    %al,(%rax)
  3b:	01 27                	add    %esp,(%rdi)
  3d:	1a 74 01 00          	sbb    0x0(%rcx,%rax,1),%dh
  41:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 47 <utils.cpp.0ab61856+0x47>
  47:	01 2e                	add    %ebp,(%rsi)
  49:	91                   	xchg   %eax,%ecx
  4a:	01 00                	add    %eax,(%rax)
  4c:	00 20                	add    %ah,(%rax)
  4e:	05 00 00 00 00       	add    $0x0,%eax
  53:	02 05 91 01 00 00    	add    0x191(%rip),%al        # 1ea <utils.cpp.0ab61856+0x1ea>
  59:	01 05 00 00 00 00    	add    %eax,0x0(%rip)        # 5f <utils.cpp.0ab61856+0x5f>
  5f:	02 06                	add    (%rsi),%al
  61:	91                   	xchg   %eax,%ecx
  62:	01 00                	add    %eax,(%rax)
  64:	00 02                	add    %al,(%rdx)
  66:	05 00 00 00 00       	add    $0x0,%eax
  6b:	02 07                	add    (%rdi),%al
  6d:	91                   	xchg   %eax,%ecx
  6e:	01 00                	add    %eax,(%rax)
  70:	00 04 05 00 00 00 00 	add    %al,0x0(,%rax,1)
  77:	02 08                	add    (%rax),%cl
  79:	91                   	xchg   %eax,%ecx
  7a:	01 00                	add    %eax,(%rax)
  7c:	00 08                	add    %cl,(%rax)
  7e:	05 00 00 00 00       	add    $0x0,%eax
  83:	02 09                	add    (%rcx),%cl
  85:	91                   	xchg   %eax,%ecx
  86:	01 00                	add    %eax,(%rax)
  88:	00 10                	add    %dl,(%rax)
  8a:	05 00 00 00 00       	add    $0x0,%eax
  8f:	02 0a                	add    (%rdx),%cl
  91:	91                   	xchg   %eax,%ecx
  92:	01 00                	add    %eax,(%rax)
  94:	00 20                	add    %ah,(%rax)
  96:	05 00 00 00 00       	add    $0x0,%eax
  9b:	02 0b                	add    (%rbx),%cl
  9d:	91                   	xchg   %eax,%ecx
  9e:	01 00                	add    %eax,(%rax)
  a0:	00 40 0d             	add    %al,0xd(%rax)
  a3:	00 00                	add    %al,(%rax)
  a5:	00 00                	add    %al,(%rax)
  a7:	d5 00 00 00          	{rex2 0x0} add %al,(%rax)
  ab:	00 79 02             	add    %bh,0x2(%rcx)
  ae:	00 00                	add    %al,(%rax)
  b0:	d3 00                	roll   %cl,(%rax)
  b2:	00 00                	add    %al,(%rax)
  b4:	01 79 02             	add    %edi,0x2(%rcx)
  b7:	00 00                	add    %al,(%rax)
  b9:	01 4a 01             	add    %ecx,0x1(%rdx)
  bc:	00 00                	add    %al,(%rax)
  be:	01 56 01             	add    %edx,0x1(%rsi)
  c1:	00 00                	add    %al,(%rax)
  c3:	01 56 01             	add    %edx,0x1(%rsi)
  c6:	00 00                	add    %al,(%rax)
  c8:	01 56 01             	add    %edx,0x1(%rsi)
  cb:	00 00                	add    %al,(%rax)
  cd:	01 56 01             	add    %edx,0x1(%rsi)
  d0:	00 00                	add    %al,(%rax)
  d2:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # d8 <utils.cpp.0ab61856+0xd8>
  d8:	cd 00                	int    $0x0
  da:	00 00                	add    %al,(%rax)
  dc:	00 62 01             	add    %ah,0x1(%rdx)
  df:	00 00                	add    %al,(%rax)
  e1:	eb 00                	jmp    e3 <utils.cpp.0ab61856+0xe3>
  e3:	00 00                	add    %al,(%rax)
  e5:	01 1f                	add    %ebx,(%rdi)
  e7:	03 00                	add    (%rax),%eax
  e9:	00 00                	add    %al,(%rax)
  eb:	0d 00 00 00 00       	or     $0x0,%eax
  f0:	03 00                	add    (%rax),%eax
  f2:	00 00                	add    %al,(%rax)
  f4:	00 56 01             	add    %dl,0x1(%rsi)
  f7:	00 00                	add    %al,(%rax)
  f9:	0d 01 00 00 01       	or     $0x1000001,%eax
  fe:	79 02                	jns    102 <utils.cpp.0ab61856+0x102>
 100:	00 00                	add    %al,(%rax)
 102:	01 24 03             	add    %esp,(%rbx,%rax,1)
 105:	00 00                	add    %al,(%rax)
 107:	01 48 03             	add    %ecx,0x3(%rax)
 10a:	00 00                	add    %al,(%rax)
 10c:	00 19                	add    %bl,(%rcx)
 10e:	00 00                	add    %al,(%rax)
 110:	00 00                	add    %al,(%rax)
 112:	01 28                	add    %ebp,(%rax)
 114:	14 00                	adc    $0x0,%al
 116:	00 00                	add    %al,(%rax)
 118:	00 d3                	add    %dl,%bl
 11a:	01 00                	add    %eax,(%rax)
 11c:	00 10                	add    %dl,(%rax)
 11e:	00 00                	add    %al,(%rax)
 120:	00 00                	add    %al,(%rax)
 122:	79 01                	jns    125 <utils.cpp.0ab61856+0x125>
 124:	00 00                	add    %al,(%rax)
 126:	01 1c 04             	add    %ebx,(%rsp,%rax,1)
 129:	00 00                	add    %al,(%rax)
 12b:	00 00                	add    %al,(%rax)
 12d:	08 00                	or     %al,(%rax)
 12f:	00 00                	add    %al,(%rax)
 131:	00 04 36             	add    %al,(%rsi,%rsi,1)
 134:	07                   	(bad)
 135:	c5 01 00             	(bad)
 138:	00 08                	add    %cl,(%rax)
 13a:	00 00                	add    %al,(%rax)
 13c:	00 00                	add    %al,(%rax)
 13e:	04 12                	add    $0x12,%al
 140:	07                   	(bad)
 141:	79 01                	jns    144 <utils.cpp.0ab61856+0x144>
 143:	00 00                	add    %al,(%rax)
 145:	0b 39                	or     (%rcx),%edi
 147:	01 00                	add    %eax,(%rax)
 149:	00 08                	add    %cl,(%rax)
 14b:	00 00                	add    %al,(%rax)
 14d:	00 00                	add    %al,(%rax)
 14f:	04 3d                	add    $0x3d,%al
 151:	07                   	(bad)
 152:	a9 01 00 00 08       	test   $0x8000001,%eax
 157:	00 00                	add    %al,(%rax)
 159:	00 00                	add    %al,(%rax)
 15b:	04 3c                	add    $0x3c,%al
 15d:	07                   	(bad)
 15e:	8a 01                	mov    (%rcx),%al
 160:	00 00                	add    %al,(%rax)
 162:	08 00                	or     %al,(%rax)
 164:	00 00                	add    %al,(%rax)
 166:	00 04 43             	add    %al,(%rbx,%rax,2)
 169:	07                   	(bad)
 16a:	c5 01 00             	(bad)
 16d:	00 00                	add    %al,(%rax)
 16f:	06                   	(bad)
 170:	80 01 00             	addb   $0x0,(%rcx)
 173:	00 0b                	add    %cl,(%rbx)
 175:	6f                   	outsl  %ds:(%rsi),(%dx)
 176:	01 00                	add    %eax,(%rax)
 178:	00 02                	add    %al,(%rdx)
 17a:	01 06                	add    %eax,(%rsi)
 17c:	00 00                	add    %al,(%rax)
 17e:	00 00                	add    %al,(%rax)
 180:	0b 79 01             	or     0x1(%rcx),%edi
 183:	00 00                	add    %al,(%rax)
 185:	03 36                	add    (%rsi),%esi
 187:	00 00                	add    %al,(%rax)
 189:	00 1a                	add    %bl,(%rdx)
 18b:	04 05                	add    $0x5,%al
 18d:	69 6e 74 00 0b 8a 01 	imul   $0x18a0b00,0x74(%rsi),%ebp
 194:	00 00                	add    %al,(%rax)
 196:	03 42 00             	add    0x0(%rdx),%eax
 199:	00 00                	add    %al,(%rax)
 19b:	02 01                	add    (%rcx),%al
 19d:	06                   	(bad)
 19e:	00 00                	add    %al,(%rax)
 1a0:	00 00                	add    %al,(%rax)
 1a2:	02 02                	add    (%rdx),%al
 1a4:	05 00 00 00 00       	add    $0x0,%eax
 1a9:	02 08                	add    (%rax),%cl
 1ab:	05 00 00 00 00       	add    $0x0,%eax
 1b0:	02 01                	add    (%rcx),%al
 1b2:	08 00                	or     %al,(%rax)
 1b4:	00 00                	add    %al,(%rax)
 1b6:	00 02                	add    %al,(%rdx)
 1b8:	02 07                	add    (%rdi),%al
 1ba:	00 00                	add    %al,(%rax)
 1bc:	00 00                	add    %al,(%rax)
 1be:	02 04 07             	add    (%rdi,%rax,1),%al
 1c1:	00 00                	add    %al,(%rax)
 1c3:	00 00                	add    %al,(%rax)
 1c5:	02 08                	add    (%rax),%cl
 1c7:	07                   	(bad)
 1c8:	00 00                	add    %al,(%rax)
 1ca:	00 00                	add    %al,(%rax)
 1cc:	1b 08                	sbb    (%rax),%ecx
 1ce:	06                   	(bad)
 1cf:	79 01                	jns    1d2 <utils.cpp.0ab61856+0x1d2>
 1d1:	00 00                	add    %al,(%rax)
 1d3:	02 01                	add    (%rcx),%al
 1d5:	02 00                	add    (%rax),%al
 1d7:	00 00                	add    %al,(%rax)
 1d9:	00 08                	add    %cl,(%rax)
 1db:	00 00                	add    %al,(%rax)
 1dd:	00 00                	add    %al,(%rax)
 1df:	05 28 1b e6 01       	add    $0x1e61b28,%eax
 1e4:	00 00                	add    %al,(%rax)
 1e6:	1c 00                	sbb    $0x0,%al
 1e8:	00 00                	add    %al,(%rax)
 1ea:	00 ef                	add    %ch,%bh
 1ec:	01 00                	add    %eax,(%rax)
 1ee:	00 11                	add    %dl,(%rcx)
 1f0:	ff 01                	incl   (%rcx)
 1f2:	00 00                	add    %al,(%rax)
 1f4:	ff 01                	incl   (%rcx)
 1f6:	00 00                	add    %al,(%rax)
 1f8:	12 c5                	adc    %ch,%al
 1fa:	01 00                	add    %eax,(%rax)
 1fc:	00 00                	add    %al,(%rax)
 1fe:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # 204 <utils.cpp.0ab61856+0x204>
 204:	18 06                	sbb    %al,(%rsi)
 206:	00 34 02             	add    %dh,(%rdx,%rax,1)
 209:	00 00                	add    %al,(%rax)
 20b:	0c 00                	or     $0x0,%al
 20d:	00 00                	add    %al,(%rax)
 20f:	00 be 01 00 00 00    	add    %bh,0x1(%rsi)
 215:	0c 00                	or     $0x0,%al
 217:	00 00                	add    %al,(%rax)
 219:	00 be 01 00 00 04    	add    %bh,0x4000001(%rsi)
 21f:	0c 00                	or     $0x0,%al
 221:	00 00                	add    %al,(%rax)
 223:	00 cc                	add    %cl,%ah
 225:	01 00                	add    %eax,(%rax)
 227:	00 08                	add    %cl,(%rax)
 229:	0c 00                	or     $0x0,%al
 22b:	00 00                	add    %al,(%rax)
 22d:	00 cc                	add    %cl,%ah
 22f:	01 00                	add    %eax,(%rax)
 231:	00 10                	add    %dl,(%rax)
 233:	00 08                	add    %cl,(%rax)
 235:	00 00                	add    %al,(%rax)
 237:	00 00                	add    %al,(%rax)
 239:	05 67 18 da 01       	add    $0x1da1867,%eax
 23e:	00 00                	add    %al,(%rax)
 240:	1e                   	(bad)
 241:	73 74                	jae    2b7 <utils.cpp.0ab61856+0x2b7>
 243:	64 00 07             	add    %al,%fs:(%rdi)
 246:	34 01                	xor    $0x1,%al
 248:	0b 56 02             	or     0x2(%rsi),%edx
 24b:	00 00                	add    %al,(%rax)
 24d:	1f                   	(bad)
 24e:	08 37                	or     %dh,(%rdi)
 250:	0b 34 02             	or     (%rdx,%rax,1),%esi
 253:	00 00                	add    %al,(%rax)
 255:	00 03                	add    %al,(%rbx)
 257:	4e 00 00             	rex.WRX add %r8b,(%rax)
 25a:	00 03                	add    %al,(%rbx)
 25c:	5a                   	pop    %rdx
 25d:	00 00                	add    %al,(%rax)
 25f:	00 03                	add    %al,(%rbx)
 261:	66 00 00             	data16 add %al,(%rax)
 264:	00 03                	add    %al,(%rbx)
 266:	72 00                	jb     268 <utils.cpp.0ab61856+0x268>
 268:	00 00                	add    %al,(%rax)
 26a:	03 7e 00             	add    0x0(%rsi),%edi
 26d:	00 00                	add    %al,(%rax)
 26f:	03 8a 00 00 00 03    	add    0x3000000(%rdx),%ecx
 275:	96                   	xchg   %eax,%esi
 276:	00 00                	add    %al,(%rax)
 278:	00 06                	add    %al,(%rsi)
 27a:	39 01                	cmp    %eax,(%rcx)
 27c:	00 00                	add    %al,(%rax)
 27e:	0e                   	(bad)
 27f:	a2 00 00 00 0f 03 00 	movabs %al,0x90000030f000000
 286:	00 09 
 288:	73 74                	jae    2fe <utils.cpp.0ab61856+0x2fe>
 28a:	72 00                	jb     28c <utils.cpp.0ab61856+0x28c>
 28c:	03 d6                	add    %esi,%edx
 28e:	12 79 02             	adc    0x2(%rcx),%bh
 291:	00 00                	add    %al,(%rax)
 293:	09 6e 75             	or     %ebp,0x75(%rsi)
 296:	6d                   	insl   (%dx),%es:(%rdi)
 297:	00 03                	add    %al,(%rbx)
 299:	d7                   	xlat   %ds:(%rbx)
 29a:	11 4a 01             	adc    %ecx,0x1(%rdx)
 29d:	00 00                	add    %al,(%rax)
 29f:	0a 00                	or     (%rax),%al
 2a1:	00 00                	add    %al,(%rax)
 2a3:	00 d7                	add    %dl,%bh
 2a5:	1e                   	(bad)
 2a6:	56                   	push   %rsi
 2a7:	01 00                	add    %eax,(%rax)
 2a9:	00 0a                	add    %cl,(%rdx)
 2ab:	00 00                	add    %al,(%rax)
 2ad:	00 00                	add    %al,(%rax)
 2af:	d8 11                	fcoms  (%rcx)
 2b1:	56                   	push   %rsi
 2b2:	01 00                	add    %eax,(%rax)
 2b4:	00 0a                	add    %cl,(%rdx)
 2b6:	00 00                	add    %al,(%rax)
 2b8:	00 00                	add    %al,(%rax)
 2ba:	d9 11                	fsts   (%rcx)
 2bc:	56                   	push   %rsi
 2bd:	01 00                	add    %eax,(%rax)
 2bf:	00 0a                	add    %cl,(%rdx)
 2c1:	00 00                	add    %al,(%rax)
 2c3:	00 00                	add    %al,(%rax)
 2c5:	da 11                	ficoml (%rcx)
 2c7:	56                   	push   %rsi
 2c8:	01 00                	add    %eax,(%rax)
 2ca:	00 07                	add    %al,(%rdi)
 2cc:	63 68 00             	movsxd 0x0(%rax),%ebp
 2cf:	dc 10                	fcoml  (%rax)
 2d1:	39 01                	cmp    %eax,(%rcx)
 2d3:	00 00                	add    %al,(%rax)
 2d5:	04 00                	add    $0x0,%al
 2d7:	00 00                	add    %al,(%rax)
 2d9:	00 dc                	add    %bl,%ah
 2db:	18 39                	sbb    %bh,(%rcx)
 2dd:	01 00                	add    %eax,(%rax)
 2df:	00 07                	add    %al,(%rdi)
 2e1:	74 6d                	je     350 <utils.cpp.0ab61856+0x350>
 2e3:	70 00                	jo     2e5 <utils.cpp.0ab61856+0x2e5>
 2e5:	dc 22                	fsubl  (%rdx)
 2e7:	0f 03 00             	lsl    (%rax),%eax
 2ea:	00 04 00             	add    %al,(%rax,%rax,1)
 2ed:	00 00                	add    %al,(%rax)
 2ef:	00 dd                	add    %bl,%ch
 2f1:	0e                   	(bad)
 2f2:	6f                   	outsl  %ds:(%rsi),(%dx)
 2f3:	01 00                	add    %eax,(%rax)
 2f5:	00 07                	add    %al,(%rdi)
 2f7:	69 00 de 11 56 01    	imul   $0x15611de,(%rax),%eax
 2fd:	00 00                	add    %al,(%rax)
 2ff:	13 20                	adc    (%rax),%esp
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	03 01                	add    (%rcx),%eax
 307:	01 2e                	add    %ebp,(%rsi)
 309:	8a 01                	mov    (%rcx),%al
 30b:	00 00                	add    %al,(%rax)
 30d:	00 00                	add    %al,(%rax)
 30f:	11 39                	adc    %edi,(%rcx)
 311:	01 00                	add    %eax,(%rax)
 313:	00 1f                	add    %bl,(%rdi)
 315:	03 00                	add    (%rax),%eax
 317:	00 12                	add    %dl,(%rdx)
 319:	c5 01 00             	(bad)
 31c:	00 31                	add    %dh,(%rcx)
 31e:	00 06                	add    %al,(%rsi)
 320:	24 03                	and    $0x3,%al
 322:	00 00                	add    %al,(%rax)
 324:	06                   	(bad)
 325:	45 01 00             	add    %r8d,(%r8)
 328:	00 0e                	add    %cl,(%rsi)
 32a:	d3 00                	roll   %cl,(%rax)
 32c:	00 00                	add    %al,(%rax)
 32e:	48 03 00             	add    (%rax),%rax
 331:	00 09                	add    %cl,(%rcx)
 333:	73 74                	jae    3a9 <utils.cpp.0ab61856+0x3a9>
 335:	72 00                	jb     337 <utils.cpp.0ab61856+0x337>
 337:	03 cd                	add    %ebp,%ecx
 339:	25 1f 03 00 00       	and    $0x31f,%eax
 33e:	07                   	(bad)
 33f:	69 00 ce 11 56 01    	imul   $0x15611ce,(%rax),%eax
 345:	00 00                	add    %al,(%rax)
 347:	00 06                	add    %al,(%rsi)
 349:	ff 01                	incl   (%rcx)
 34b:	00 00                	add    %al,(%rax)
 34d:	0e                   	(bad)
 34e:	eb 00                	jmp    350 <utils.cpp.0ab61856+0x350>
 350:	00 00                	add    %al,(%rax)
 352:	12 04 00             	adc    (%rax,%rax,1),%al
 355:	00 09                	add    %cl,(%rcx)
 357:	62 75 66 00 03       	(bad)
 35c:	03 1d 79 02 00 00    	add    0x279(%rip),%ebx        # 5db <utils.cpp.0ab61856+0x5db>
 362:	09 66 6d             	or     %esp,0x6d(%rsi)
 365:	74 00                	je     367 <utils.cpp.0ab61856+0x367>
 367:	03 03                	add    (%rbx),%eax
 369:	31 24 03             	xor    %esp,(%rbx,%rax,1)
 36c:	00 00                	add    %al,(%rax)
 36e:	0a 00                	or     (%rax),%al
 370:	00 00                	add    %al,(%rax)
 372:	00 03                	add    %al,(%rbx)
 374:	3e 48 03 00          	ds add (%rax),%rax
 378:	00 0f                	add    %cl,(%rdi)
 37a:	00 00                	add    %al,(%rax)
 37c:	00 00                	add    %al,(%rax)
 37e:	98                   	cwtl
 37f:	0d 0f 00 00 00       	or     $0xf,%eax
 384:	00 88 0d 0f 00 00    	add    %cl,0xf0d(%rax)
 38a:	00 00                	add    %al,(%rax)
 38c:	0e                   	(bad)
 38d:	09 04 00             	or     %eax,(%rax,%rax,1)
 390:	00 00                	add    %al,(%rax)
 392:	00 04 11             	add    %al,(%rcx,%rdx,1)
 395:	79 02                	jns    399 <utils.cpp.0ab61856+0x399>
 397:	00 00                	add    %al,(%rax)
 399:	04 00                	add    $0x0,%al
 39b:	00 00                	add    %al,(%rax)
 39d:	00 04 1c             	add    %al,(%rsp,%rbx,1)
 3a0:	79 02                	jns    3a4 <utils.cpp.0ab61856+0x3a4>
 3a2:	00 00                	add    %al,(%rax)
 3a4:	04 00                	add    $0x0,%al
 3a6:	00 00                	add    %al,(%rax)
 3a8:	00 05 11 56 01 00    	add    %al,0x15611(%rip)        # 159bf <utils.cpp.0ab61856+0x159bf>
 3ae:	00 04 00             	add    %al,(%rax,%rax,1)
 3b1:	00 00                	add    %al,(%rax)
 3b3:	00 06                	add    %al,(%rsi)
 3b5:	11 56 01             	adc    %edx,0x1(%rsi)
 3b8:	00 00                	add    %al,(%rax)
 3ba:	04 00                	add    $0x0,%al
 3bc:	00 00                	add    %al,(%rax)
 3be:	00 06                	add    %al,(%rsi)
 3c0:	22 56 01             	and    0x1(%rsi),%dl
 3c3:	00 00                	add    %al,(%rax)
 3c5:	07                   	(bad)
 3c6:	6c                   	insb   (%dx),%es:(%rdi)
 3c7:	65 6e                	outsb  %gs:(%rsi),(%dx)
 3c9:	00 06                	add    %al,(%rsi)
 3cb:	31 56 01             	xor    %edx,0x1(%rsi)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	07                   	(bad)
 3d1:	69 00 06 3a 56 01    	imul   $0x1563a06,(%rax),%eax
 3d7:	00 00                	add    %al,(%rax)
 3d9:	04 00                	add    $0x0,%al
 3db:	00 00                	add    %al,(%rax)
 3dd:	00 06                	add    %al,(%rsi)
 3df:	41 56                	push   %r14
 3e1:	01 00                	add    %eax,(%rax)
 3e3:	00 14 f5 03 00 00 04 	add    %dl,0x4000003(,%rsi,8)
 3ea:	00 00                	add    %al,(%rax)
 3ec:	00 00                	add    %al,(%rax)
 3ee:	5c                   	pop    %rsp
 3ef:	1c ce                	sbb    $0xce,%al
 3f1:	01 00                	add    %eax,(%rax)
 3f3:	00 00                	add    %al,(%rax)
 3f5:	14 05                	adc    $0x5,%al
 3f7:	04 00                	add    $0x0,%al
 3f9:	00 07                	add    %al,(%rdi)
 3fb:	49 50                	rex.WB push %r8
 3fd:	00 ae 1a 12 04 00    	add    %ch,0x4121a(%rsi)
 403:	00 00                	add    %al,(%rax)
 405:	13 07                	adc    (%rdi),%eax
 407:	49 50                	rex.WB push %r8
 409:	00 b2 1a 17 04 00    	add    %dh,0x4171a(%rdx)
 40f:	00 00                	add    %al,(%rax)
 411:	00 06                	add    %al,(%rsi)
 413:	a9 01 00 00 06       	test   $0x6000001,%eax
 418:	8a 01                	mov    (%rcx),%al
 41a:	00 00                	add    %al,(%rax)
 41c:	21 08                	and    %ecx,(%rax)
 41e:	80 01 00             	addb   $0x0,(%rcx)
 421:	00 22                	add    %ah,(%rdx)
 423:	0d 01 00 00 10       	or     $0x10000001,%eax
 428:	00 00                	add    %al,(%rax)
 42a:	00 00                	add    %al,(%rax)
 42c:	79 01                	jns    42f <utils.cpp.0ab61856+0x42f>
 42e:	00 00                	add    %al,(%rax)
 430:	09 63 00             	or     %esp,0x0(%rbx)
 433:	01 28                	add    %ebp,(%rax)
 435:	2a 1c 04             	sub    (%rsp,%rax,1),%bl
 438:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.debuglto_.debug_abbrev:

0000000000000000 <.gnu.debuglto_.debug_abbrev>:
   0:	01 05 00 49 13 00    	add    %eax,0x134900(%rip)        # 134906 <utils.cpp.0ab61856+0x134906>
   6:	00 02                	add    %al,(%rdx)
   8:	24 00                	and    $0x0,%al
   a:	0b 0b                	or     (%rbx),%ecx
   c:	3e 0b 03             	ds or  (%rbx),%eax
   f:	0e                   	(bad)
  10:	00 00                	add    %al,(%rax)
  12:	03 34 00             	add    (%rax,%rax,1),%esi
  15:	47 13 00             	rex.RXB adc (%r8),%r8d
  18:	00 04 34             	add    %al,(%rsp,%rsi,1)
  1b:	00 03                	add    %al,(%rbx)
  1d:	0e                   	(bad)
  1e:	3a 21                	cmp    (%rcx),%ah
  20:	03 3b                	add    (%rbx),%edi
  22:	0b 39                	or     (%rcx),%edi
  24:	0b 49 13             	or     0x13(%rcx),%ecx
  27:	00 00                	add    %al,(%rax)
  29:	05 34 00 03 0e       	add    $0xe030034,%eax
  2e:	3a 0b                	cmp    (%rbx),%cl
  30:	3b 0b                	cmp    (%rbx),%ecx
  32:	39 21                	cmp    %esp,(%rcx)
  34:	1a 49 13             	sbb    0x13(%rcx),%cl
  37:	3c 19                	cmp    $0x19,%al
  39:	1c 0b                	sbb    $0xb,%al
  3b:	6c                   	insb   (%dx),%es:(%rdi)
  3c:	19 00                	sbb    %eax,(%rax)
  3e:	00 06                	add    %al,(%rsi)
  40:	0f 00 0b             	str    (%rbx)
  43:	21 08                	and    %ecx,(%rax)
  45:	49 13 00             	adc    (%r8),%rax
  48:	00 07                	add    %al,(%rdi)
  4a:	34 00                	xor    $0x0,%al
  4c:	03 08                	add    (%rax),%ecx
  4e:	3a 21                	cmp    (%rcx),%ah
  50:	03 3b                	add    (%rbx),%edi
  52:	0b 39                	or     (%rcx),%edi
  54:	0b 49 13             	or     0x13(%rcx),%ecx
  57:	00 00                	add    %al,(%rax)
  59:	08 16                	or     %dl,(%rsi)
  5b:	00 03                	add    %al,(%rbx)
  5d:	0e                   	(bad)
  5e:	3a 0b                	cmp    (%rbx),%cl
  60:	3b 0b                	cmp    (%rbx),%ecx
  62:	39 0b                	cmp    %ecx,(%rbx)
  64:	49 13 00             	adc    (%r8),%rax
  67:	00 09                	add    %cl,(%rcx)
  69:	05 00 03 08 3a       	add    $0x3a080300,%eax
  6e:	0b 3b                	or     (%rbx),%edi
  70:	0b 39                	or     (%rcx),%edi
  72:	0b 49 13             	or     0x13(%rcx),%ecx
  75:	00 00                	add    %al,(%rax)
  77:	0a 05 00 03 0e 3a    	or     0x3a0e0300(%rip),%al        # 3a0e037d <utils.cpp.0ab61856+0x3a0e037d>
  7d:	21 03                	and    %eax,(%rbx)
  7f:	3b 0b                	cmp    (%rbx),%ecx
  81:	39 0b                	cmp    %ecx,(%rbx)
  83:	49 13 00             	adc    (%r8),%rax
  86:	00 0b                	add    %cl,(%rbx)
  88:	26 00 49 13          	es add %cl,0x13(%rcx)
  8c:	00 00                	add    %al,(%rax)
  8e:	0c 0d                	or     $0xd,%al
  90:	00 03                	add    %al,(%rbx)
  92:	0e                   	(bad)
  93:	3a 21                	cmp    (%rcx),%ah
  95:	06                   	(bad)
  96:	3b 21                	cmp    (%rcx),%esp
  98:	00 49 13             	add    %cl,0x13(%rcx)
  9b:	38 0b                	cmp    %cl,(%rbx)
  9d:	00 00                	add    %al,(%rax)
  9f:	0d 2e 01 3f 19       	or     $0x193f012e,%eax
  a4:	03 0e                	add    (%rsi),%ecx
  a6:	3a 21                	cmp    (%rcx),%ah
  a8:	03 3b                	add    (%rbx),%edi
  aa:	0b 39                	or     (%rcx),%edi
  ac:	21 0a                	and    %ecx,(%rdx)
  ae:	6e                   	outsb  %ds:(%rsi),(%dx)
  af:	0e                   	(bad)
  b0:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
  b4:	01 13                	add    %edx,(%rbx)
  b6:	00 00                	add    %al,(%rax)
  b8:	0e                   	(bad)
  b9:	2e 01 47 13          	cs add %eax,0x13(%rdi)
  bd:	01 13                	add    %edx,(%rbx)
  bf:	00 00                	add    %al,(%rax)
  c1:	0f 0a                	(bad)
  c3:	00 03                	add    %al,(%rbx)
  c5:	0e                   	(bad)
  c6:	3a 21                	cmp    (%rcx),%ah
  c8:	03 3b                	add    (%rbx),%edi
  ca:	0b 39                	or     (%rcx),%edi
  cc:	0b 00                	or     (%rax),%eax
  ce:	00 10                	add    %dl,(%rax)
  d0:	2f                   	(bad)
  d1:	00 03                	add    %al,(%rbx)
  d3:	0e                   	(bad)
  d4:	49 13 00             	adc    (%r8),%rax
  d7:	00 11                	add    %dl,(%rcx)
  d9:	01 01                	add    %eax,(%rcx)
  db:	49 13 01             	adc    (%r9),%rax
  de:	13 00                	adc    (%rax),%eax
  e0:	00 12                	add    %dl,(%rdx)
  e2:	21 00                	and    %eax,(%rax)
  e4:	49 13 2f             	adc    (%r15),%rbp
  e7:	0b 00                	or     (%rax),%eax
  e9:	00 13                	add    %dl,(%rbx)
  eb:	0b 01                	or     (%rcx),%eax
  ed:	00 00                	add    %al,(%rax)
  ef:	14 0b                	adc    $0xb,%al
  f1:	01 01                	add    %eax,(%rcx)
  f3:	13 00                	adc    (%rax),%eax
  f5:	00 15 11 01 25 0e    	add    %dl,0xe250111(%rip)        # e25020c <utils.cpp.0ab61856+0xe25020c>
  fb:	13 0b                	adc    (%rbx),%ecx
  fd:	03 1f                	add    (%rdi),%ebx
  ff:	1b 1f                	sbb    (%rdi),%ebx
 101:	10 17                	adc    %dl,(%rdi)
 103:	00 00                	add    %al,(%rax)
 105:	16                   	(bad)
 106:	39 01                	cmp    %eax,(%rcx)
 108:	03 0e                	add    (%rsi),%ecx
 10a:	3a 0b                	cmp    (%rbx),%cl
 10c:	3b 0b                	cmp    (%rbx),%ecx
 10e:	39 0b                	cmp    %ecx,(%rbx)
 110:	01 13                	add    %edx,(%rbx)
 112:	00 00                	add    %al,(%rax)
 114:	17                   	(bad)
 115:	39 01                	cmp    %eax,(%rcx)
 117:	03 08                	add    (%rax),%ecx
 119:	3a 0b                	cmp    (%rbx),%cl
 11b:	3b 0b                	cmp    (%rbx),%ecx
 11d:	39 0b                	cmp    %ecx,(%rbx)
 11f:	01 13                	add    %edx,(%rbx)
 121:	00 00                	add    %al,(%rax)
 123:	18 34 00             	sbb    %dh,(%rax,%rax,1)
 126:	03 0e                	add    (%rsi),%ecx
 128:	3a 0b                	cmp    (%rbx),%cl
 12a:	3b 0b                	cmp    (%rbx),%ecx
 12c:	39 0b                	cmp    %ecx,(%rbx)
 12e:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 132:	6c                   	insb   (%dx),%es:(%rdi)
 133:	19 00                	sbb    %eax,(%rax)
 135:	00 19                	add    %bl,(%rcx)
 137:	2e 01 3f             	cs add %edi,(%rdi)
 13a:	19 03                	sbb    %eax,(%rbx)
 13c:	0e                   	(bad)
 13d:	3a 0b                	cmp    (%rbx),%cl
 13f:	3b 0b                	cmp    (%rbx),%ecx
 141:	39 0b                	cmp    %ecx,(%rbx)
 143:	6e                   	outsb  %ds:(%rsi),(%dx)
 144:	0e                   	(bad)
 145:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 149:	00 00                	add    %al,(%rax)
 14b:	1a 24 00             	sbb    (%rax,%rax,1),%ah
 14e:	0b 0b                	or     (%rbx),%ecx
 150:	3e 0b 03             	ds or  (%rbx),%eax
 153:	08 00                	or     %al,(%rax)
 155:	00 1b                	add    %bl,(%rbx)
 157:	0f 00 0b             	str    (%rbx)
 15a:	0b 00                	or     (%rax),%eax
 15c:	00 1c 16             	add    %bl,(%rsi,%rdx,1)
 15f:	00 03                	add    %al,(%rbx)
 161:	0e                   	(bad)
 162:	49 13 00             	adc    (%r8),%rax
 165:	00 1d 13 01 03 0e    	add    %bl,0xe030113(%rip)        # e03027e <utils.cpp.0ab61856+0xe03027e>
 16b:	0b 0b                	or     (%rbx),%ecx
 16d:	3a 0b                	cmp    (%rbx),%cl
 16f:	3b 0b                	cmp    (%rbx),%ecx
 171:	01 13                	add    %edx,(%rbx)
 173:	00 00                	add    %al,(%rax)
 175:	1e                   	(bad)
 176:	39 01                	cmp    %eax,(%rcx)
 178:	03 08                	add    (%rax),%ecx
 17a:	3a 0b                	cmp    (%rbx),%cl
 17c:	3b 05 39 0b 01 13    	cmp    0x13010b39(%rip),%eax        # 13010cbb <utils.cpp.0ab61856+0x13010cbb>
 182:	00 00                	add    %al,(%rax)
 184:	1f                   	(bad)
 185:	08 00                	or     %al,(%rax)
 187:	3a 0b                	cmp    (%rbx),%cl
 189:	3b 0b                	cmp    (%rbx),%ecx
 18b:	39 0b                	cmp    %ecx,(%rbx)
 18d:	18 13                	sbb    %dl,(%rbx)
 18f:	00 00                	add    %al,(%rax)
 191:	20 34 00             	and    %dh,(%rax,%rax,1)
 194:	03 0e                	add    (%rsi),%ecx
 196:	3a 0b                	cmp    (%rbx),%cl
 198:	3b 05 39 0b 49 13    	cmp    0x13490b39(%rip),%eax        # 13490cd7 <utils.cpp.0ab61856+0x13490cd7>
 19e:	00 00                	add    %al,(%rax)
 1a0:	21 10                	and    %edx,(%rax)
 1a2:	00 0b                	add    %cl,(%rbx)
 1a4:	0b 49 13             	or     0x13(%rcx),%ecx
 1a7:	00 00                	add    %al,(%rax)
 1a9:	22 2e                	and    (%rsi),%ch
 1ab:	01 47 13             	add    %eax,0x13(%rdi)
 1ae:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.debuglto_.debug_line:

0000000000000000 <.gnu.debuglto_.debug_line>:
   0:	69 00 00 00 05 00    	imul   $0x50000,(%rax),%eax
   6:	08 00                	or     %al,(%rax)
   8:	61                   	(bad)
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	f6 f2                	div    %dl
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)
  21:	06                   	(bad)
	...
  3a:	02 01                	add    (%rcx),%al
  3c:	1f                   	(bad)
  3d:	02 0b                	add    (%rbx),%cl
  3f:	09 00                	or     %eax,(%rax)
	...
  49:	01 00                	add    %eax,(%rax)
  4b:	00 00                	add    %al,(%rax)
  4d:	00 01                	add    %al,(%rcx)
  4f:	00 00                	add    %al,(%rax)
  51:	00 00                	add    %al,(%rax)
  53:	02 00                	add    (%rax),%al
  55:	00 00                	add    %al,(%rax)
  57:	00 01                	add    %al,(%rcx)
  59:	00 00                	add    %al,(%rax)
  5b:	00 00                	add    %al,(%rax)
  5d:	05 00 00 00 00       	add    $0x0,%eax
  62:	00 00                	add    %al,(%rax)
  64:	00 00                	add    %al,(%rax)
  66:	00 03                	add    %al,(%rbx)
  68:	00 00                	add    %al,(%rax)
  6a:	00 00                	add    %al,(%rax)
  6c:	04                   	.byte 0x4

Disassembly of section .gnu.debuglto_.debug_str:

0000000000000000 <.gnu.debuglto_.debug_str>:
   0:	53                   	push   %rbx
   1:	50                   	push   %rax
   2:	41                   	rex.B
   3:	43                   	rex.XB
   4:	45 00 4c 45 46       	add    %r9b,0x46(%r13,%rax,2)
   9:	54                   	push   %rsp
   a:	00 5f 5a             	add    %bl,0x5a(%rdi)
   d:	4e 31 30             	rex.WRX xor %r14,(%rax)
  10:	51                   	push   %rcx
  11:	75 61                	jne    74 <.gnu.debuglto_.debug_str+0x74>
  13:	6e                   	outsb  %ds:(%rsi),(%dx)
  14:	74 75                	je     8b <.gnu.debuglto_.debug_str+0x8b>
  16:	6d                   	insl   (%dx),%es:(%rdi)
  17:	4e                   	rex.WRX
  18:	45                   	rex.RB
  19:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
  1e:	38 76 73             	cmp    %dh,0x73(%rsi)
  21:	70 72                	jo     95 <.gnu.debuglto_.debug_str+0x95>
  23:	69 6e 74 66 45 50 63 	imul   $0x63504566,0x74(%rsi),%ebp
  2a:	50                   	push   %rax
  2b:	4b 63 50 31          	rex.WXB movslq 0x31(%r8),%rdx
  2f:	33 5f 5f             	xor    0x5f(%rdi),%ebx
  32:	76 61                	jbe    95 <.gnu.debuglto_.debug_str+0x95>
  34:	5f                   	pop    %rdi
  35:	6c                   	insb   (%dx),%es:(%rdi)
  36:	69 73 74 5f 74 61 67 	imul   $0x6761745f,0x74(%rbx),%esi
  3d:	00 73 69             	add    %dh,0x69(%rbx)
  40:	7a 65                	jp     a7 <.gnu.debuglto_.debug_str+0xa7>
  42:	5f                   	pop    %rdi
  43:	74 00                	je     45 <.gnu.debuglto_.debug_str+0x45>
  45:	75 69                	jne    b0 <.gnu.debuglto_.debug_str+0xb0>
  47:	6e                   	outsb  %ds:(%rsi),(%dx)
  48:	74 36                	je     80 <.gnu.debuglto_.debug_str+0x80>
  4a:	34 5f                	xor    $0x5f,%al
  4c:	74 00                	je     4e <.gnu.debuglto_.debug_str+0x4e>
  4e:	67 70 5f             	addr32 jo b0 <.gnu.debuglto_.debug_str+0xb0>
  51:	6f                   	outsl  %ds:(%rsi),(%dx)
  52:	66 66 73 65          	data16 data16 jae bb <.gnu.debuglto_.debug_str+0xbb>
  56:	74 00                	je     58 <.gnu.debuglto_.debug_str+0x58>
  58:	76 61                	jbe    bb <.gnu.debuglto_.debug_str+0xbb>
  5a:	5f                   	pop    %rdi
  5b:	6c                   	insb   (%dx),%es:(%rdi)
  5c:	69 73 74 00 74 79 70 	imul   $0x70797400,0x74(%rbx),%esi
  63:	65 00 61 75          	add    %ah,%gs:0x75(%rcx)
  67:	74 6f                	je     d8 <.gnu.debuglto_.debug_str+0xd8>
  69:	3a 33                	cmp    (%rbx),%dh
  6b:	00 71 75             	add    %dh,0x75(%rcx)
  6e:	61                   	(bad)
  6f:	6c                   	insb   (%dx),%es:(%rdi)
  70:	69 66 69 65 72 00 4e 	imul   $0x4e007265,0x69(%rsi),%esp
  77:	65 78 74             	gs js  ee <.gnu.debuglto_.debug_str+0xee>
  7a:	55                   	push   %rbp
  7b:	00 4e 65             	add    %cl,0x65(%rsi)
  7e:	78 74                	js     f4 <.gnu.debuglto_.debug_str+0xf4>
  80:	58                   	pop    %rax
  81:	00 73 69             	add    %dh,0x69(%rbx)
  84:	67 6e                	outsb  %ds:(%esi),(%dx)
  86:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
  8b:	61                   	(bad)
  8c:	72 00                	jb     8e <.gnu.debuglto_.debug_str+0x8e>
  8e:	73 69                	jae    f9 <.gnu.debuglto_.debug_str+0xf9>
  90:	7a 65                	jp     f7 <.gnu.debuglto_.debug_str+0xf7>
  92:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
  96:	67 20 69 6e          	and    %ch,0x6e(%ecx)
  9a:	74 00                	je     9c <.gnu.debuglto_.debug_str+0x9c>
  9c:	5f                   	pop    %rdi
  9d:	5f                   	pop    %rdi
  9e:	62 75 69 6c 74       	(bad)
  a3:	69 6e 5f 76 61 5f 6c 	imul   $0x6c5f6176,0x5f(%rsi),%ebp
  aa:	69 73 74 00 66 69 65 	imul   $0x65696600,0x74(%rbx),%esi
  b1:	6c                   	insb   (%dx),%es:(%rdi)
  b2:	64 5f                	fs pop %rdi
  b4:	77 69                	ja     11f <.gnu.debuglto_.debug_str+0x11f>
  b6:	64 74 68             	fs je  121 <.gnu.debuglto_.debug_str+0x121>
  b9:	00 73 74             	add    %dh,0x74(%rbx)
  bc:	72 31                	jb     ef <.gnu.debuglto_.debug_str+0xef>
  be:	00 73 74             	add    %dh,0x74(%rbx)
  c1:	72 32                	jb     f5 <.gnu.debuglto_.debug_str+0xf5>
  c3:	00 50 4c             	add    %dl,0x4c(%rax)
  c6:	55                   	push   %rbp
  c7:	53                   	push   %rbx
  c8:	00 5f 5a             	add    %bl,0x5a(%rdi)
  cb:	4e 31 30             	rex.WRX xor %r14,(%rax)
  ce:	51                   	push   %rcx
  cf:	75 61                	jne    132 <.gnu.debuglto_.debug_str+0x132>
  d1:	6e                   	outsb  %ds:(%rsi),(%dx)
  d2:	74 75                	je     149 <.gnu.debuglto_.debug_str+0x149>
  d4:	6d                   	insl   (%dx),%es:(%rdi)
  d5:	4e                   	rex.WRX
  d6:	45                   	rex.RB
  d7:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
  dc:	39 73 6b             	cmp    %esi,0x6b(%rbx)
  df:	69 70 5f 61 74 6f 69 	imul   $0x696f7461,0x5f(%rax),%esi
  e6:	45 50                	rex.RB push %r8
  e8:	50                   	push   %rax
  e9:	4b 63 00             	rex.WXB movslq (%r8),%rax
  ec:	75 6e                	jne    15c <.gnu.debuglto_.debug_str+0x15c>
  ee:	73 69                	jae    159 <.gnu.debuglto_.debug_str+0x159>
  f0:	67 6e                	outsb  %ds:(%esi),(%dx)
  f2:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  f7:	74 00                	je     f9 <.gnu.debuglto_.debug_str+0xf9>
  f9:	63 68 61             	movsxd 0x61(%rax),%ebp
  fc:	72 5f                	jb     15d <.gnu.debuglto_.debug_str+0x15d>
  fe:	74 00                	je     100 <.gnu.debuglto_.debug_str+0x100>
 100:	6f                   	outsl  %ds:(%rsi),(%dx)
 101:	76 65                	jbe    168 <.gnu.debuglto_.debug_str+0x168>
 103:	72 66                	jb     16b <.gnu.debuglto_.debug_str+0x16b>
 105:	6c                   	insb   (%dx),%es:(%rdi)
 106:	6f                   	outsl  %ds:(%rsi),(%dx)
 107:	77 5f                	ja     168 <.gnu.debuglto_.debug_str+0x168>
 109:	61                   	(bad)
 10a:	72 67                	jb     173 <.gnu.debuglto_.debug_str+0x173>
 10c:	5f                   	pop    %rdi
 10d:	61                   	(bad)
 10e:	72 65                	jb     175 <.gnu.debuglto_.debug_str+0x175>
 110:	61                   	(bad)
 111:	00 73 74             	add    %dh,0x74(%rbx)
 114:	72 5f                	jb     175 <.gnu.debuglto_.debug_str+0x175>
 116:	63 00                	movsxd (%rax),%eax
 118:	6c                   	insb   (%dx),%es:(%rdi)
 119:	6f                   	outsl  %ds:(%rsi),(%dx)
 11a:	6e                   	outsb  %ds:(%rsi),(%dx)
 11b:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 11f:	73 69                	jae    18a <.gnu.debuglto_.debug_str+0x18a>
 121:	67 6e                	outsb  %ds:(%esi),(%dx)
 123:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 128:	74 00                	je     12a <.gnu.debuglto_.debug_str+0x12a>
 12a:	74 79                	je     1a5 <.gnu.debuglto_.debug_str+0x1a5>
 12c:	70 65                	jo     193 <.gnu.debuglto_.debug_str+0x193>
 12e:	64 65 66 20 5f 5f    	fs data16 and %bl,%gs:0x5f(%rdi)
 134:	76 61                	jbe    197 <.gnu.debuglto_.debug_str+0x197>
 136:	5f                   	pop    %rdi
 137:	6c                   	insb   (%dx),%es:(%rdi)
 138:	69 73 74 5f 74 61 67 	imul   $0x6761745f,0x74(%rbx),%esi
 13f:	20 5f 5f             	and    %bl,0x5f(%rdi)
 142:	76 61                	jbe    1a5 <.gnu.debuglto_.debug_str+0x1a5>
 144:	5f                   	pop    %rdi
 145:	6c                   	insb   (%dx),%es:(%rdi)
 146:	69 73 74 5f 74 61 67 	imul   $0x6761745f,0x74(%rbx),%esi
 14d:	00 49 53             	add    %cl,0x53(%rcx)
 150:	5f                   	pop    %rdi
 151:	44                   	rex.R
 152:	49                   	rex.WB
 153:	47                   	rex.RXB
 154:	49 54                	rex.WB push %r12
 156:	3c 63                	cmp    $0x63,%al
 158:	68 61 72 3e 00       	push   $0x3e7261
 15d:	73 68                	jae    1c7 <.gnu.debuglto_.debug_str+0x1c7>
 15f:	6f                   	outsl  %ds:(%rsi),(%dx)
 160:	72 74                	jb     1d6 <.gnu.debuglto_.debug_str+0x1d6>
 162:	20 75 6e             	and    %dh,0x6e(%rbp)
 165:	73 69                	jae    1d0 <.gnu.debuglto_.debug_str+0x1d0>
 167:	67 6e                	outsb  %ds:(%esi),(%dx)
 169:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 16e:	74 00                	je     170 <.gnu.debuglto_.debug_str+0x170>
 170:	43 52                	rex.XB push %r10
 172:	4c                   	rex.WR
 173:	46 00 6e 75          	rex.RX add %r13b,0x75(%rsi)
 177:	6d                   	insl   (%dx),%es:(%rdi)
 178:	62 65 72 00 62       	(bad)
 17d:	6f                   	outsl  %ds:(%rsi),(%dx)
 17e:	6f                   	outsl  %ds:(%rsi),(%dx)
 17f:	6c                   	insb   (%dx),%es:(%rdi)
 180:	00 62 61             	add    %ah,0x61(%rdx)
 183:	73 65                	jae    1ea <.gnu.debuglto_.debug_str+0x1ea>
 185:	00 5f 5a             	add    %bl,0x5a(%rdi)
 188:	4e 31 30             	rex.WRX xor %r14,(%rax)
 18b:	51                   	push   %rcx
 18c:	75 61                	jne    1ef <.gnu.debuglto_.debug_str+0x1ef>
 18e:	6e                   	outsb  %ds:(%rsi),(%dx)
 18f:	74 75                	je     206 <.gnu.debuglto_.debug_str+0x206>
 191:	6d                   	insl   (%dx),%es:(%rdi)
 192:	4e                   	rex.WRX
 193:	45                   	rex.RB
 194:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 199:	38 49 53             	cmp    %cl,0x53(%rcx)
 19c:	5f                   	pop    %rdi
 19d:	44                   	rex.R
 19e:	49                   	rex.WB
 19f:	47                   	rex.RXB
 1a0:	49 54                	rex.WB push %r12
 1a2:	49 63 45 45          	movslq 0x45(%r13),%rax
 1a6:	44 61                	rex.R (bad)
 1a8:	52                   	push   %rdx
 1a9:	4b 54                	rex.WXB push %r12
 1ab:	5f                   	pop    %rdi
 1ac:	00 5f 5f             	add    %bl,0x5f(%rdi)
 1af:	67 6e                	outsb  %ds:(%esi),(%dx)
 1b1:	75 63                	jne    216 <.gnu.debuglto_.debug_str+0x216>
 1b3:	5f                   	pop    %rdi
 1b4:	76 61                	jbe    217 <.gnu.debuglto_.debug_str+0x217>
 1b6:	5f                   	pop    %rdi
 1b7:	6c                   	insb   (%dx),%es:(%rdi)
 1b8:	69 73 74 00 53 4d 41 	imul   $0x414d5300,0x74(%rbx),%esi
 1bf:	4c                   	rex.WR
 1c0:	4c 00 5f 5f          	rex.WR add %r11b,0x5f(%rdi)
 1c4:	72 65                	jb     22b <.gnu.debuglto_.debug_str+0x22b>
 1c6:	73 00                	jae    1c8 <.gnu.debuglto_.debug_str+0x1c8>
 1c8:	53                   	push   %rbx
 1c9:	49                   	rex.WB
 1ca:	47                   	rex.RXB
 1cb:	4e 00 69 6e          	rex.WRX add %r13b,0x6e(%rcx)
 1cf:	74 33                	je     204 <.gnu.debuglto_.debug_str+0x204>
 1d1:	32 5f 74             	xor    0x74(%rdi),%bl
 1d4:	00 75 6e             	add    %dh,0x6e(%rbp)
 1d7:	73 69                	jae    242 <.gnu.debuglto_.debug_str+0x242>
 1d9:	67 6e                	outsb  %ds:(%esi),(%dx)
 1db:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 1e0:	61                   	(bad)
 1e1:	72 00                	jb     1e3 <.gnu.debuglto_.debug_str+0x1e3>
 1e3:	73 68                	jae    24d <.gnu.debuglto_.debug_str+0x24d>
 1e5:	6f                   	outsl  %ds:(%rsi),(%dx)
 1e6:	72 74                	jb     25c <.gnu.debuglto_.debug_str+0x25c>
 1e8:	20 69 6e             	and    %ch,0x6e(%rcx)
 1eb:	74 00                	je     1ed <.gnu.debuglto_.debug_str+0x1ed>
 1ed:	72 65                	jb     254 <.gnu.debuglto_.debug_str+0x254>
 1ef:	67 5f                	addr32 pop %rdi
 1f1:	73 61                	jae    254 <.gnu.debuglto_.debug_str+0x254>
 1f3:	76 65                	jbe    25a <.gnu.debuglto_.debug_str+0x25a>
 1f5:	5f                   	pop    %rdi
 1f6:	61                   	(bad)
 1f7:	72 65                	jb     25e <.gnu.debuglto_.debug_str+0x25e>
 1f9:	61                   	(bad)
 1fa:	00 64 69 67          	add    %ah,0x67(%rcx,%rbp,2)
 1fe:	69 74 73 00 4c 31 5f 	imul   $0x435f314c,0x0(%rbx,%rsi,2),%esi
 205:	43 
 206:	41                   	rex.B
 207:	43                   	rex.XB
 208:	48                   	rex.W
 209:	45 5f                	rex.RB pop %r15
 20b:	42 59                	rex.X pop %rcx
 20d:	54                   	push   %rsp
 20e:	45 53                	rex.RB push %r11
 210:	00 72 65             	add    %dh,0x65(%rdx)
 213:	70 65                	jo     27a <.gnu.debuglto_.debug_str+0x27a>
 215:	61                   	(bad)
 216:	74 00                	je     218 <.gnu.debuglto_.debug_str+0x218>
 218:	63 68 61             	movsxd 0x61(%rax),%ebp
 21b:	72 00                	jb     21d <.gnu.debuglto_.debug_str+0x21d>
 21d:	5a                   	pop    %rdx
 21e:	45 52                	rex.RB push %r10
 220:	4f 50                	rex.WRXB push %r8
 222:	41                   	rex.B
 223:	44 00 70 72          	add    %r14b,0x72(%rax)
 227:	65 63 69 73          	movsxd %gs:0x73(%rcx),%ebp
 22b:	69 6f 6e 00 76 73 70 	imul   $0x70737600,0x6e(%rdi),%ebp
 232:	72 69                	jb     29d <.gnu.debuglto_.debug_str+0x29d>
 234:	6e                   	outsb  %ds:(%rsi),(%dx)
 235:	74 66                	je     29d <.gnu.debuglto_.debug_str+0x29d>
 237:	00 47 4e             	add    %al,0x4e(%rdi)
 23a:	55                   	push   %rbp
 23b:	20 43 2b             	and    %al,0x2b(%rbx)
 23e:	2b 32                	sub    (%rdx),%esi
 240:	36 20 31             	ss and %dh,(%rcx)
 243:	34 2e                	xor    $0x2e,%al
 245:	32 2e                	xor    (%rsi),%ch
 247:	31 20                	xor    %esp,(%rax)
 249:	32 30                	xor    (%rax),%dh
 24b:	32 34 30             	xor    (%rax,%rsi,1),%dh
 24e:	39 31                	cmp    %esi,(%rcx)
 250:	30 20                	xor    %ah,(%rax)
 252:	2d 6d 63 6d 6f       	sub    $0x6f6d636d,%eax
 257:	64 65 6c             	fs gs insb (%dx),%es:(%rdi)
 25a:	3d 6c 61 72 67       	cmp    $0x6772616c,%eax
 25f:	65 20 2d 6d 6e 6f 2d 	and    %ch,%gs:0x2d6f6e6d(%rip)        # 2d6f70d3 <utils.cpp.0ab61856+0x2d6f70d3>
 266:	72 65                	jb     2cd <.gnu.debuglto_.debug_str+0x2cd>
 268:	64 2d 7a 6f 6e 65    	fs sub $0x656e6f7a,%eax
 26e:	20 2d 6d 74 75 6e    	and    %ch,0x6e75746d(%rip)        # 6e7576e1 <utils.cpp.0ab61856+0x6e7576e1>
 274:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 27a:	72 69                	jb     2e5 <.gnu.debuglto_.debug_str+0x2e5>
 27c:	63 20                	movsxd (%rax),%esp
 27e:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 283:	68 3d 78 38 36       	push   $0x3638783d
 288:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 28d:	67 20 2d 4f 30 20 2d 	and    %ch,0x2d20304f(%eip)        # 2d2032e3 <utils.cpp.0ab61856+0x2d2032e3>
 294:	73 74                	jae    30a <.gnu.debuglto_.debug_str+0x30a>
 296:	64 3d 63 2b 2b 32    	fs cmp $0x322b2b63,%eax
 29c:	36 20 2d 66 6e 6f 2d 	ss and %ch,0x2d6f6e66(%rip)        # 2d6f7109 <utils.cpp.0ab61856+0x2d6f7109>
 2a3:	62 75 69 6c 74       	(bad)
 2a8:	69 6e 20 2d 66 66 72 	imul   $0x7266662d,0x20(%rsi),%ebp
 2af:	65 65 73 74          	gs gs jae 327 <.gnu.debuglto_.debug_str+0x327>
 2b3:	61                   	(bad)
 2b4:	6e                   	outsb  %ds:(%rsi),(%dx)
 2b5:	64 69 6e 67 20 2d 66 	imul   $0x6e662d20,%fs:0x67(%rsi),%ebp
 2bc:	6e 
 2bd:	6f                   	outsl  %ds:(%rsi),(%dx)
 2be:	2d 73 74 61 63       	sub    $0x63617473,%eax
 2c3:	6b 2d 70 72 6f 74 65 	imul   $0x65,0x746f7270(%rip),%ebp        # 746f753a <utils.cpp.0ab61856+0x746f753a>
 2ca:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
 2ce:	20 2d 66 6e 6f 2d    	and    %ch,0x2d6f6e66(%rip)        # 2d6f713a <utils.cpp.0ab61856+0x2d6f713a>
 2d4:	73 74                	jae    34a <.gnu.debuglto_.debug_str+0x34a>
 2d6:	72 69                	jb     341 <.gnu.debuglto_.debug_str+0x341>
 2d8:	63 74 2d 61          	movsxd 0x61(%rbp,%rbp,1),%esi
 2dc:	6c                   	insb   (%dx),%es:(%rdi)
 2dd:	69 61 73 69 6e 67 20 	imul   $0x20676e69,0x73(%rcx),%esp
 2e4:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
 2e9:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 2ec:	6d                   	insl   (%dx),%es:(%rdi)
 2ed:	6f                   	outsl  %ds:(%rsi),(%dx)
 2ee:	6e                   	outsb  %ds:(%rsi),(%dx)
 2ef:	20 2d 66 6e 6f 2d    	and    %ch,0x2d6f6e66(%rip)        # 2d6f715b <utils.cpp.0ab61856+0x2d6f715b>
 2f5:	72 74                	jb     36b <.gnu.debuglto_.debug_str+0x36b>
 2f7:	74 69                	je     362 <.gnu.debuglto_.debug_str+0x362>
 2f9:	20 2d 66 6e 6f 2d    	and    %ch,0x2d6f6e66(%rip)        # 2d6f7165 <utils.cpp.0ab61856+0x2d6f7165>
 2ff:	65 78 63             	gs js  365 <.gnu.debuglto_.debug_str+0x365>
 302:	65 70 74             	gs jo  379 <.gnu.debuglto_.debug_str+0x379>
 305:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%rdi),%ebp
 30c:	73 74                	jae    382 <.gnu.debuglto_.debug_str+0x382>
 30e:	61                   	(bad)
 30f:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
 312:	63 68 65             	movsxd 0x65(%rax),%ebp
 315:	63 6b 3d             	movsxd 0x3d(%rbx),%ebp
 318:	6e                   	outsb  %ds:(%rsi),(%dx)
 319:	6f                   	outsl  %ds:(%rsi),(%dx)
 31a:	20 2d 66 66 75 6e    	and    %ch,0x6e756666(%rip)        # 6e756986 <utils.cpp.0ab61856+0x6e756986>
 320:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
 324:	6e                   	outsb  %ds:(%rsi),(%dx)
 325:	2d 73 65 63 74       	sub    $0x74636573,%eax
 32a:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%rdi),%ebp
 331:	64 61                	fs (bad)
 333:	74 61                	je     396 <.gnu.debuglto_.debug_str+0x396>
 335:	2d 73 65 63 74       	sub    $0x74636573,%eax
 33a:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%rdi),%ebp
 341:	50                   	push   %rax
 342:	49                   	rex.WB
 343:	43 20 2d 66 6c 74 6f 	rex.XB and %bpl,0x6f746c66(%rip)        # 6f746fb0 <utils.cpp.0ab61856+0x6f746fb0>
 34a:	00 51 75             	add    %dl,0x75(%rcx)
 34d:	61                   	(bad)
 34e:	6e                   	outsb  %ds:(%rsi),(%dx)
 34f:	74 75                	je     3c6 <utils.cpp.0ab61856+0x3c6>
 351:	6d                   	insl   (%dx),%es:(%rdi)
 352:	4e                   	rex.WRX
 353:	45                   	rex.RB
 354:	43 00 53 50          	rex.XB add %dl,0x50(%r11)
 358:	45                   	rex.RB
 359:	43                   	rex.XB
 35a:	49                   	rex.WB
 35b:	41                   	rex.B
 35c:	4c 00 73 6b          	rex.WR add %r14b,0x6b(%rbx)
 360:	69 70 5f 61 74 6f 69 	imul   $0x696f7461,0x5f(%rax),%esi
 367:	00 73 69             	add    %dh,0x69(%rbx)
 36a:	67 6e                	outsb  %ds:(%esi),(%dx)
 36c:	00 66 70             	add    %ah,0x70(%rsi)
 36f:	5f                   	pop    %rdi
 370:	6f                   	outsl  %ds:(%rsi),(%dx)
 371:	66 66 73 65          	data16 data16 jae 3da <utils.cpp.0ab61856+0x3da>
 375:	74 00                	je     377 <.gnu.debuglto_.debug_str+0x377>
 377:	66 6c                	data16 insb (%dx),%es:(%rdi)
 379:	61                   	(bad)
 37a:	67 73 00             	addr32 jae 37d <.gnu.debuglto_.debug_str+0x37d>
 37d:	5f                   	pop    %rdi
 37e:	5a                   	pop    %rdx
 37f:	4e 31 30             	rex.WRX xor %r14,(%rax)
 382:	51                   	push   %rcx
 383:	75 61                	jne    3e6 <utils.cpp.0ab61856+0x3e6>
 385:	6e                   	outsb  %ds:(%rsi),(%dx)
 386:	74 75                	je     3fd <utils.cpp.0ab61856+0x3fd>
 388:	6d                   	insl   (%dx),%es:(%rdi)
 389:	4e                   	rex.WRX
 38a:	45                   	rex.RB
 38b:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 390:	36 6e                	outsb  %ds:(%rsi),(%dx)
 392:	75 6d                	jne    401 <utils.cpp.0ab61856+0x401>
 394:	62 65 72 45 50       	(bad)
 399:	63 6c 69 69          	movsxd 0x69(%rcx,%rbp,2),%ebp
 39d:	69 69 00 69 6e 74 36 	imul   $0x36746e69,0x0(%rcx),%ebp
 3a4:	34 5f                	xor    $0x5f,%al
 3a6:	74 00                	je     3a8 <.gnu.debuglto_.debug_str+0x3a8>
 3a8:	61                   	(bad)
 3a9:	72 67                	jb     412 <utils.cpp.0ab61856+0x412>
 3ab:	73 00                	jae    3ad <utils.cpp.0ab61856+0x3ad>

Disassembly of section .gnu.debuglto_.debug_line_str:

0000000000000000 <.gnu.debuglto_.debug_line_str>:
   0:	63 2b                	movsxd (%rbx),%ebp
   2:	2b 63 6f             	sub    0x6f(%rbx),%esp
   5:	6e                   	outsb  %ds:(%rsi),(%dx)
   6:	66 69 67 2e 68 00    	imul   $0x68,0x2e(%rdi),%sp
   c:	2f                   	(bad)
   d:	75 73                	jne    82 <.gnu.debuglto_.debug_line_str+0x82>
   f:	72 2f                	jb     40 <.gnu.debuglto_.debug_line_str+0x40>
  11:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  18:	2f                   	(bad)
  19:	63 2b                	movsxd (%rbx),%ebp
  1b:	2b 2f                	sub    (%rdi),%ebp
  1d:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
  20:	32 2e                	xor    (%rsi),%ch
  22:	31 2f                	xor    %ebp,(%rdi)
  24:	78 38                	js     5e <.gnu.debuglto_.debug_line_str+0x5e>
  26:	36 5f                	ss pop %rdi
  28:	36 34 2d             	ss xor $0x2d,%al
  2b:	70 63                	jo     90 <.gnu.debuglto_.debug_line_str+0x90>
  2d:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  32:	78 2d                	js     61 <.gnu.debuglto_.debug_line_str+0x61>
  34:	67 6e                	outsb  %ds:(%esi),(%dx)
  36:	75 2f                	jne    67 <.gnu.debuglto_.debug_line_str+0x67>
  38:	62 69 74 73 00       	(bad)
  3d:	63 73 74             	movsxd 0x74(%rbx),%esi
  40:	64 61                	fs (bad)
  42:	72 67                	jb     ab <.gnu.debuglto_.debug_line_str+0xab>
  44:	00 2f                	add    %ch,(%rdi)
  46:	68 6f 6d 65 2f       	push   $0x2f656d6f
  4b:	51                   	push   %rcx
  4c:	75 61                	jne    af <.gnu.debuglto_.debug_line_str+0xaf>
  4e:	6e                   	outsb  %ds:(%rsi),(%dx)
  4f:	74 75                	je     c6 <.gnu.debuglto_.debug_line_str+0xc6>
  51:	6d                   	insl   (%dx),%es:(%rdi)
  52:	4e                   	rex.WRX
  53:	45                   	rex.RB
  54:	43 2f                	rex.XB (bad)
  56:	51                   	push   %rcx
  57:	75 61                	jne    ba <.gnu.debuglto_.debug_line_str+0xba>
  59:	6e                   	outsb  %ds:(%rsi),(%dx)
  5a:	74 75                	je     d1 <.gnu.debuglto_.debug_line_str+0xd1>
  5c:	6d                   	insl   (%dx),%es:(%rdi)
  5d:	4e                   	rex.WRX
  5e:	45                   	rex.RB
  5f:	43 2f                	rex.XB (bad)
  61:	51                   	push   %rcx
  62:	75 61                	jne    c5 <.gnu.debuglto_.debug_line_str+0xc5>
  64:	6e                   	outsb  %ds:(%rsi),(%dx)
  65:	74 75                	je     dc <.gnu.debuglto_.debug_line_str+0xdc>
  67:	6d                   	insl   (%dx),%es:(%rdi)
  68:	4e                   	rex.WRX
  69:	45                   	rex.RB
  6a:	43 2d 4c 69 6d 69    	rex.XB sub $0x696d694c,%eax
  70:	6e                   	outsb  %ds:(%rsi),(%dx)
  71:	65 00 64 65 66       	add    %ah,%gs:0x66(%rbp,%riz,2)
  76:	6c                   	insb   (%dx),%es:(%rdi)
  77:	69 62 2e 68 70 70 00 	imul   $0x707068,0x2e(%rdx),%esp
  7e:	75 74                	jne    f4 <.gnu.debuglto_.debug_line_str+0xf4>
  80:	69 6c 73 2e 63 70 70 	imul   $0x707063,0x2e(%rbx,%rsi,2),%ebp
  87:	00 
  88:	75 74                	jne    fe <.gnu.debuglto_.debug_line_str+0xfe>
  8a:	69 6c 73 2e 68 70 70 	imul   $0x707068,0x2e(%rbx,%rsi,2),%ebp
  91:	00 
  92:	73 74                	jae    108 <.gnu.debuglto_.debug_line_str+0x108>
  94:	64 61                	fs (bad)
  96:	72 67                	jb     ff <.gnu.debuglto_.debug_line_str+0xff>
  98:	2e 68 00 2f 75 73    	cs push $0x73752f00
  9e:	72 2f                	jb     cf <.gnu.debuglto_.debug_line_str+0xcf>
  a0:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  a7:	2f                   	(bad)
  a8:	63 2b                	movsxd (%rbx),%ebp
  aa:	2b 2f                	sub    (%rdi),%ebp
  ac:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
  af:	32 2e                	xor    (%rsi),%ch
  b1:	31 00                	xor    %eax,(%rax)
  b3:	55                   	push   %rbp
  b4:	65 66 69 2e 68 70    	imul   $0x7068,%gs:(%rsi),%bp
  ba:	70 00                	jo     bc <.gnu.debuglto_.debug_line_str+0xbc>
  bc:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  c3:	2f                   	(bad)
  c4:	6c                   	insb   (%dx),%es:(%rdi)
  c5:	69 62 00 3c 62 75 69 	imul   $0x6975623c,0x0(%rdx),%esp
  cc:	6c                   	insb   (%dx),%es:(%rdi)
  cd:	74 2d                	je     fc <.gnu.debuglto_.debug_line_str+0xfc>
  cf:	69 6e 3e 00 73 6f 75 	imul   $0x756f7300,0x3e(%rsi),%ebp
  d6:	72 63                	jb     13b <utils.cpp.0ab61856+0x13b>
  d8:	65 2f                	gs (bad)
  da:	6c                   	insb   (%dx),%es:(%rdi)
  db:	69 62 00 73 6f 75 72 	imul   $0x72756f73,0x0(%rdx),%esp
  e2:	63 65 2f             	movsxd 0x2f(%rbp),%esp
  e5:	6c                   	insb   (%dx),%es:(%rdi)
  e6:	69 62 2f 75 74 69 6c 	imul   $0x6c697475,0x2f(%rdx),%esp
  ed:	73 2e                	jae    11d <.gnu.debuglto_.debug_line_str+0x11d>
  ef:	63 70 70             	movsxd 0x70(%rax),%esi
  f2:	00 2f                	add    %ch,(%rdi)
  f4:	75 73                	jne    169 <utils.cpp.0ab61856+0x169>
  f6:	72 2f                	jb     127 <utils.cpp.0ab61856+0x127>
  f8:	6c                   	insb   (%dx),%es:(%rdi)
  f9:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
 100:	78 38                	js     13a <utils.cpp.0ab61856+0x13a>
 102:	36 5f                	ss pop %rdi
 104:	36 34 2d             	ss xor $0x2d,%al
 107:	70 63                	jo     16c <utils.cpp.0ab61856+0x16c>
 109:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 10e:	78 2d                	js     13d <utils.cpp.0ab61856+0x13d>
 110:	67 6e                	outsb  %ds:(%esi),(%dx)
 112:	75 2f                	jne    143 <utils.cpp.0ab61856+0x143>
 114:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
 117:	32 2e                	xor    (%rsi),%ch
 119:	31 2f                	xor    %ebp,(%rdi)
 11b:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
	...

Disassembly of section .gnu.lto_.inline.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.inline.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 60 9c    	sub    %dh,-0x639f02d1(%rbp)
   6:	00 e5                	add    %ah,%ch
   8:	03 00                	add    (%rax),%eax
   a:	a2 05 13 1e 90 29 e9 	movabs %al,0xcb57e929901e1305
  11:	57 cb 
  13:	aa                   	stos   %al,%es:(%rdi)
  14:	e7 bb                	out    %eax,$0xbb
  16:	bb eb db fb 00       	mov    $0xfbdbeb,%ebx
  1b:	d9 7e 18             	fnstcw 0x18(%rsi)
  1e:	6a 3b                	push   $0x3b
  20:	ed                   	in     (%dx),%eax
  21:	ff                   	(bad)
  22:	ff 43 fe             	incl   -0x2(%rbx)
  25:	a3 f5 11 6e 5b ee 14 	movabs %eax,0x6a9614ee5b6e11f5
  2c:	96 6a 
  2e:	8e e6                	mov    %esi,%fs
  30:	00 94 0c 81 c5 26 7f 	add    %dl,0x7f26c581(%rsp,%rcx,1)
  37:	3d 18 ab fc 83       	cmp    $0x83fcab18,%eax
  3c:	58                   	pop    %rax
  3d:	24 51                	and    $0x51,%al
  3f:	54                   	push   %rsp
  40:	e4 97                	in     $0x97,%al
  42:	e2 34                	loop   78 <.gnu.lto_.inline.7c70a44ae594ff4d+0x78>
  44:	87 94 06 55 87 44 15 	xchg   %edx,0x15448755(%rsi,%rax,1)
  4b:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  4c:	b9 c6 ef 70 21       	mov    $0x2170efc6,%ecx
  51:	4c                   	rex.WR
  52:	45 ec                	rex.RB in (%dx),%al
  54:	5f                   	pop    %rdi
  55:	a0 8b 74 02 12 00 34 	movabs 0xbc1334001202748b,%al
  5c:	13 bc 
  5e:	90                   	nop
  5f:	c6                   	(bad)
  60:	13 3a                	adc    (%rdx),%edi
  62:	44                   	rex.R
  63:	4d 27                	rex.WRB (bad)
  65:	05 97 01 50 82       	add    $0x82500197,%eax
  6a:	0f 90 27             	seto   (%rdi)
  6d:	0d d0 0a 12 bc       	or     $0xbc120ad0,%eax
  72:	3c 1e                	cmp    $0x1e,%al
  74:	d5 1a c0 08 e0       	{rex2 0x1a} rorb $0xe0,(%r16)
  79:	7b d4                	jnp    4f <.gnu.lto_.inline.7c70a44ae594ff4d+0x4f>
  7b:	62 9e 3b 98 5a       	(bad)
  80:	88 cb                	mov    %cl,%bl
  82:	ab                   	stos   %eax,%es:(%rdi)
  83:	1a 70 03             	sbb    0x3(%rax),%dh

Disassembly of section .gnu.lto_.jmpfuncs.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.jmpfuncs.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 20 0e    	sub    %dh,0xe20fd2f(%rbp)
   6:	45 00 00             	add    %r8b,(%r8)
   9:	10 02                	adc    %al,(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	00 1c c0             	add    %bl,(%rax,%rax,8)
  10:	02                   	.byte 0x2

Disassembly of section .gnu.lto_.ipa_modref.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.ipa_modref.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 20 0e    	sub    %dh,0xe20fd2f(%rbp)
   6:	45 00 00             	add    %r8b,(%r8)
   9:	10 02                	adc    %al,(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	00 1c c0             	add    %bl,(%rax,%rax,8)
  10:	02                   	.byte 0x2

Disassembly of section .gnu.lto_.lto.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.lto.7c70a44ae594ff4d>:
   0:	0e                   	(bad)
   1:	00 00                	add    %al,(%rax)
   3:	00 01                	add    %al,(%rcx)
   5:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 60 d0    	sub    %dh,-0x2f9f02d1(%rbp)
   6:	01 a5 0f 00 b6 5c    	add    %esp,0x5cb6000f(%rbp)
   c:	68 46 00 b1 26       	push   $0x26b10046
  11:	1d f1 41 62 48       	sbb    $0x486241f1,%eax
  16:	8f                   	(bad)
  17:	f9                   	stc
  18:	34 00                	xor    $0x0,%al
  1a:	1d 74 d4 1f 49       	sbb    $0x491fd474,%eax
  1f:	9d                   	popf
  20:	88 55 01             	mov    %dl,0x1(%rbp)
  23:	51                   	push   %rcx
  24:	78 08                	js     2e <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x2e>
  26:	9f                   	lahf
  27:	ce                   	(bad)
  28:	cf                   	iret
  29:	d0 33                	shlb   $1,(%rbx)
  2b:	61                   	(bad)
  2c:	2f                   	(bad)
  2d:	52                   	push   %rdx
  2e:	9f                   	lahf
  2f:	df 52 f5             	fists  -0xb(%rdx)
  32:	b4 b0                	mov    $0xb0,%ah
  34:	4e 5f                	rex.WRX pop %rdi
  36:	ef                   	out    %eax,(%dx)
  37:	4c 58                	rex.WR pop %rax
  39:	fd                   	std
  3a:	95                   	xchg   %eax,%ebp
  3b:	80 55 0a 73          	adcb   $0x73,0xa(%rbp)
  3f:	e7 43                	out    %eax,$0x43
  41:	f4                   	hlt
  42:	b5 ec                	mov    $0xec,%ch
  44:	41 93                	xchg   %eax,%r11d
  46:	82                   	(bad)
  47:	e3 de                	jrcxz  27 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x27>
  49:	7b 9f                	jnp    ffffffffffffffea <utils.cpp.0ab61856+0xffffffffffffffea>
  4b:	eb 97                	jmp    ffffffffffffffe4 <utils.cpp.0ab61856+0xffffffffffffffe4>
  4d:	cb                   	lret
  4e:	84 ec                	test   %ch,%ah
  50:	4d a4                	rex.WRB movsb %ds:(%rsi),%es:(%rdi)
  52:	4c 29 51 00          	sub    %r10,0x0(%rcx)
  56:	50                   	push   %rax
  57:	00 53 00             	add    %dl,0x0(%rbx)
  5a:	36 9c                	ss pushf
  5c:	25 6c 8f 06 3f       	and    $0x3f068f6c,%eax
  61:	40                   	rex
  62:	3e 6e                	outsb  %ds:(%rsi),(%dx)
  64:	07                   	(bad)
  65:	c9                   	leave
  66:	c7 05 22 2e 7b 07 63 	movl   $0x325c1e63,0x77b2e22(%rip)        # 77b2e92 <utils.cpp.0ab61856+0x77b2e92>
  6d:	1e 5c 32 
  70:	33 31                	xor    (%rcx),%esi
  72:	7e e6                	jle    5a <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x5a>
  74:	04 45                	add    $0x45,%al
  76:	5b                   	pop    %rbx
  77:	e2 de                	loop   57 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x57>
  79:	35 19 b3 55 cf       	xor    $0xcf55b319,%eax
  7e:	87 7d af             	xchg   %edi,-0x51(%rbp)
  81:	6b 07 5c             	imul   $0x5c,(%rdi),%eax
  84:	60                   	(bad)
  85:	df cb                	(bad)
  87:	65 34 f1             	gs xor $0xf1,%al
  8a:	02 fb                	add    %bl,%bh
  8c:	3e 3c fb             	ds cmp $0xfb,%al
  8f:	f8                   	clc
  90:	54                   	push   %rsp
  91:	74 05                	je     98 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x98>
  93:	7c 2b                	jl     c0 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0xc0>
  95:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  96:	b9 b2 7c 1c 54       	mov    $0x541c7cb2,%ecx
  9b:	33 2f                	xor    (%rdi),%ebp
  9d:	0c 43                	or     $0x43,%al
  9f:	2b ec                	sub    %esp,%ebp
  a1:	6b b9 37 db 66 d9 ce 	imul   $0xffffffce,-0x269924c9(%rcx),%edi
  a8:	60                   	(bad)
  a9:	df 46 ba             	filds  -0x46(%rsi)
  ac:	31 1f                	xor    %ebx,(%rdi)
  ae:	64 63 6c ab 37       	movsxd %fs:0x37(%rbx,%rbp,4),%ebp
  b3:	ab                   	stos   %eax,%es:(%rdi)
  b4:	35 ab e5 c1 3f       	xor    $0x3fc1e5ab,%eax
  b9:	5a                   	pop    %rdx
  ba:	bd ab d6 55 1f       	mov    $0x1f55d6ab,%ebp
  bf:	40 bc b0 62 ce 11    	rex mov $0x11ce62b0,%esp
  c5:	e1 cf                	loope  96 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x96>
  c7:	e4 89                	in     $0x89,%al
  c9:	32 50 dc             	xor    -0x24(%rax),%dl
  cc:	c6                   	(bad)
  cd:	1b c9                	sbb    %ecx,%ecx
  cf:	17                   	(bad)
  d0:	89 16                	mov    %edx,(%rsi)
  d2:	39 76 e6             	cmp    %esi,-0x1a(%rsi)
  d5:	0b 0c 31             	or     (%rcx,%rsi,1),%ecx
  d8:	86 6c 82 50          	xchg   %ch,0x50(%rdx,%rax,4)
  dc:	70 07                	jo     e5 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0xe5>
  de:	4c 8a 9e b9 02 86 d8 	rex.WR mov -0x2779fd47(%rsi),%r11b
  e5:	76 d9                	jbe    c0 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0xc0>
  e7:	1f                   	(bad)
  e8:	f6 26                	mulb   (%rsi)
  ea:	33 41 d5             	xor    -0x2b(%rcx),%eax
  ed:	be 8b bf 70 1d       	mov    $0x1d70bf8b,%esi
  f2:	44 79 81             	rex.R jns 76 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x76>
  f5:	39 71 66             	cmp    %esi,0x66(%rcx)
  f8:	76 e6                	jbe    e0 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0xe0>
  fa:	0c 2f                	or     $0x2f,%al
  fc:	ed                   	in     (%dx),%eax
  fd:	a1 b5 44 6d af c3 22 	movabs 0xbb9322c3af6d44b5,%eax
 104:	93 bb 
 106:	db c1                	fcmovnb %st(1),%st
 108:	de dd                	(bad)
 10a:	36 00 ce             	ss add %cl,%dh
 10d:	8d 10                	lea    (%rax),%edx
 10f:	72 63                	jb     174 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x174>
 111:	f6 a4 b6 d9 8d 4f fc 	mulb   -0x3b07227(%rsi,%rsi,4)
 118:	3d 29 77 6f 7c       	cmp    $0x7c6f7729,%eax
 11d:	32 07                	xor    (%rdi),%al
 11f:	6f                   	outsl  %ds:(%rsi),(%dx)
 120:	49 5d                	rex.WB pop %r13
 122:	90                   	nop
 123:	4e cd 8c             	rex.WRX int $0x8c
 126:	08 ba 06 70 84 bb    	or     %bh,-0x447b8ffa(%rdx)
 12c:	31 87 de 92 df cd    	xor    %eax,-0x32206d22(%rdi)
 132:	a9 a1 a1 a2 3c       	test   $0x3ca2a1a1,%eax
 137:	ec                   	in     (%dx),%al
 138:	c3                   	ret
 139:	58                   	pop    %rax
 13a:	b5 b6                	mov    $0xb6,%ch
 13c:	39 e7                	cmp    %esp,%edi
 13e:	4f f8                	rex.WRXB clc
 140:	28 f2                	sub    %dh,%dl
 142:	f1                   	int1
 143:	1b 61 58             	sbb    0x58(%rcx),%esp
 146:	44 a4                	rex.R movsb %ds:(%rsi),%es:(%rdi)
 148:	ec                   	in     (%dx),%al
 149:	34 f8                	xor    $0xf8,%al
 14b:	3a 48 18             	cmp    0x18(%rax),%cl
 14e:	22 06                	and    (%rsi),%al
 150:	9c                   	pushf
 151:	0a b5 32 e9 36 8f    	or     -0x70c916ce(%rbp),%dh
 157:	88 34 50             	mov    %dh,(%rax,%rdx,2)
 15a:	30 42 22             	xor    %al,0x22(%rdx)
 15d:	11 71 2a             	adc    %esi,0x2a(%rcx)
 160:	55                   	push   %rbp
 161:	89 db                	mov    %ebx,%ebx
 163:	70 ea                	jo     14f <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x14f>
 165:	56                   	push   %rsi
 166:	2c 50                	sub    $0x50,%al
 168:	e9 56 a9 4e 38       	jmp    384eaac3 <utils.cpp.0ab61856+0x384eaac3>
 16d:	52                   	push   %rdx
 16e:	77 32                	ja     1a2 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x1a2>
 170:	31 95 84 48 dd 29    	xor    %edx,0x29dd4884(%rbp)
 176:	64 2a 61 9d          	sub    %fs:-0x63(%rcx),%ah
 17a:	4a a9 8e 80 4d a9    	rex.WX test $0xffffffffa94d808e,%rax
 180:	0e                   	(bad)
 181:	d5 51 48             	{rex2 0x51} dec %r24d
 184:	f0 00 42 05          	lock add %al,0x5(%rdx)
 188:	14 6b                	adc    $0x6b,%al
 18a:	95                   	xchg   %eax,%ebp
 18b:	22 61 59             	and    0x59(%rcx),%ah
 18e:	08 99 50 1a 4e 42    	or     %bl,0x424e1a50(%rcx)
 194:	9c                   	pushf
 195:	6d                   	insl   (%dx),%es:(%rdi)
 196:	70 7e                	jo     216 <utils.cpp.0ab61856+0x216>
 198:	63 b6 3d cd 55 47    	movsxd 0x4755cd3d(%rsi),%esi
 19e:	4e 0d 9e 94 55 e9    	rex.WRX or $0xffffffffe955949e,%rax
 1a4:	f9                   	stc
 1a5:	68 ba a8 e8 99       	push   $0xffffffff99e8a8ba
 1aa:	73 22                	jae    1ce <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x1ce>
 1ac:	f0 28 23             	lock sub %ah,(%rbx)
 1af:	20 a0 82 19 a3 eb    	and    %ah,-0x145ce67e(%rax)
 1b5:	4c aa                	rex.WR stos %al,%es:(%rdi)
 1b7:	7d d9                	jge    192 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x192>
 1b9:	81 d2 9e b7 01 5e    	adc    $0x5e01b79e,%edx
 1bf:	c3                   	ret
 1c0:	e6 ee                	out    %al,$0xee
 1c2:	70 a1                	jo     165 <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x165>
 1c4:	f1                   	int1
 1c5:	0b b8 24 01 cb c2    	or     -0x3d34fedc(%rax),%edi
 1cb:	9b                   	fwait
 1cc:	79 9d                	jns    16b <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x16b>
 1ce:	e8 96 11 75 75       	call   75751369 <utils.cpp.0ab61856+0x75751369>
 1d3:	2f                   	(bad)
 1d4:	01 37                	add    %esi,(%rdi)
 1d6:	20 89 b7 c5 73 b1    	and    %cl,-0x4e8c3a49(%rcx)
 1dc:	0e                   	(bad)
 1dd:	17                   	(bad)
 1de:	c9                   	leave
 1df:	2a dc                	sub    %ah,%bl
 1e1:	07                   	(bad)
 1e2:	23 cb                	and    %ebx,%ecx
 1e4:	92                   	xchg   %eax,%edx
 1e5:	d6                   	(bad)
 1e6:	5f                   	pop    %rdi
 1e7:	04 06                	add    $0x6,%al
 1e9:	f1                   	int1
 1ea:	20 fb                	and    %bh,%bl
 1ec:	cc                   	int3
 1ed:	a1 8b 89 11 49 80 db 	movabs 0x3a2bdb804911898b,%eax
 1f4:	2b 3a 
 1f6:	98                   	cwtl
 1f7:	ba d3 e3 8d 45       	mov    $0x458de3d3,%edx
 1fc:	7b 9e                	jnp    19c <.gnu.lto__ZN10QuantumNEC3Lib8IS_DIGITIcEEDaRKT_.14.7c70a44ae594ff4d+0x19c>

Disassembly of section .gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d>:
       0:	28 b5 2f fd 60 95    	sub    %dh,-0x6a9f02d1(%rbp)
       6:	2c 45                	sub    $0x45,%al
       8:	af                   	scas   %es:(%rdi),%eax
       9:	00 8a 1b 59 3e 41    	add    %cl,0x413e591b(%rdx)
       f:	10 28                	adc    %ch,(%rax)
      11:	4f                   	rex.WRXB
      12:	67 38 5b 93          	cmp    %bl,-0x6d(%ebx)
      16:	ce                   	(bad)
      17:	d6                   	(bad)
      18:	8d b6 5e 71 4f d8    	lea    -0x27b08ea2(%rsi),%esi
      1e:	39 1a                	cmp    %ebx,(%rdx)
      20:	0e                   	(bad)
      21:	e3 a8                	jrcxz  ffffffffffffffcb <utils.cpp.0ab61856+0xffffffffffffffcb>
      23:	49                   	rex.WB
      24:	46 d3 04 39          	rex.RX roll %cl,(%rcx,%r15,1)
      28:	b4 a7                	mov    $0xa7,%ah
      2a:	98                   	cwtl
      2b:	c3                   	ret
      2c:	56                   	push   %rsi
      2d:	c0 ac 9f 6e 93 94 1b 	shrb   $0x37,0x1b94936e(%rdi,%rbx,4)
      34:	37 
      35:	b7 4d                	mov    $0x4d,%bh
      37:	21 3a                	and    %edi,(%rdx)
      39:	c8 ca 9c 1c          	enter  $0x9cca,$0x1c
      3d:	ea                   	(bad)
      3e:	14 39                	adc    $0x39,%al
      40:	11 03                	adc    %eax,(%rbx)
      42:	b1 3a                	mov    $0x3a,%cl
      44:	23 28                	and    (%rax),%ebp
      46:	13 07                	adc    (%rdi),%eax
      48:	e8 63 26 22 42       	call   422226b0 <utils.cpp.0ab61856+0x422226b0>
      4d:	92                   	xchg   %eax,%edx
      4e:	94                   	xchg   %eax,%esp
      4f:	32 f9                	xor    %cl,%bh
      51:	03 88 03 d3 03 bd    	add    -0x42fc2cfd(%rax),%ecx
      57:	cd f7                	int    $0xf7
      59:	32 df                	xor    %bh,%bl
      5b:	bb ec 5e 65 b3       	mov    $0xb3655eec,%ebx
      60:	37                   	(bad)
      61:	f9                   	stc
      62:	de 37                	fidivs (%rdi)
      64:	7b fb                	jnp    61 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x61>
      66:	bd dc 5c 96 a4       	mov    $0xa4965cdc,%ebp
      6b:	82                   	(bad)
      6c:	aa                   	stos   %al,%es:(%rdi)
      6d:	7a 6c                	jp     db <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xdb>
      6f:	ca 5a 10             	lret   $0x105a
      72:	ae                   	scas   %es:(%rdi),%al
      73:	6b 99 49 90 6b a0 64 	imul   $0x64,-0x5f946fb7(%rcx),%ebx
      7a:	55                   	push   %rbp
      7b:	0d 33 32 2f 32       	or     $0x322f3233,%eax
      80:	0f 62 fe             	punpckldq %mm6,%mm7
      83:	63 06                	movsxd (%rsi),%eax
      85:	64 b6 c3             	fs mov $0xc3,%dh
      88:	3c c8                	cmp    $0xc8,%al
      8a:	5c                   	pop    %rsp
      8b:	c8 5c 65 36          	enter  $0x655c,$0x36
      8f:	64 d6                	fs (bad)
      91:	c3                   	ret
      92:	1b 65 c6             	sbb    -0x3a(%rbp),%esp
      95:	07                   	(bad)
      96:	65 63 3d 46 6b e6 20 	movsxd %gs:0x20e66b46(%rip),%edi        # 20e66be3 <utils.cpp.0ab61856+0x20e66be3>
      9d:	57                   	push   %rdi
      9e:	0b 56 14             	or     0x14(%rsi),%edx
      a1:	8f                   	(bad)
      a2:	50                   	push   %rax
      a3:	9c                   	pushf
      a4:	d6                   	(bad)
      a5:	40 25 2e 80 a3 e6    	rex and $0xe6a3802e,%eax
      ab:	39 36                	cmp    %esi,(%rsi)
      ad:	36 9a                	ss (bad)
      af:	93                   	xchg   %eax,%ebx
      b0:	e2 11                	loop   c3 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc3>
      b2:	b4 08                	mov    $0x8,%ah
      b4:	11 9b 2e 87 8e 50    	adc    %ebx,0x508e872e(%rbx)
      ba:	a2 c6 f8 a0 17 34 a4 	movabs %al,0x8235a43417a0f8c6
      c1:	35 82 
      c3:	8a a0 34 d7 bb 34    	mov    0x34bbd734(%rax),%ah
      c9:	66 35 d1 74          	xor    $0x74d1,%ax
      cd:	0e                   	(bad)
      ce:	72 ba                	jb     8a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x8a>
      d0:	e2 0a                	loop   dc <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xdc>
      d2:	0b 23                	or     (%rbx),%esp
      d4:	82                   	(bad)
      d5:	92                   	xchg   %eax,%edx
      d6:	5c                   	pop    %rsp
      d7:	c3                   	ret
      d8:	2c 95                	sub    $0x95,%al
      da:	31 4e e7             	xor    %ecx,-0x19(%rsi)
      dd:	f2 d6                	repnz (bad)
      df:	31 3e                	xor    %edi,(%rsi)
      e1:	14 cb                	adc    $0xcb,%al
      e3:	6e                   	outsb  %ds:(%rsi),(%dx)
      e4:	9a                   	(bad)
      e5:	ac                   	lods   %ds:(%rsi),%al
      e6:	7c da                	jl     c2 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc2>
      e8:	e5 a6                	in     $0xa6,%eax
      ea:	05 87 d6 d9 3c       	add    $0x3cd9d687,%eax
      ef:	5b                   	pop    %rbx
      f0:	3d cd b5 83 b5       	cmp    $0xb583b5cd,%eax
      f5:	07                   	(bad)
      f6:	a2 dc 5c 1e d3 11 d6 	movabs %al,0xa172d611d31e5cdc
      fd:	72 a1 
      ff:	65 43 eb 64          	gs rex.XB jmp 167 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x167>
     103:	8e b0 18 c5 90 9f    	mov    -0x606f3ae8(%rax),%?
     109:	41 78 4d             	rex.B js 159 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x159>
     10c:	45                   	rex.RB
     10d:	26 21 ac 65 c5 65 42 	es and %ebp,-0x14bd9a3b(%rbp,%riz,2)
     114:	eb 
     115:	64 32 0e             	xor    %fs:(%rsi),%cl
     118:	92                   	xchg   %eax,%edx
     119:	92                   	xchg   %eax,%edx
     11a:	5c                   	pop    %rsp
     11b:	c3                   	ret
     11c:	f0 ad                	lock lods %ds:(%rsi),%eax
     11e:	6d                   	insl   (%dx),%es:(%rdi)
     11f:	ec                   	in     (%dx),%al
     120:	88 37                	mov    %dh,(%rdi)
     122:	9d                   	popf
     123:	83 ec a0             	sub    $0xffffffa0,%esp
     126:	29 28                	sub    %ebp,(%rax)
     128:	50                   	push   %rax
     129:	e2 ae                	loop   d9 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xd9>
     12b:	93                   	xchg   %eax,%ebx
     12c:	01 ed                	add    %ebp,%ebp
     12e:	3a 59 f9             	cmp    -0x7(%rcx),%bl
     131:	5d                   	pop    %rbp
     132:	2c cb                	sub    $0xcb,%al
     134:	75 38                	jne    16e <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x16e>
     136:	90                   	nop
     137:	05 99 90 ef 30       	add    $0x30ef9099,%eax
     13c:	1e                   	(bad)
     13d:	ce                   	(bad)
     13e:	c3                   	ret
     13f:	87 cc                	xchg   %ecx,%esp
     141:	87 fd                	xchg   %edi,%ebp
     143:	30 e2                	xor    %ah,%dl
     145:	3a 97 91 7f d6 d1    	cmp    -0x2e29806f(%rdi),%dl
     14b:	89 81 b2 b9 3c 34    	mov    %eax,0x343cb9b2(%rcx)
     151:	6b 9f 75 6c ae 2b 18 	imul   $0x18,0x2bae6c75(%rdi),%ebx
     158:	9e                   	sahf
     159:	b2 39                	mov    $0x39,%dl
     15b:	48 0d d0 b0 f8 0d    	or     $0xdf8b0d0,%rax
     161:	63 e1                	movsxd %ecx,%esp
     163:	3d eb c8 4a f4       	cmp    $0xf44ac8eb,%eax
     168:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     169:	e0 b8                	loopne 123 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x123>
     16b:	e8 b1 12 35 56       	call   56351421 <utils.cpp.0ab61856+0x56351421>
     170:	15 23 06 6b d7       	adc    $0xd76b0623,%eax
     175:	d0 4a 72             	rorb   $1,0x72(%rdx)
     178:	0d 13 b5 6a b9       	or     $0xb96ab513,%eax
     17d:	20 8b e3 ba f2 79    	and    %cl,0x79f2bae3(%rbx)
     183:	99                   	cltd
     184:	ab                   	stos   %eax,%es:(%rdi)
     185:	8a 25 79 6d 35 e3    	mov    -0x1cca9287(%rip),%ah        # ffffffffe3356f04 <utils.cpp.0ab61856+0xffffffffe3356f04>
     18b:	e0 8e                	loopne 11b <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x11b>
     18d:	8b 9a 42 3a 55 26    	mov    0x26553a42(%rdx),%ebx
     193:	73 33                	jae    1c8 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1c8>
     195:	e8 a5 4a 9f 9d       	call   ffffffff9d9f4c3f <utils.cpp.0ab61856+0xffffffff9d9f4c3f>
     19a:	2a 58 21             	sub    0x21(%rax),%bl
     19d:	a0 d8 8d a7 75 ed 6b 	movabs 0xf8546bed75a78dd8,%al
     1a4:	54 f8 
     1a6:	d5 64 25 93 0f 16 ff 	{rex2 0x64} and $0xff160f93,%eax
     1ad:	89 25 d7 3f ce a2    	mov    %esp,-0x5d31c029(%rip)        # ffffffffa2ce418a <utils.cpp.0ab61856+0xffffffffa2ce418a>
     1b3:	98                   	cwtl
     1b4:	c6                   	(bad)
     1b5:	71 5d                	jno    214 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x214>
     1b7:	57                   	push   %rdi
     1b8:	14 ac                	adc    $0xac,%al
     1ba:	5c                   	pop    %rsp
     1bb:	09 9a 4b 45 58 49    	or     %ebx,0x4958454b(%rdx)
     1c1:	3f                   	(bad)
     1c2:	2a 75 20             	sub    0x20(%rbp),%dh
     1c5:	69 29 62 9d 0e 05    	imul   $0x50e9d62,(%rcx),%ebp
     1cb:	75 aa                	jne    177 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x177>
     1cd:	85 eb                	test   %ebp,%ebx
     1cf:	5a                   	pop    %rdx
     1d0:	58                   	pop    %rax
     1d1:	b5 49                	mov    $0x49,%ch
     1d3:	9a                   	(bad)
     1d4:	ac                   	lods   %ds:(%rsi),%al
     1d5:	5c                   	pop    %rsp
     1d6:	ea                   	(bad)
     1d7:	c1 ea de             	shr    $0xde,%edx
     1da:	65 3e 96             	gs ds xchg %eax,%esi
     1dd:	83 85 e7 58 61 10 eb 	addl   $0xffffffeb,0x106158e7(%rbp)
     1e4:	fa                   	cli
     1e5:	37                   	(bad)
     1e6:	42 e1 ba             	rex.X loope 1a3 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1a3>
     1e9:	f2 55                	repnz push %rbp
     1eb:	2d 8f 26 2b 97       	sub    $0x972b268f,%eax
     1f0:	af                   	scas   %es:(%rdi),%eax
     1f1:	c9                   	leave
     1f2:	7b 0c                	jnp    200 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x200>
     1f4:	07                   	(bad)
     1f5:	cb                   	lret
     1f6:	8a f1                	mov    %cl,%dh
     1f8:	5a                   	pop    %rdx
     1f9:	5a                   	pop    %rdx
     1fa:	53                   	push   %rbx
     1fb:	ce                   	(bad)
     1fc:	06                   	(bad)
     1fd:	d1 40 c8             	roll   $1,-0x38(%rax)
     200:	75 5d                	jne    25f <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x25f>
     202:	55                   	push   %rbp
     203:	44 b1 85             	rex.R mov $0x85,%cl
     206:	25 2b 93 0c b5       	and    $0xb50c932b,%eax
     20b:	64 e5 39             	fs in  $0x39,%eax
     20e:	58                   	pop    %rax
     20f:	11 fb                	adc    %edi,%ebx
     211:	61                   	(bad)
     212:	63 ac 8b 65 b1 27 36 	movsxd 0x3627b165(%rbx,%rcx,4),%ebp
     219:	71 ff                	jno    21a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x21a>
     21b:	28 89 f1 02 5a c4    	sub    %cl,-0x3ba5fd0f(%rcx)
     221:	fd                   	std
     222:	b3 7e                	mov    $0x7e,%bl
     224:	b6 cf                	mov    $0xcf,%dh
     226:	f2 d9 3d 7b b8 7a 36 	repnz fnstcw 0x367ab87b(%rip)        # 367abaa8 <utils.cpp.0ab61856+0x367abaa8>
     22d:	cf                   	iret
     22e:	1a 2e                	sbb    (%rsi),%ch
     230:	9e                   	sahf
     231:	ad                   	lods   %ds:(%rsi),%eax
     232:	ee                   	out    %al,(%dx)
     233:	9d                   	popf
     234:	2d 5c c2 1d 5c       	sub    $0x5c1dc25c,%eax
     239:	c1 b5 b3 81 0b b8 75 	shll   $0x75,-0x47f47e4d(%rbp)
     240:	f6 6f a9             	imulb  -0x57(%rdi)
     243:	eb b7                	jmp    1fc <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1fc>
     245:	7d 4b                	jge    292 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x292>
     247:	67 a7                	cmpsl  %es:(%edi),%ds:(%esi)
     249:	3b 67 e5             	cmp    -0x1b(%rdi),%esp
     24c:	2c 9f                	sub    $0x9f,%al
     24e:	8d 1a                	lea    (%rdx),%ebx
     250:	34 66                	xor    $0x66,%al
     252:	08 20                	or     %ah,(%rax)
     254:	23 06                	and    (%rsi),%eax
     256:	8c 17                	mov    %ss,(%rdi)
     258:	2e ae                	cs scas %es:(%rdi),%al
     25a:	5a                   	pop    %rdx
     25b:	b0 58                	mov    $0x58,%al
     25d:	61                   	(bad)
     25e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     25f:	22 45 15             	and    0x15(%rbp),%al
     262:	15 8a 13 53 26       	adc    $0x2653138a,%eax
     267:	4a 90                	rex.WX nop
     269:	18 21                	sbb    %ah,(%rcx)
     26b:	25 22 04 88 0f       	and    $0xf880422,%eax
     270:	51                   	push   %rcx
     271:	1e                   	(bad)
     272:	3a 70 d8             	cmp    -0x28(%rax),%dh
     275:	10 80 86 0c 00 60    	adc    %al,0x60000c86(%rax)
     27b:	b8 60 a1 02 d4       	mov    $0xd402a160,%eax
     280:	13 05 a7 26 a6 09    	adc    0x9a626a7(%rip),%eax        # 9a6292d <utils.cpp.0ab61856+0x9a6292d>
     286:	12 9c 4b 4a 4d e6 26 	adc    0x26e64d4a(%rbx,%rcx,2),%bl
     28d:	2e 95                	cs xchg %eax,%ebp
     28f:	c9                   	leave
     290:	b7 d8                	mov    $0xd8,%bh
     292:	72 1a                	jb     2ae <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x2ae>
     294:	db 18                	fistpl (%rax)
     296:	2f                   	(bad)
     297:	20 44 7e 8a          	and    %al,-0x76(%rsi,%rdi,2)
     29b:	2c 04                	sub    $0x4,%al
     29d:	87 17                	xchg   %edx,(%rdi)
     29f:	71 0f                	jno    2b0 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x2b0>
     2a1:	50                   	push   %rax
     2a2:	59                   	pop    %rcx
     2a3:	ef                   	out    %eax,(%dx)
     2a4:	1f                   	(bad)
     2a5:	45 39 3d 5e 3f 4a 83 	cmp    %r15d,-0x7cb5c0a2(%rip)        # ffffffff834a420a <utils.cpp.0ab61856+0xffffffff834a420a>
     2ac:	0a f5                	or     %ch,%dh
     2ae:	e1 e3                	loope  293 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x293>
     2b0:	86 77 8f             	xchg   %dh,-0x71(%rdi)
     2b3:	34 af                	xor    $0xaf,%al
     2b5:	f7 30                	divl   (%rax)
     2b7:	8e 9f 1e 38 85 f2    	mov    -0xd7ac7e2(%rdi),%ds
     2bd:	d4                   	(bad)
     2be:	f1                   	int1
     2bf:	1a f6                	sbb    %dh,%dh
     2c1:	c1 53 45 c3          	rcll   $0xc3,0x45(%rbx)
     2c5:	7b 87                	jnp    24e <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x24e>
     2c7:	03 fe                	add    %esi,%edi
     2c9:	80 93 6e 71 65 67 7a 	adcb   $0x7a,0x6765716e(%rbx)
     2d0:	0b b1 da 44 a9 84    	or     -0x7b56bb26(%rcx),%esi
     2d6:	83 65 78 05          	andl   $0x5,0x78(%rbp)
     2da:	e1 c8                	loope  2a4 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x2a4>
     2dc:	f4                   	hlt
     2dd:	da 09                	fimull (%rcx)
     2df:	6c                   	insb   (%dx),%es:(%rdi)
     2e0:	0b 04 c4             	or     (%rsp,%rax,8),%eax
     2e3:	80 b7 ce 9b 98 de 3f 	xorb   $0x3f,-0x21676432(%rdi)
     2ea:	34 61                	xor    $0x61,%al
     2ec:	78 a9                	js     297 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x297>
     2ee:	ec                   	in     (%dx),%al
     2ef:	05 d0 30 4a e8       	add    $0xe84a30d0,%eax
     2f4:	d7                   	xlat   %ds:(%rbx)
     2f5:	c7 85 97 ce 96 67 ef 	movl   $0x390434ef,0x6796ce97(%rbp)
     2fc:	34 04 39 
     2ff:	35 de 39 6e 2b       	xor    $0x2b6e39de,%eax
     304:	47                   	rex.RXB
     305:	4e 0b 2f             	rex.WRX or (%rdi),%r13
     308:	df 86 b8 32 2d 71    	filds  0x712d32b8(%rsi)
     30e:	65 59                	gs pop %rcx
     310:	da 06                	fiaddl (%rsi)
     312:	8f 45 51             	pop    0x51(%rbp)
     315:	6a 0d                	push   $0xd
     317:	1a 92 78 46 24 48    	sbb    0x48244678(%rdx),%dl
     31d:	2d 00 95 42 32       	sub    $0x32429500,%eax
     322:	46 80 ec 18          	rex.RX sub $0x18,%spl
     326:	91                   	xchg   %eax,%ecx
     327:	0c 23                	or     $0x23,%al
     329:	af                   	scas   %es:(%rdi),%eax
     32a:	83 b8 b6 48 7e 01 42 	cmpl   $0x42,0x17e48b6(%rax)
     331:	a2 76 a1 88 af a8 1e 	movabs %al,0x10841ea8af88a176
     338:	84 10 
     33a:	d7                   	xlat   %ds:(%rbx)
     33b:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     33c:	88 5b 20             	mov    %bl,0x20(%rbx)
     33f:	3a d4                	cmp    %ah,%dl
     341:	2c 1a                	sub    $0x1a,%al
     343:	79 c5                	jns    30a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x30a>
     345:	05 ea 5b 08 71       	add    $0x71085bea,%eax
     34a:	6d                   	insl   (%dx),%es:(%rdi)
     34b:	8d 6c 85 88          	lea    -0x78(%rbp,%rax,4),%ebp
     34f:	b1 55                	mov    $0x55,%cl
     351:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     352:	30 94 d8 55 86 98 0a 	xor    %dl,0xa988655(%rax,%rbx,8)
     359:	10 62 a3             	adc    %ah,-0x5d(%rdx)
     35c:	f8                   	clc
     35d:	43 a8 4f             	rex.XB test $0x4f,%al
     360:	9f                   	lahf
     361:	f0 c3                	lock ret
     363:	53                   	push   %rbx
     364:	9c                   	pushf
     365:	c4                   	(bad)
     366:	9b                   	fwait
     367:	ce                   	(bad)
     368:	49 e3 da             	rex.WB jrcxz 345 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x345>
     36b:	fc                   	cld
     36c:	b0 09                	mov    $0x9,%al
     36e:	3e 5c                	ds pop %rsp
     370:	82                   	(bad)
     371:	cf                   	iret
     372:	9e                   	sahf
     373:	26 d1 7f 8d          	es sarl $1,-0x73(%rdi)
     377:	83 23 26             	andl   $0x26,(%rbx)
     37a:	38 93 12 0c 6c 11    	cmp    %dl,0x116c0c12(%rbx)
     380:	76 38                	jbe    3ba <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x3ba>
     382:	44 94                	rex.R xchg %eax,%esp
     384:	4d 17                	rex.WRB (bad)
     386:	3b 0c 02             	cmp    (%rdx,%rax,1),%ecx
     389:	f0 af                	lock scas %es:(%rdi),%eax
     38b:	3f                   	(bad)
     38c:	6c                   	insb   (%dx),%es:(%rdi)
     38d:	d0 56 87             	rclb   $1,-0x79(%rsi)
     390:	a3 08 ad 99 ce 45 c6 	movabs %eax,0xd5b5c645ce99ad08
     397:	b5 d5 
     399:	61                   	(bad)
     39a:	0f 80 71 ba 03 1c    	jo     1c03be11 <utils.cpp.0ab61856+0x1c03be11>
     3a0:	41 fc                	rex.B cld
     3a2:	c1 83 b5 c1 e6 90 16 	roll   $0x16,-0x6f193e4b(%rbx)
     3a9:	86 70 d2             	xchg   %dh,-0x2e(%rax)
     3ac:	23 68 9a             	and    -0x66(%rax),%ebp
     3af:	0b f6                	or     %esi,%esi
     3b1:	c6                   	(bad)
     3b2:	a8 d9                	test   $0xd9,%al
     3b4:	c5 95 a9             	(bad)
     3b7:	99                   	cltd
     3b8:	b0 e1                	mov    $0xe1,%al
     3ba:	43 5c                	rex.XB pop %r12
     3bc:	9b                   	fwait
     3bd:	1e                   	(bad)
     3be:	07                   	(bad)
     3bf:	a0 a7 c1 4d 06 29 00 	movabs 0x6f790029064dc1a7,%al
     3c6:	79 6f 
     3c8:	1a c3                	sbb    %bl,%al
     3ca:	05 bb b6 50 d7       	add    $0xd750b6bb,%eax
     3cf:	15 d4 30 54 1a       	adc    $0x1a5430d4,%eax
     3d4:	34 fd                	xor    $0xfd,%al
     3d6:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     3d7:	86 83 a6 e0 04 ed    	xchg   %al,-0x12fb1f5a(%rbx)
     3dd:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     3de:	33 65 9a             	xor    -0x66(%rbp),%esp
     3e1:	a9 ed 0c 4f 50       	test   $0x504f0ced,%eax
     3e6:	5c                   	pop    %rsp
     3e7:	83 f3 60             	xor    $0x60,%ebx
     3ea:	8d 4c 4b 50          	lea    0x50(%rbx,%rcx,2),%ecx
     3ee:	2a 73 e2             	sub    -0x1e(%rbx),%dh
     3f1:	59                   	pop    %rcx
     3f2:	62 ca 29 29 19       	(bad)
     3f7:	35 b1 fa a8 69       	xor    $0x69a8fab1,%eax
     3fc:	6c                   	insb   (%dx),%es:(%rdi)
     3fd:	6e                   	outsb  %ds:(%rsi),(%dx)
     3fe:	cc                   	int3
     3ff:	c4                   	(bad)
     400:	60                   	(bad)
     401:	89 0d 2d cc 9b 98    	mov    %ecx,-0x676433d3(%rip)        # ffffffff989bd034 <utils.cpp.0ab61856+0xffffffff989bd034>
     407:	b8 b5 31 cb 4d       	mov    $0x4dcb31b5,%eax
     40c:	64 de 58 d7          	ficomps %fs:-0x29(%rax)
     410:	b5 82                	mov    $0x82,%ch
     412:	a2 5c 1c 5e 26 bd c4 	movabs %al,0xc5c9c4bd265e1c5c
     419:	c9 c5 
     41b:	61                   	(bad)
     41c:	65 05 3f 45 5e e2    	gs add $0xe25e453f,%eax
     422:	e4 de                	in     $0xde,%al
     424:	70 92                	jo     3b8 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x3b8>
     426:	89 cd                	mov    %ecx,%ebp
     428:	82                   	(bad)
     429:	44 6e                	rex.R outsb %ds:(%rsi),(%dx)
     42b:	35 36 b3 3e 03       	xor    $0x33eb336,%eax
     430:	e2 1d                	loop   44f <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x44f>
     432:	76 51                	jbe    485 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x485>
     434:	42 2f                	rex.X (bad)
     436:	71 72                	jno    4aa <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x4aa>
     438:	7a dc                	jp     416 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x416>
     43a:	49 b1 49             	rex.WB mov $0x49,%r9b
     43d:	93                   	xchg   %eax,%ebx
     43e:	26 6d                	es insl (%dx),%es:(%rdi)
     440:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     441:	b1 b5                	mov    $0xb5,%cl
     443:	f1                   	int1
     444:	3e b0 bb             	ds mov $0xbb,%al
     447:	4c b4 dd             	rex.WR mov $0xdd,%spl
     44a:	6d                   	insl   (%dx),%es:(%rdi)
     44b:	b4 2b                	mov    $0x2b,%ah
     44d:	c5 14 cb             	(bad)
     450:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     451:	f3 a1 23 4f 14 ae c0 	repz movabs 0x23bba1c0ae144f23,%eax
     458:	a1 bb 23 
     45b:	61                   	(bad)
     45c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     45d:	70 28                	jo     487 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x487>
     45f:	5b                   	pop    %rbx
     460:	dd 99 1a 0f 39 cd    	fstpl  -0x32c6f0e6(%rcx)
     466:	9f                   	lahf
     467:	d0 50 cf             	rclb   $1,-0x31(%rax)
     46a:	1a 91 7d 75 42 73    	sbb    0x7342757d(%rcx),%dl
     470:	13 75 82             	adc    -0x7e(%rbp),%esi
     473:	5d                   	pop    %rbp
     474:	06                   	(bad)
     475:	21 f2                	and    %esi,%edx
     477:	e2 32                	loop   4ab <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x4ab>
     479:	95                   	xchg   %eax,%ebp
     47a:	e5 72                	in     $0x72,%eax
     47c:	02 4b 3e             	add    0x3e(%rbx),%cl
     47f:	f3 5d                	repz pop %rbp
     481:	46 73 66             	rex.RX jae 4ea <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x4ea>
     484:	1e                   	(bad)
     485:	3c d3                	cmp    $0xd3,%al
     487:	2c 67                	sub    $0x67,%al
     489:	27                   	(bad)
     48a:	5b                   	pop    %rbx
     48b:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     48c:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     48d:	3b 35 3d 08 9f a6    	cmp    -0x5960f7c3(%rip),%esi        # ffffffffa69f0cd0 <utils.cpp.0ab61856+0xffffffffa69f0cd0>
     493:	29 d6                	sub    %edx,%esi
     495:	5a                   	pop    %rdx
     496:	32 bd ab d3 43 4a    	xor    0x4a43d3ab(%rbp),%bh
     49c:	b4 9a                	mov    $0x9a,%ah
     49e:	4c 13 8e 64 4f 24 93 	adc    -0x6cdbb09c(%rsi),%r9
     4a5:	84 b3 9a 93 40 4c    	test   %dh,0x4c40939a(%rbx)
     4ab:	5b                   	pop    %rbx
     4ac:	bb d0 1c 88 fb       	mov    $0xfb881cd0,%ebx
     4b1:	86 a8 ed 32 40 a4    	xchg   %ch,-0x5bbfcd13(%rax)
     4b7:	59                   	pop    %rcx
     4b8:	4d c2 95 73          	rex.WRB ret $0x7395
     4bc:	f0 02 99 9d 6c c2 a1 	lock add -0x5e3d9363(%rcx),%bl
     4c3:	cb                   	lret
     4c4:	50                   	push   %rax
     4c5:	96                   	xchg   %eax,%esi
     4c6:	4c 77 0a             	rex.WR ja 4d3 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x4d3>
     4c9:	8a 9e da f9 5d 07    	mov    0x75df9da(%rsi),%bl
     4cf:	92                   	xchg   %eax,%edx
     4d0:	34 ab                	xor    $0xab,%al
     4d2:	31 dd                	xor    %ebx,%ebp
     4d4:	93                   	xchg   %eax,%ebx
     4d5:	50                   	push   %rax
     4d6:	b3 93                	mov    $0x93,%bl
     4d8:	39 0f                	cmp    %ecx,(%rdi)
     4da:	66 a7                	cmpsw  %es:(%rdi),%ds:(%rsi)
     4dc:	8a 59 83             	mov    -0x7d(%rcx),%bl
     4df:	7f 05                	jg     4e6 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x4e6>
     4e1:	e6 3d                	out    %al,$0x3d
     4e3:	92                   	xchg   %eax,%edx
     4e4:	ad                   	lods   %ds:(%rsi),%eax
     4e5:	cc                   	int3
     4e6:	12 e6                	adc    %dh,%ah
     4e8:	50                   	push   %rax
     4e9:	70 d7                	jo     4c2 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x4c2>
     4eb:	d9 cc                	fxch   %st(4)
     4ed:	9d                   	popf
     4ee:	8b 22                	mov    (%rdx),%esp
     4f0:	70 61                	jo     553 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x553>
     4f2:	66 8c 74 c2 fd       	data16 mov %?,-0x3(%rdx,%rax,8)
     4f7:	89 92 bb 73 91 6a    	mov    %edx,0x6a9173bb(%rdx)
     4fd:	01 33                	add    %esi,(%rbx)
     4ff:	63 a2 25 32 63 9a    	movsxd -0x659ccddb(%rdx),%esp
     505:	8b 60 98             	mov    -0x68(%rax),%esp
     508:	51                   	push   %rcx
     509:	90                   	nop
     50a:	12 98 3f c9 b8 3b    	adc    0x3bb8c93f(%rax),%bl
     510:	3f                   	(bad)
     511:	58                   	pop    %rax
     512:	cc                   	int3
     513:	c2 cc c8             	ret    $0xc8cc
     516:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     517:	59                   	pop    %rcx
     518:	e5 36                	in     $0x36,%eax
     51a:	26 d0 89 f7 70 d9 75 	es rorb $1,0x75d970f7(%rcx)
     521:	ce                   	(bad)
     522:	e0 ce                	loopne 4f2 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x4f2>
     524:	0f f0                	(bad)
     526:	d0 dc                	rcr    $1,%ah
     528:	5a                   	pop    %rdx
     529:	8d 99 f1 0c f3 50    	lea    0x50f30cf1(%rcx),%ebx
     52f:	fe 42 b5             	incb   -0x4b(%rdx)
     532:	53                   	push   %rbx
     533:	32 dc                	xor    %ah,%bl
     535:	37                   	(bad)
     536:	b9 ec e7 bb fe       	mov    $0xfebbe7ec,%ecx
     53b:	dc 0b                	fmull  (%rbx)
     53d:	b6 d7                	mov    $0xd7,%dh
     53f:	54                   	push   %rsp
     540:	40 ba 5b cd 3c b7    	rex mov $0xb73ccd5b,%edx
     546:	b7 50                	mov    $0x50,%bh
     548:	19 de                	sbb    %ebx,%esi
     54a:	ad                   	lods   %ds:(%rsi),%eax
     54b:	ab                   	stos   %eax,%es:(%rdi)
     54c:	96                   	xchg   %eax,%esi
     54d:	ed                   	in     (%dx),%eax
     54e:	b4 13                	mov    $0x13,%ah
     550:	7d ce                	jge    520 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x520>
     552:	b6 d1                	mov    $0xd1,%dh
     554:	42 3c 96             	rex.X cmp $0x96,%al
     557:	6d                   	insl   (%dx),%es:(%rdi)
     558:	9b                   	fwait
     559:	8d 71 99             	lea    -0x67(%rcx),%esi
     55c:	28 d6                	sub    %dl,%dh
     55e:	5a                   	pop    %rdx
     55f:	b2 f2                	mov    $0xf2,%dl
     561:	83 99 d5 f1 6e 35 b3 	sbbl   $0xffffffb3,0x356ef1d5(%rcx)
     568:	4e f5                	rex.WRX cmc
     56a:	d8 ee                	fsubr  %st(6),%st
     56c:	3a 32                	cmp    (%rdx),%dh
     56e:	97                   	xchg   %eax,%edi
     56f:	59                   	pop    %rcx
     570:	c7                   	(bad)
     571:	4e 5b                	rex.WRX pop %rbx
     573:	d7                   	xlat   %ds:(%rbx)
     574:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     575:	4b 31 83 d6 93 56 e9 	rex.WXB xor %rax,-0x16a96c2a(%r11)
     57c:	4b e7 b4             	rex.WXB out %eax,$0xb4
     57f:	35 2f a5 e6 8f       	xor    $0x8fe6a52f,%eax
     584:	40 a5                	rex movsl %ds:(%rsi),%es:(%rdi)
     586:	70 cc                	jo     554 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x554>
     588:	2f                   	(bad)
     589:	cf                   	iret
     58a:	5c                   	pop    %rsp
     58b:	5e                   	pop    %rsi
     58c:	46 19 29             	rex.RX sbb %r13d,(%rcx)
     58f:	1c d9                	sbb    $0xd9,%al
     591:	d7                   	xlat   %ds:(%rbx)
     592:	24 87                	and    $0x87,%al
     594:	6e                   	outsb  %ds:(%rsi),(%dx)
     595:	d3 d9                	rcr    %cl,%ecx
     597:	12 cb                	adc    %bl,%cl
     599:	9d                   	popf
     59a:	69 03 25 9e bb d3    	imul   $0xd3bb9e25,(%rbx),%eax
     5a0:	af                   	scas   %es:(%rdi),%eax
     5a1:	c9                   	leave
     5a2:	71 5f                	jno    603 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x603>
     5a4:	2a c4                	sub    %ah,%al
     5a6:	e4 0c                	in     $0xc,%al
     5a8:	8e 81 50 91 93 cd    	mov    -0x326c6eb0(%rcx),%es
     5ae:	bc 9f 7f ee f2       	mov    $0xf2ee7f9f,%esp
     5b3:	1e                   	(bad)
     5b4:	e6 bf                	out    %al,$0xbf
     5b6:	c8 40 63 2d          	enter  $0x6340,$0x2d
     5ba:	69 79 28 33 dc 17 20 	imul   $0x2017dc33,0x28(%rcx),%edi
     5c1:	03 f9                	add    %ecx,%edi
     5c3:	a8 6c                	test   $0x6c,%al
     5c5:	32 4f 3d             	xor    0x3d(%rdi),%cl
     5c8:	e8 fa b9 4d 7e       	call   7e4dbfc7 <utils.cpp.0ab61856+0x7e4dbfc7>
     5cd:	39 12                	cmp    %edx,(%rdx)
     5cf:	2c cb                	sub    $0xcb,%al
     5d1:	04 94                	add    $0x94,%al
     5d3:	f9                   	stc
     5d4:	25 ad 91 15 2b       	and    $0x2b1591ad,%eax
     5d9:	df 5a ce             	fistps -0x32(%rdx)
     5dc:	67 6d                	insl   (%dx),%es:(%edi)
     5de:	ca be 2e             	lret   $0x2ebe
     5e1:	d7                   	xlat   %ds:(%rbx)
     5e2:	95                   	xchg   %eax,%ebp
     5e3:	af                   	scas   %es:(%rdi),%eax
     5e4:	3a f3                	cmp    %bl,%dh
     5e6:	46 f6 b5 4a f2 9f f2 	rex.RX divb -0xd600db6(%rbp)
     5ed:	96                   	xchg   %eax,%esi
     5ee:	3c 54                	cmp    $0x54,%al
     5f0:	8a b5 96 7d 3e 34    	mov    0x343e7d96(%rbp),%dh
     5f6:	6d                   	insl   (%dx),%es:(%rdi)
     5f7:	34 eb                	xor    $0xeb,%al
     5f9:	47 bb fc e8 8a 56    	rex.RXB mov $0x568ae8fc,%r11d
     5ff:	73 5d                	jae    65e <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x65e>
     601:	57                   	push   %rdi
     602:	ae                   	scas   %es:(%rdi),%al
     603:	5b                   	pop    %rbx
     604:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     605:	60                   	(bad)
     606:	c9                   	leave
     607:	ca 3e ab             	lret   $0xab3e
     60a:	8d 21                	lea    (%rcx),%esp
     60c:	fb                   	sti
     60d:	ca e7 44             	lret   $0x44e7
     610:	4e 1a 86 91 c2 fd 50 	rex.WRX sbb 0x50fdc291(%rsi),%r8b
     617:	31 e7                	xor    %esp,%edi
     619:	b7 33                	mov    $0x33,%bh
     61b:	20 96 a2 4a e1 c2    	and    %dl,-0x3d1eb55e(%rsi)
     621:	fc                   	cld
     622:	5a                   	pop    %rdx
     623:	c0 3c cc ed          	sarb   $0xed,(%rsp,%rcx,8)
     627:	5d                   	pop    %rbp
     628:	5f                   	pop    %rdi
     629:	5e                   	pop    %rsi
     62a:	00 34 92             	add    %dh,(%rdx,%rdx,4)
     62d:	d9 cb                	fxch   %st(3)
     62f:	97                   	xchg   %eax,%edi
     630:	61                   	(bad)
     631:	c4                   	(bad)
     632:	96                   	xchg   %eax,%esi
     633:	dc e5                	fsub   %st,%st(5)
     635:	ca 2f 79             	lret   $0x792f
     638:	dc f6                	fdiv   %st,%st(6)
     63a:	19 d0                	sbb    %edx,%eax
     63c:	65 2b 4b 66          	sub    %gs:0x66(%rbx),%ecx
     640:	bb 89 0c aa 7a       	mov    $0x7aaa0c89,%ebx
     645:	8f                   	(bad)
     646:	64 5f                	fs pop %rdi
     648:	97                   	xchg   %eax,%edi
     649:	6f                   	outsl  %ds:(%rsi),(%dx)
     64a:	ac                   	lods   %ds:(%rsi),%al
     64b:	0f 5d f6             	minps  %xmm6,%xmm6
     64e:	70 ba                	jo     60a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x60a>
     650:	dd 7e 6a             	fnstsw 0x6a(%rsi)
     653:	41 33 23             	xor    (%r11),%esp
     656:	eb 31                	jmp    689 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x689>
     658:	49 8f                	rex.WB (bad)
     65a:	20 1b                	and    %bl,(%rbx)
     65c:	31 5a e4             	xor    %ebx,-0x1c(%rdx)
     65f:	98                   	cwtl
     660:	08 51 e3             	or     %dl,-0x1d(%rcx)
     663:	a1 45 42 bc c8 cb 8a 	movabs 0xc8cc8acbc8bc4245,%eax
     66a:	cc c8 
     66c:	cb                   	lret
     66d:	89 88 7d 0e 0d f1    	mov    %ecx,-0xef2f183(%rax)
     673:	54                   	push   %rsp
     674:	ef                   	out    %eax,(%dx)
     675:	14 0e                	adc    $0xe,%al
     677:	0a 06                	or     (%rsi),%al
     679:	02 d6                	add    %dh,%dl
     67b:	f9                   	stc
     67c:	f3 eb a3             	repz jmp 622 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x622>
     67f:	33 9d c3 72 f8 e2    	xor    -0x1d078d3d(%rbp),%ebx
     685:	ec                   	in     (%dx),%al
     686:	bd 71 23 c5 6b       	mov    $0x6bc52371,%ebp
     68b:	b3 e6                	mov    $0xe6,%bl
     68d:	4e                   	rex.WRX
     68e:	4d 5d                	rex.WRB pop %r13
     690:	1a 34 ec             	sbb    (%rsp,%rbp,8),%dh
     693:	c7                   	(bad)
     694:	cc                   	int3
     695:	67 98                	addr32 cwtl
     697:	bd 4c a7 c1 9c       	mov    $0x9cc1a74c,%ebp
     69c:	5c                   	pop    %rsp
     69d:	5c                   	pop    %rsp
     69e:	06                   	(bad)
     69f:	66 e0 b6             	data16 loopne 658 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x658>
     6a2:	97                   	xchg   %eax,%edi
     6a3:	c9                   	leave
     6a4:	bc f1 1c 66 16       	mov    $0x16661cf1,%esp
     6a9:	c3                   	ret
     6aa:	61                   	(bad)
     6ab:	18 0c bb             	sbb    %cl,(%rbx,%rdi,4)
     6ae:	f1                   	int1
     6af:	17                   	(bad)
     6b0:	f6 c2 5d             	test   $0x5d,%dl
     6b3:	b8 8d d9 78 10       	mov    $0x1078d98d,%eax
     6b8:	2f                   	(bad)
     6b9:	16                   	(bad)
     6ba:	fe                   	(bad)
     6bb:	e3 bd                	jrcxz  67a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x67a>
     6bd:	c2 80 bc             	ret    $0xbc80
     6c0:	56                   	push   %rsi
     6c1:	c2 28 a8             	ret    $0xa828
     6c4:	c2 76 78             	ret    $0x7876
     6c7:	a9 f0 20 ef 14       	test   $0x14ef20f0,%eax
     6cc:	29 60 51             	sub    %esp,0x51(%rax)
     6cf:	be a0 3c 71 c2       	mov    $0xc2713ca0,%esi
     6d4:	85 bc 5e 4d 98 4c b0 	test   %edi,-0x4fb367b3(%rsi,%rbx,2)
     6db:	84 ab bc 5d 12 b0    	test   %ch,-0x4feda244(%rbx)
     6e1:	21 6f 04             	and    %ebp,0x4(%rdi)
     6e4:	5c                   	pop    %rsp
     6e5:	5b                   	pop    %rbx
     6e6:	4a b4 20             	rex.WX mov $0x20,%spl
     6e9:	c8 7a 20 09          	enter  $0x207a,$0x9
     6ed:	12 07                	adc    (%rdi),%al
     6ef:	8e 18                	mov    (%rax),%ds
     6f1:	29 42 c4             	sub    %eax,-0x3c(%rdx)
     6f4:	d9 db                	(bad)
     6f6:	40 b3 97             	rex mov $0x97,%bl
     6f9:	81 f7 2e f0 de 21    	xor    $0x21def02e,%edi
     6ff:	ef                   	out    %eax,(%dx)
     700:	55                   	push   %rbp
     701:	e0 bd                	loopne 6c0 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x6c0>
     703:	42 de 1b             	rex.X ficomps (%rbx)
     706:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     707:	7b 13                	jnp    71c <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x71c>
     709:	68 f6 22 f0 5e       	push   $0x5ef022f6
     70e:	20 cd                	and    %cl,%ch
     710:	de 1f                	ficomps (%rdi)
     712:	ef                   	out    %eax,(%dx)
     713:	3d a0 7b 0d e8       	cmp    $0xe80d7ba0,%eax
     718:	5e                   	pop    %rsi
     719:	2c a5                	sub    $0xa5,%al
     71b:	de 02                	fiadds (%rdx)
     71d:	9c                   	pushf
     71e:	bd 3e 9c bd 3d       	mov    $0x3dbd9c3e,%ebp
     723:	9c                   	pushf
     724:	bd 3c 24 f4 ee       	mov    $0xeef4243c,%ebp
     729:	70 f6                	jo     721 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x721>
     72b:	ea                   	(bad)
     72c:	58                   	pop    %rax
     72d:	ea                   	(bad)
     72e:	25 c0 d9 9b 43       	and    $0x439bd9c0,%eax
     733:	42 ef                	rex.X out %eax,(%dx)
     735:	00 ce                	add    %cl,%dh
     737:	5e                   	pop    %rsi
     738:	1c 4b                	sbb    $0x4b,%al
     73a:	bd 37 9c bd 36       	mov    $0x36bd9c37,%ebp
     73f:	24 f4                	and    $0xf4,%al
     741:	d6                   	(bad)
     742:	70 f6                	jo     73a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x73a>
     744:	d2 58 ea             	rcrb   %cl,-0x16(%rax)
     747:	9d                   	popf
     748:	e1 ec                	loope  736 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x736>
     74a:	15 60 42 af 0c       	adc    $0xcaf4260,%eax
     74f:	67 6f                	outsl  %ds:(%esi),(%dx)
     751:	0c 09                	or     $0x9,%al
     753:	bd 30 9c bd 2f       	mov    $0x2fbd9c30,%ebp
     758:	96                   	xchg   %eax,%esi
     759:	7a 5d                	jp     7b8 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x7b8>
     75b:	74 ef                	je     74c <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x74c>
     75d:	55                   	push   %rbp
     75e:	f7 b6 68 f6 b2 e8    	divl   -0x174d0998(%rsi)
     764:	de 15 dd 6b a5 d4    	ficoms -0x2b5a9423(%rip)        # ffffffffd4a57347 <utils.cpp.0ab61856+0xffffffffd4a57347>
     76a:	ab                   	stos   %eax,%es:(%rdi)
     76b:	a2 d9 9b a2 7b ab ba 	movabs %al,0xaa97baab7ba29bd9
     772:	97 aa 
     774:	d9 8b 42 a9 f7 84    	(bad) -0x7b0856be(%rbx)
     77a:	52                   	push   %rdx
     77b:	ef                   	out    %eax,(%dx)
     77c:	94                   	xchg   %eax,%esp
     77d:	52                   	push   %rdx
     77e:	af                   	scas   %es:(%rdi),%eax
     77f:	89 66 6f             	mov    %esp,0x6f(%rsi)
     782:	89 f7                	mov    %esi,%edi
     784:	92                   	xchg   %eax,%edx
     785:	78 ef                	js     776 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x776>
     787:	88 f7                	mov    %dh,%bh
     789:	4a 35 7b 45 bc 37    	rex.WX xor $0x37bc457b,%rax
     78f:	44 b3 17             	rex.R mov $0x17,%bl
     792:	c4                   	(bad)
     793:	7b 3f                	jnp    7d4 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x7d4>
     795:	34 7b                	xor    $0x7b,%al
     797:	a3 de eb a1 d9 db e1 	movabs %eax,0x1cbde1dbd9a1ebde
     79e:	bd 1c 
     7a0:	9a                   	(bad)
     7a1:	bd 1b de 1b c0       	mov    $0xc01bde1b,%ebp
     7a6:	7b 35                	jnp    7dd <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x7dd>
     7a8:	bc 37 43 b3 17       	mov    $0x17b34337,%esp
     7ad:	80 f7 62             	xor    $0x62,%bh
     7b0:	58                   	pop    %rax
     7b1:	ea                   	(bad)
     7b2:	bd f0 5e 0b ef       	mov    $0xef0b5ef0,%ebp
     7b7:	ad                   	lods   %ds:(%rsi),%eax
     7b8:	f0 5e                	lock pop %rsi
     7ba:	a8 66                	test   $0x66,%al
     7bc:	ef                   	out    %eax,(%dx)
     7bd:	d3 7b 29             	sarl   %cl,0x29(%rbx)
     7c0:	bc d7 e9 bd 4d       	mov    $0x4dbde9d7,%esp
     7c5:	cd 5e                	int    $0x5e
     7c7:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     7c8:	f7 4e 58 ea 95 f0 5e 	testl  $0x5ef095ea,0x58(%rsi)
     7cf:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     7d0:	52                   	push   %rdx
     7d1:	ef                   	out    %eax,(%dx)
     7d2:	52                   	push   %rdx
     7d3:	b3 57                	mov    $0x57,%bl
     7d5:	e9 01 8f 80 ae       	jmp    ffffffffae8096db <utils.cpp.0ab61856+0xffffffffae8096db>
     7da:	78 f0                	js     7cc <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x7cc>
     7dc:	9b                   	fwait
     7dd:	6c                   	insb   (%dx),%es:(%rdi)
     7de:	e1 c0                	loope  7a0 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x7a0>
     7e0:	91                   	xchg   %eax,%ecx
     7e1:	fc                   	cld
     7e2:	59                   	pop    %rcx
     7e3:	e5 56                	in     $0x56,%eax
     7e5:	5e                   	pop    %rsi
     7e6:	c1 cf 05             	ror    $0x5,%edi
     7e9:	1f                   	(bad)
     7ea:	b6 72                	mov    $0x72,%dh
     7ec:	2e 7c 86             	jl,pn  775 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x775>
     7ef:	b9 37 65 ce ee       	mov    $0xeece6537,%ecx
     7f4:	58                   	pop    %rax
     7f5:	b8 65 51 41 5b       	mov    $0x5b415165,%eax
     7fa:	9c                   	pushf
     7fb:	07                   	(bad)
     7fc:	91                   	xchg   %eax,%ecx
     7fd:	bc c5 5b 56 93       	mov    $0x93565bc5,%esp
     802:	c5 99 8e             	(bad)
     805:	d4                   	(bad)
     806:	c6                   	(bad)
     807:	ac                   	lods   %ds:(%rsi),%al
     808:	38 0b                	cmp    %cl,(%rbx)
     80a:	4a                   	rex.WX
     80b:	f0 15 87 2a eb 23    	lock adc $0x23eb2a87,%eax
     811:	7d bb                	jge    7ce <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x7ce>
     813:	62 a1 c2 eb 51       	(bad)
     818:	fe                   	(bad)
     819:	5c                   	pop    %rsp
     81a:	16                   	(bad)
     81b:	47 be 49 15 5c 77    	rex.RXB mov $0x775c1549,%r14d
     821:	e0 cf                	loopne 7f2 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x7f2>
     823:	fd                   	std
     824:	3b 93 1c 9f 16 87    	cmp    -0x78e960e4(%rbx),%edx
     82a:	56                   	push   %rsi
     82b:	f8                   	clc
     82c:	63 64 b7 82          	movsxd -0x7e(%rdi,%rsi,4),%esp
     830:	e9 78 fd 0b ca       	jmp    ffffffffca0c05ad <utils.cpp.0ab61856+0xffffffffca0c05ad>
     835:	91                   	xchg   %eax,%ecx
     836:	d1 e0                	shl    $1,%eax
     838:	0a f6                	or     %dh,%dh
     83a:	fb                   	sti
     83b:	26 ad                	lods   %ds:(%rsi),%eax
     83d:	b8 7e a4 ef 39       	mov    $0x39efa47e,%eax
     842:	1a ab 70 df d7 99    	sbb    -0x66282090(%rbx),%ch
     848:	ce                   	(bad)
     849:	7b 4e                	jnp    899 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x899>
     84b:	7a c8                	jp     815 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x815>
     84d:	62 8c d5 d9 ef       	(bad)
     852:	c8 ad de 34          	enter  $0xdead,$0x34
     856:	1d 94 be 91 ad       	sbb    $0xad91be94,%eax
     85b:	38 d4                	cmp    %dl,%ah
     85d:	ea                   	(bad)
     85e:	74 50                	je     8b0 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x8b0>
     860:	7f 8b                	jg     7ed <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x7ed>
     862:	06                   	(bad)
     863:	53                   	push   %rbx
     864:	f0 9c                	lock pushf
     866:	6f                   	outsl  %ds:(%rsi),(%dx)
     867:	15 95 6f 92 8a       	adc    $0x8a926f95,%eax
     86c:	ca ab fc             	lret   $0xfcab
     86f:	a9 e2 0d a8 e2       	test   $0xe2a80de2,%eax
     874:	0c 49                	or     $0x49,%al
     876:	4a                   	rex.WX
     877:	45 7b 2b             	rex.RB jnp 8a5 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x8a5>
     87a:	53                   	push   %rbx
     87b:	71 28                	jno    8a5 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x8a5>
     87d:	cf                   	iret
     87e:	39 93 1c 60 8a 29    	cmp    %edx,0x298a601c(%rbx)
     884:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     885:	f2 23 63 02          	repnz and 0x2(%rbx),%esp
     889:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     88a:	89 66 fd             	mov    %esp,-0x3(%rsi)
     88d:	a8 8a                	test   $0x8a,%al
     88f:	ca 79 fa             	lret   $0xfa79
     892:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     893:	41 71 a4             	rex.B jno 83a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x83a>
     896:	6f                   	outsl  %ds:(%rsi),(%dx)
     897:	54                   	push   %rsp
     898:	53                   	push   %rbx
     899:	ce                   	(bad)
     89a:	82                   	(bad)
     89b:	f8                   	clc
     89c:	46 15 03 11 a6 88    	rex.RX adc $0x88a61103,%eax
     8a2:	66 fd                	data16 std
     8a4:	08 c5                	or     %al,%ch
     8a6:	9d                   	popf
     8a7:	37                   	(bad)
     8a8:	bd 99 60 39 c7       	mov    $0xc7396099,%ebp
     8ad:	f2 27                	repnz (bad)
     8af:	13 62 25             	adc    0x25(%rdx),%esp
     8b2:	40 6e                	rex outsb %ds:(%rsi),(%dx)
     8b4:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     8b5:	b8 fa 4d 9a 08       	mov    $0x89a4dfa,%eax
     8ba:	3b 15 27 cb 14 97    	cmp    -0x68eb34d9(%rip),%edx        # ffffffff9714d3e7 <utils.cpp.0ab61856+0xffffffff9714d3e7>
     8c0:	30 6d 6c             	xor    %ch,0x6c(%rbp)
     8c3:	3f                   	(bad)
     8c4:	15 98 39 e9 21       	adc    $0x21e93998,%eax
     8c9:	65 c9                	gs leave
     8cb:	ca 14 3f             	lret   $0x3f14
     8ce:	51                   	push   %rcx
     8cf:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     8d0:	36 86 ec             	ss xchg %ch,%ah
     8d3:	c4 a1 2c b6          	(bad)
     8d7:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     8d8:	72 ae                	jb     888 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x888>
     8da:	9e                   	sahf
     8db:	cf                   	iret
     8dc:	ee                   	out    %al,(%dx)
     8dd:	ca b0 9c             	lret   $0x9cb0
     8e0:	ef                   	out    %eax,(%dx)
     8e1:	30 06                	xor    %al,(%rsi)
     8e3:	84 f0                	test   %dh,%al
     8e5:	08 cf                	or     %cl,%bh
     8e7:	da 94 4d 1d ba 1c ce 	ficoml -0x31e345e3(%rbp,%rcx,2)
     8ee:	1a 45 09             	sbb    0x9(%rbp),%al
     8f1:	4b 30 df             	rex.WXB xor %bl,%r15b
     8f4:	c1 9c 39 46 09 49 70 	rcrl   $0x9c,0x70490946(%rcx,%rdi,1)
     8fb:	9c 
     8fc:	47 10 c1             	rex.RXB adc %r8b,%r9b
     8ff:	59                   	pop    %rcx
     900:	ce                   	(bad)
     901:	99                   	cltd
     902:	10 03                	adc    %al,(%rbx)
     904:	29 d3                	sub    %edx,%ebx
     906:	93                   	xchg   %eax,%ebx
     907:	be 99 38 94 ef       	mov    $0xef943899,%esi
     90c:	4c 53                	rex.WR push %rbx
     90e:	37                   	(bad)
     90f:	79 8f                	jns    8a0 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x8a0>
     911:	93                   	xchg   %eax,%ebx
     912:	4a 1c 1a             	rex.WX sbb $0x1a,%al
     915:	e7 4a                	out    %eax,$0x4a
     917:	b6 3f                	mov    $0x3f,%dh
     919:	82                   	(bad)
     91a:	5d                   	pop    %rbp
     91b:	06                   	(bad)
     91c:	1d 5a 06 12 e7       	sbb    $0xe712065a,%eax
     921:	47 30 98 4e 1b 90 39 	rex.RXB xor %r11b,0x39901b4e(%r8)
     928:	6c                   	insb   (%dx),%es:(%rdi)
     929:	21 71 e8             	and    %esi,-0x18(%rcx)
     92c:	88 d3                	mov    %dl,%bl
     92e:	49 9d                	rex.WB popf
     930:	6e                   	outsb  %ds:(%rsi),(%dx)
     931:	f7 1c b2             	negl   (%rdx,%rsi,4)
     934:	0b c1                	or     %ecx,%eax
     936:	8b be 49 10 4f 0e    	mov    0xe4f1049(%rsi),%edi
     93c:	e5 4f                	in     $0x4f,%eax
     93e:	0f 67 86 d1 c4 10 dc 	packuswb -0x23ef3b2f(%rsi),%mm0
     945:	e8 4c e6 ac 30       	call   30acef96 <utils.cpp.0ab61856+0x30acef96>
     94a:	9a                   	(bad)
     94b:	08 82 1d 6f 84 d1    	or     %al,-0x2e7b90e3(%rdx)
     951:	a2 33 a3 ce c3 50 ce 	movabs %al,0xde8bce50c3cea333
     958:	8b de 
     95a:	88 d8                	mov    %bl,%al
     95c:	80 11 71             	adcb   $0x71,(%rcx)
     95f:	a8 21                	test   $0x21,%al
     961:	c7                   	(bad)
     962:	65 c5 80 fa          	(bad)
     966:	80 3e 56             	cmpb   $0x56,(%rsi)
     969:	9d                   	popf
     96a:	1b 19                	sbb    (%rcx),%ebx
     96c:	79 d5                	jns    943 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x943>
     96e:	af                   	scas   %es:(%rdi),%eax
     96f:	bc dd a9 ee 85       	mov    $0x85eea9dd,%esp
     974:	f8                   	clc
     975:	d0 c1                	rol    $1,%cl
     977:	eb 4f                	jmp    9c8 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x9c8>
     979:	fe                   	(bad)
     97a:	dc 0f                	fmull  (%rdi)
     97c:	44 be c9 0e 5c 2f    	rex.R mov $0x2f5c0ec9,%esi
     982:	82                   	(bad)
     983:	42 6c                	rex.X insb (%dx),%es:(%rdi)
     985:	2e 8b ca             	cs mov %edx,%ecx
     988:	50                   	push   %rax
     989:	1e                   	(bad)
     98a:	aa                   	stos   %al,%es:(%rdi)
     98b:	b3 63                	mov    $0x63,%bl
     98d:	91                   	xchg   %eax,%ecx
     98e:	53                   	push   %rbx
     98f:	5d                   	pop    %rbp
     990:	c6                   	(bad)
     991:	99                   	cltd
     992:	b7 13                	mov    $0x13,%bh
     994:	47 f1                	rex.RXB int1
     996:	de 7b ab             	fidivrs -0x55(%rbx)
     999:	03 3c 71             	add    (%rcx,%rsi,2),%edi
     99c:	25 41 86 5b ba       	and    $0xba5b8641,%eax
     9a1:	0c 02                	or     $0x2,%al
     9a3:	71 e8                	jno    98d <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x98d>
     9a5:	42                   	rex.X
     9a6:	2e 72 89             	jb,pn  932 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x932>
     9a9:	e2 46                	loop   9f1 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x9f1>
     9ab:	af                   	scas   %es:(%rdi),%eax
     9ac:	3b f9                	cmp    %ecx,%edi
     9ae:	93                   	xchg   %eax,%ebx
     9af:	05 b1 85 bf 45       	add    $0x45bf85b1,%eax
     9b4:	bb 28 4e f4 4d       	mov    $0x4df44e28,%ebx
     9b9:	7a e0                	jp     99b <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x99b>
     9bb:	3a 91 3f 11 3d 47    	cmp    0x473d113f(%rcx),%dl
     9c1:	e3 09                	jrcxz  9cc <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x9cc>
     9c3:	e6 c6                	out    %al,$0xc6
     9c5:	33 a2 33 1a 1c 31    	xor    0x311c1a33(%rdx),%esp
     9cb:	16                   	(bad)
     9cc:	5b                   	pop    %rbx
     9cd:	3a 39                	cmp    (%rcx),%bh
     9cf:	37                   	(bad)
     9d0:	be 21 ad a1 9e       	mov    $0x9ea1ad21,%esi
     9d5:	dd 95 7d 88 62 27    	fstl   0x2762887d(%rbp)
     9db:	cb                   	lret
     9dc:	e5 c8                	in     $0xc8,%eax
     9de:	2b 73 59             	sub    0x59(%rbx),%esi
     9e1:	34 a0                	xor    $0xa0,%al
     9e3:	cd 47                	int    $0x47
     9e5:	22 e7                	and    %bh,%ah
     9e7:	44 6f                	rex.R outsl %ds:(%rsi),(%dx)
     9e9:	42 6b 0e a3          	rex.X imul $0xffffffa3,(%rsi),%ecx
     9ed:	0e                   	(bad)
     9ee:	f5                   	cmc
     9ef:	70 ba                	jo     9ab <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x9ab>
     9f1:	a9 f7 92 4f bd       	test   $0xbd4f92f7,%eax
     9f6:	d3 ac c1 43 7b 2b eb 	shrl   %cl,-0x14d484bd(%rcx,%rax,8)
     9fd:	70 e5                	jo     9e4 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x9e4>
     9ff:	41 c4                	rex.B (bad)
     a01:	4c bb 0d b3 20 6e 32 	rex.WR movabs $0xe3dcf326e20b30d,%rbx
     a08:	cf 3d 0e 
     a0b:	87 ee                	xchg   %ebp,%esi
     a0d:	f7 28                	imull  (%rax)
     a0f:	0e                   	(bad)
     a10:	06                   	(bad)
     a11:	c0 6f c0 f8          	shrb   $0xf8,-0x40(%rdi)
     a15:	ad                   	lods   %ds:(%rsi),%eax
     a16:	45 09 35 b0 9b 5f f9 	or     %r14d,-0x6a06450(%rip)        # fffffffff95fa5cd <utils.cpp.0ab61856+0xfffffffff95fa5cd>
     a1d:	b3 70                	mov    $0x70,%bl
     a1f:	fb                   	sti
     a20:	0e                   	(bad)
     a21:	e4 1d                	in     $0x1d,%al
     a23:	46 dc 1e             	rex.RX fcompl (%rsi)
     a26:	5c                   	pop    %rsp
     a27:	c7                   	(bad)
     a28:	a9 48 47 ac b5       	test   $0xb5ac4748,%eax
     a2d:	0c dc                	or     $0xdc,%al
     a2f:	b6 c3                	mov    $0xc3,%dh
     a31:	88 0d a3 bf ed 3a    	mov    %cl,0x3aedbfa3(%rip)        # 3aedc9da <utils.cpp.0ab61856+0x3aedc9da>
     a37:	8e 71 e4             	mov    -0x1c(%rcx),%?
     a3a:	fa                   	cli
     a3b:	b6 fd                	mov    $0xfd,%dh
     a3d:	40 d8 2b             	rex fsubrs (%rbx)
     a40:	9b                   	fwait
     a41:	b3 3d                	mov    $0x3d,%bl
     a43:	55                   	push   %rbp
     a44:	e4 67                	in     $0x67,%al
     a46:	ca b7 8e             	lret   $0x8eb7
     a49:	53                   	push   %rbx
     a4a:	82                   	(bad)
     a4b:	18 59 6b             	sbb    %bl,0x6b(%rcx)
     a4e:	b9 b7 0d a7 10       	mov    $0x10a70db7,%ecx
     a53:	e2 20                	loop   a75 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xa75>
     a55:	37                   	(bad)
     a56:	db 6f 08             	fldt   0x8(%rdi)
     a59:	e5 59                	in     $0x59,%eax
     a5b:	33 97 b7 9a c1 db    	xor    -0x243e6549(%rdi),%edx
     a61:	ce                   	(bad)
     a62:	1b d4                	sbb    %esp,%edx
     a64:	01 a3 b9 bc e8 36    	add    %esp,0x36e8bcb9(%rbx)
     a6a:	1b 45 3e             	sbb    0x3e(%rbp),%eax
     a6d:	72 73                	jb     ae2 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xae2>
     a6f:	79 ec                	jns    a5d <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xa5d>
     a71:	67 db 83 75 2c 11 59 	fildl  0x59112c75(%ebx)
     a78:	1d b3 87 b5 96       	sbb    $0x96b587b3,%eax
     a7d:	77 cb                	ja     a4a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xa4a>
     a7f:	91                   	xchg   %eax,%ecx
     a80:	36 e9 65 55 83 b4    	ss jmp ffffffffb4835feb <utils.cpp.0ab61856+0xffffffffb4835feb>
     a86:	db 75 62             	(bad) 0x62(%rbp)
     a89:	33 6b 22             	xor    0x22(%rbx),%ebp
     a8c:	a3 b9 3c 13 67 32 5c 	movabs %eax,0xf4cb5c3267133cb9
     a93:	cb f4 
     a95:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     a96:	2d 71 13 e7 bb       	sub    $0xbbe71371,%eax
     a9b:	12 24 ce             	adc    (%rsi,%rcx,8),%ah
     a9e:	81 18 6b ca 45 0a    	sbbl   $0xa45ca6b,(%rax)
     aa4:	b7 61                	mov    $0x61,%bh
     aa6:	84 d4                	test   %dl,%ah
     aa8:	47                   	rex.RXB
     aa9:	48 7d 49             	rex.W jge af5 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xaf5>
     aac:	4e                   	rex.WRX
     aad:	4d 0a 27             	rex.WRB or (%r15),%r12b
     ab0:	e2 fc                	loop   aae <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xaae>
     ab2:	e6 4c                	out    %al,$0x4c
     ab4:	36 79 5a             	ss jns b11 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xb11>
     ab7:	4d 11 21             	adc    %r12,(%r9)
     aba:	de 24 97             	fisubs (%rdi,%rdx,4)
     abd:	16                   	(bad)
     abe:	09 17                	or     %edx,(%rdi)
     ac0:	c0 a1 db 87 b5 96 20 	shlb   $0x20,-0x694a7825(%rcx)
     ac7:	fe                   	(bad)
     ac8:	a2 90 98 1e 88 0f 5f 	movabs %al,0xd24e5f0f881e9890
     acf:	4e d2 
     ad1:	60                   	(bad)
     ad2:	87 b5 96 51 97 52    	xchg   %esi,0x52975196(%rbp)
     ad8:	74 23                	je     afd <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xafd>
     ada:	ca c3 93             	lret   $0x93c3
     add:	86 18                	xchg   %bl,(%rax)
     adf:	33 1c ba             	xor    (%rdx,%rdi,4),%ebx
     ae2:	88 58 6b             	mov    %bl,0x6b(%rax)
     ae5:	d9 e1                	fabs
     ae7:	50                   	push   %rax
     ae8:	8f 04 68             	pop    (%rax,%rbp,2)
     aeb:	f5                   	cmc
     aec:	e8 c0 e1 41 e4       	call   ffffffffe441ecb1 <utils.cpp.0ab61856+0xffffffffe441ecb1>
     af1:	b4 44                	mov    $0x44,%ah
     af3:	02 70 e8             	add    -0x18(%rax),%dh
     af6:	76 dd                	jbe    ad5 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xad5>
     af8:	63 94 f0 02 e3 bd 43 	movsxd 0x43bde302(%rax,%rsi,8),%edx
     aff:	1b 0b                	sbb    (%rbx),%ecx
     b01:	dc e6                	fsub   %st,%st(6)
     b03:	5c                   	pop    %rsp
     b04:	c6                   	(bad)
     b05:	0f 1c 28             	nopl   (%rax)
     b08:	96                   	xchg   %eax,%esi
     b09:	be 2b f0 dd 79       	mov    $0x79ddf02b,%esi
     b0e:	af                   	scas   %es:(%rdi),%eax
     b0f:	1a 25 a4 c0 77 9f    	sbb    -0x60883f5c(%rip),%ah        # ffffffff9f77cbb9 <utils.cpp.0ab61856+0xffffffff9f77cbb9>
     b15:	f2 e7 1a             	repnz out %eax,$0x1a
     b18:	62 ad e5 86 1e       	(bad)
     b1d:	1b 02                	sbb    (%rdx),%eax
     b1f:	f8                   	clc
     b20:	d2 54 8b 9b          	rclb   %cl,-0x65(%rbx,%rcx,4)
     b24:	3b 07                	cmp    (%rdi),%eax
     b26:	65 c1 80 77 76 7b 94 	roll   $0xf7,%gs:-0x6b848989(%rax)
     b2d:	f7 
     b2e:	78 a1                	js     ad1 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xad1>
     b30:	cd a9                	int    $0xa9
     b32:	f6 b6 f4 18 6e 0c    	divb   0xc6e18f4(%rsi)
     b38:	b8 cd 99 22 04       	mov    $0x42299cd,%eax
     b3d:	6a c8                	push   $0xffffffffffffffc8
     b3f:	70 0d                	jo     b4e <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xb4e>
     b41:	19 5e 04             	sbb    %ebx,0x4(%rsi)
     b44:	d2 c2                	rol    %cl,%dl
     b46:	1b 03                	sbb    (%rbx),%eax
     b48:	f0 5e                	lock pop %rsi
     b4a:	84 00                	test   %al,(%rax)
     b4c:	00 18                	add    %bl,(%rax)
     b4e:	3e 05 84 0a 17 ce    	ds add $0xce170a84,%eax
     b54:	d2 93 88 74 e1 4a    	rclb   %cl,0x4ae17488(%rbx)
     b5a:	3c 93                	cmp    $0x93,%al
     b5c:	a0 0e 6d 37 e6 35 7f 	movabs 0xb41a7f35e6376d0e,%al
     b63:	1a b4 
     b65:	b0 c6                	mov    $0xc6,%al
     b67:	c2 d9 0d             	ret    $0xdd9
     b6a:	51                   	push   %rcx
     b6b:	05 a8 57 80 ba       	add    $0xba8057a8,%eax
     b70:	d2 8d 4f 75 ef c9    	rorb   %cl,-0x36108ab1(%rbp)
     b76:	51                   	push   %rcx
     b77:	34 4a                	xor    $0x4a,%al
     b79:	d8 c4                	fadd   %st(4),%st
     b7b:	68 de 1a e4 45       	push   $0x45e41ade
     b80:	09 9d 38 cd 37 54    	or     %ebx,0x5437cd38(%rbp)
     b86:	25 31 b1 06 5a       	and    $0x5a06b131,%eax
     b8b:	1c bd                	sbb    $0xbd,%al
     b8d:	45 13 27             	adc    (%r15),%r12d
     b90:	b0 9a                	mov    $0x9a,%al
     b92:	7b fd                	jnp    b91 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xb91>
     b94:	b9 c9 a6 ae 93       	mov    $0x93aea6c9,%ecx
     b99:	39 b4 73 e2 ba 2f 53 	cmp    %esi,0x532fbae2(%rbx,%rsi,2)
     ba0:	d7                   	xlat   %ds:(%rbx)
     ba1:	37                   	(bad)
     ba2:	39 a1 eb 4b fe ac    	cmp    %esp,-0x5301b415(%rcx)
     ba8:	62 ad 56 2c 5e 5c ad 	vdivsh 0xb0(%r21,%r13,4),%xmm5,%xmm19{%k4}
     baf:	58 
     bb0:	61                   	(bad)
     bb1:	65 a5                	movsl  %gs:(%rsi),%es:(%rdi)
     bb3:	74 55                	je     c0a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc0a>
     bb5:	c5 24 6b             	(bad)
     bb8:	0a d8                	or     %al,%bl
     bba:	d6                   	(bad)
     bbb:	57                   	push   %rdi
     bbc:	13 01                	adc    (%rcx),%eax
     bbe:	1f                   	(bad)
     bbf:	ad                   	lods   %ds:(%rsi),%eax
     bc0:	95                   	xchg   %eax,%ebp
     bc1:	e4 0b                	in     $0xb,%al
     bc3:	2c 8a                	sub    $0x8a,%al
     bc5:	72 48                	jb     c0f <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc0f>
     bc7:	03 60 55             	add    0x55(%rax),%esp
     bca:	b6 7e                	mov    $0x7e,%dh
     bcc:	28 c1                	sub    %al,%cl
     bce:	b2 b6                	mov    $0xb6,%dl
     bd0:	9e                   	sahf
     bd1:	6c                   	insb   (%dx),%es:(%rdi)
     bd2:	7d 2d                	jge    c01 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc01>
     bd4:	ad                   	lods   %ds:(%rsi),%eax
     bd5:	56                   	push   %rsi
     bd6:	7c 81                	jl     b59 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xb59>
     bd8:	45                   	rex.RB
     bd9:	49                   	rex.WB
     bda:	46 89 20             	rex.RX mov %r12d,(%rax)
     bdd:	8b 09                	mov    (%rcx),%ecx
     bdf:	97                   	xchg   %eax,%edi
     be0:	52                   	push   %rdx
     be1:	02 30                	add    (%rax),%dh
     be3:	25 5d 54 92 28       	and    $0x2892545d,%eax
     be8:	61                   	(bad)
     be9:	b2 d5                	mov    $0xd5,%dl
     beb:	c5 e5 f4 72 d2       	vpmuludq -0x2e(%rdx),%ymm3,%ymm6
     bf0:	15 a5 4b 6b eb       	adc    $0xeb6b4ba5,%eax
     bf5:	eb 89                	jmp    b80 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xb80>
     bf7:	92                   	xchg   %eax,%edx
     bf8:	d7                   	xlat   %ds:(%rbx)
     bf9:	16                   	(bad)
     bfa:	93                   	xchg   %eax,%ebx
     bfb:	77 f1                	ja     bee <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xbee>
     bfd:	d7                   	xlat   %ds:(%rbx)
     bfe:	56                   	push   %rsi
     bff:	17                   	(bad)
     c00:	57                   	push   %rdi
     c01:	17                   	(bad)
     c02:	93                   	xchg   %eax,%ebx
     c03:	2c 29                	sub    $0x29,%al
     c05:	50                   	push   %rax
     c06:	94                   	xchg   %eax,%esp
     c07:	a2 44 f0 95 95 04 6b 	movabs %al,0xf5c26b049595f044
     c0e:	c2 f5 
     c10:	75 71                	jne    c83 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc83>
     c12:	05 c3 ca 05 04       	add    $0x405cac3,%eax
     c17:	59                   	pop    %rcx
     c18:	2a aa a0 b8 a4 40    	sub    0x40a4b8a0(%rdx),%ch
     c1e:	f0 7d f2             	lock jge c13 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc13>
     c21:	44 ab                	rex.R stos %eax,%es:(%rdi)
     c23:	2a 0a                	sub    (%rdx),%cl
     c25:	93                   	xchg   %eax,%ebx
     c26:	2e 30 29             	cs xor %ch,(%rcx)
     c29:	29 20                	sub    %esp,(%rax)
     c2b:	e8 62 92 62 4b       	call   4b629e92 <utils.cpp.0ab61856+0x4b629e92>
     c30:	eb 4b                	jmp    c7d <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc7d>
     c32:	8a 93 28 16 76 cb    	mov    -0x3489e9d8(%rbx),%dl
     c38:	ab                   	stos   %eax,%es:(%rdi)
     c39:	ab                   	stos   %eax,%es:(%rdi)
     c3a:	49 97                	xchg   %rax,%r15
     c3c:	01 54 39 74          	add    %edx,0x74(%rcx,%rdi,1)
     c40:	fc                   	cld
     c41:	68 22 05 cc 2b       	push   $0x2bcc0522
     c46:	4b                   	rex.WXB
     c47:	4a 02 29             	rex.WX add (%rcx),%bpl
     c4a:	b6 9a                	mov    $0x9a,%dh
     c4c:	38 91 20 45 d5 ee    	cmp    %dl,-0x112abae0(%rcx)
     c52:	f2 ad                	repnz lods %ds:(%rsi),%eax
     c54:	7c 3a                	jl     c90 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc90>
     c56:	32 20                	xor    (%rax),%ah
     c58:	d4                   	(bad)
     c59:	8c 01                	mov    %es,(%rcx)
     c5b:	21 10                	and    %edx,(%rax)
     c5d:	d9 cd                	fxch   %st(5)
     c5f:	96                   	xchg   %eax,%esi
     c60:	6f                   	outsl  %ds:(%rsi),(%dx)
     c61:	90                   	nop
     c62:	0d e6 39 ae eb       	or     $0xebae39e6,%eax
     c67:	3a b5 37 c6 5a 12    	cmp    0x125ac637(%rbp),%dh
     c6d:	92                   	xchg   %eax,%edx
     c6e:	06                   	(bad)
     c6f:	ce                   	(bad)
     c70:	64 ae                	fs scas %es:(%rdi),%al
     c72:	74 94                	je     c08 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc08>
     c74:	b6 d6                	mov    $0xd6,%dh
     c76:	c0 39 ca             	sarb   $0xca,(%rcx)
     c79:	08 ef                	or     %ch,%bh
     c7b:	2c ef                	sub    $0xef,%al
     c7d:	0f 7b                	(bad)
     c7f:	90                   	nop
     c80:	95                   	xchg   %eax,%ebp
     c81:	81 11 39 09 47 7a    	adcl   $0x7a470939,(%rcx)
     c87:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     c88:	aa                   	stos   %al,%es:(%rdi)
     c89:	f7 e8                	imul   %eax
     c8b:	40 d2 08             	rex rorb %cl,(%rax)
     c8e:	05 67 44 76 6a       	add    $0x6a764467,%eax
     c93:	30 d8                	xor    %bl,%al
     c95:	ec                   	in     (%dx),%al
     c96:	f6 30                	divb   (%rax)
     c98:	23 5b 77             	and    0x77(%rbx),%ebx
     c9b:	be 35 bf 9d eb       	mov    $0xeb9dbf35,%esi
     ca0:	cf                   	iret
     ca1:	7d c4                	jge    c67 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc67>
     ca3:	0c 5c                	or     $0x5c,%al
     ca5:	42 55                	rex.X push %rbp
     ca7:	ab                   	stos   %eax,%es:(%rdi)
     ca8:	07                   	(bad)
     ca9:	03 0b                	add    (%rbx),%ecx
     cab:	80 78 23 ad          	cmpb   $0xad,0x23(%rax)
     caf:	46 3a 52 24          	rex.RX cmp 0x24(%rdx),%r10b
     cb3:	ec                   	in     (%dx),%al
     cb4:	bb 40 d8 77 48       	mov    $0x4877d840,%ebx
     cb9:	d8 57 48             	fcoms  0x48(%rdi)
     cbc:	d8 17                	fcoms  (%rdi)
     cbe:	48 d8 17             	rex.W fcoms (%rdi)
     cc1:	2b ec                	sub    %esp,%ebp
     cc3:	bb 23 ec 8b 23       	mov    $0x238bec23,%ebx
     cc8:	ec                   	in     (%dx),%al
     cc9:	5b                   	pop    %rbx
     cca:	23 ec                	and    %esp,%ebp
     ccc:	2b a3 ca 77 44 d8    	sub    -0x27bb8836(%rbx),%esp
     cd2:	57                   	push   %rdi
     cd3:	2a ec                	sub    %ah,%ch
     cd5:	9b                   	fwait
     cd6:	0c 3b                	or     $0x3b,%al
     cd8:	05 45 94 80 51       	add    $0x51809445,%eax
     cdd:	1b 21                	sbb    (%rcx),%esp
     cdf:	4a b8 40 93 7d 87 70 	rex.WX movabs $0x70857d70877d9340,%rax
     ce6:	7d 85 70 
     ce9:	7d 81                	jge    c6c <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xc6c>
     ceb:	68 7d b1 20 f8       	push   $0xfffffffff820b17d
     cf0:	26 77 64             	es ja  d57 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xd57>
     cf3:	95                   	xchg   %eax,%ebp
     cf4:	49 5b                	rex.WB pop %r11
     cf6:	8b 12                	mov    (%rdx),%edx
     cf8:	e2 e0                	loop   cda <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xcda>
     cfa:	c3                   	ret
     cfb:	6f                   	outsl  %ds:(%rsi),(%dx)
     cfc:	8d 07                	lea    (%rdi),%eax
     cfe:	be 32 92 7c 47       	mov    $0x477c9232,%esi
     d03:	70 7d                	jo     d82 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xd82>
     d05:	93                   	xchg   %eax,%ebx
     d06:	52                   	push   %rdx
     d07:	46 9c                	rex.RX pushf
     d09:	c0 9c 01 4a b6 96 6f 	rcrb   $0xd,0x6f96b64a(%rcx,%rax,1)
     d10:	0d 
     d11:	51                   	push   %rcx
     d12:	e0 43                	loopne d57 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xd57>
     d14:	14 38                	adc    $0x38,%al
     d16:	03 62 11             	add    0x11(%rdx),%esp
     d19:	62 a4 d5 48 46       	(bad)
     d1e:	42 50                	rex.X push %rax
     d20:	e4 42                	in     $0x42,%al
     d22:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     d23:	cd fe                	int    $0xfe
     d25:	3b 8a 83 0d 34 da    	cmp    -0x25cbf27d(%rdx),%ecx
     d2b:	95                   	xchg   %eax,%ebp
     d2c:	fc                   	cld
     d2d:	b9 45 84 40 2d       	mov    $0x2d408445,%ecx
     d32:	83 5c 48 90 33       	sbbl   $0x33,-0x70(%rax,%rcx,2)
     d37:	a1 6d 21 82 40 05 7f 	movabs 0xa8b27f054082216d,%eax
     d3e:	b2 a8 
     d40:	a0 09 bc d1 da ec 09 	movabs 0xc65c09ecdad1bc09,%al
     d47:	5c c6 
     d49:	99                   	cltd
     d4a:	40 08 00             	rex or %al,(%rax)
     d4d:	79 d3                	jns    d22 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xd22>
     d4f:	62 5a 03 ac b5       	(bad)
     d54:	fc                   	cld
     d55:	f1                   	int1
     d56:	06                   	(bad)
     d57:	ac                   	lods   %ds:(%rsi),%al
     d58:	80 d0 8f             	adc    $0x8f,%al
     d5b:	03 ee                	add    %esi,%ebp
     d5d:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     d5e:	6a 91                	push   $0xffffffffffffff91
     d60:	c2 41 72             	ret    $0x7241
     d63:	21 03                	and    %eax,(%rbx)
     d65:	de 66 06             	fisubs 0x6(%rsi)
     d68:	dc 49 cd             	fmull  -0x33(%rcx)
     d6b:	52                   	push   %rdx
     d6c:	c7                   	(bad)
     d6d:	1c c0                	sbb    $0xc0,%al
     d6f:	44 62                	rex.R (bad)
     d71:	40 aa                	rex stos %al,%es:(%rdi)
     d73:	02 43 31             	add    0x31(%rbx),%al
     d76:	a0 8f 58 6f 32 ac 3b 	movabs 0x22fb3bac326f588f,%al
     d7d:	fb 22 
     d7f:	49 df 5a 0d          	rex.WB fistps 0xd(%r10)
     d83:	63 70 5c             	movsxd 0x5c(%rax),%esi
     d86:	e0 d0                	loopne d58 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xd58>
     d88:	21 a7 d3 03 23 55    	and    %esp,0x552303d3(%rdi)
     d8e:	40                   	rex
     d8f:	48 01 df             	add    %rbx,%rdi
     d92:	7e bc                	jle    d50 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xd50>
     d94:	c2 b7 87             	ret    $0x87b7
     d97:	ab                   	stos   %eax,%es:(%rdi)
     d98:	67 c9                	addr32 leave
     d9a:	4a f6 f1             	rex.WX div %cl
     d9d:	02 ce                	add    %dh,%cl
     d9f:	fc                   	cld
     da0:	92                   	xchg   %eax,%edx
     da1:	b6 e6                	mov    $0xe6,%dh
     da3:	e3 4f                	jrcxz  df4 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xdf4>
     da5:	7d 8d                	jge    d34 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xd34>
     da7:	62 71 ce 87 98       	(bad)
     dac:	84 a2 a3 ba 20 3d    	test   %ah,0x3d20baa3(%rdx)
     db2:	be cd e8 8a 9b       	mov    $0x9b8ae8cd,%esi
     db7:	05 44 05 8d b2       	add    $0xb28d0544,%eax
     dbc:	64 25 f3 4b 1a d7    	fs and $0xd71a4bf3,%eax
     dc2:	7b fc                	jnp    dc0 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xdc0>
     dc4:	a9 2f f1 8d ce       	test   $0xce8df12f,%eax
     dc9:	2f                   	(bad)
     dca:	af                   	scas   %es:(%rdi),%eax
     dcb:	0c c7                	or     $0xc7,%al
     dcd:	d9 10                	fsts   (%rax)
     dcf:	93                   	xchg   %eax,%ebx
     dd0:	50                   	push   %rax
     dd1:	04 a1                	add    $0xa1,%al
     dd3:	2e 01 fe             	cs add %edi,%esi
     dd6:	80 93 d5 ba 46 39 cc 	adcb   $0xcc,0x3946bad5(%rbx)
     ddd:	8c 78 67             	mov    %?,0x67(%rax)
     de0:	08 1c ba             	or     %bl,(%rdx,%rdi,4)
     de3:	ce                   	(bad)
     de4:	bb 28 f5 07 43       	mov    $0x4307f528,%ebx
     de9:	de 19                	ficomps (%rcx)
     deb:	26 4a 3d 80 1f 5d eb 	es rex.WX cmp $0xffffffffeb5d1f80,%rax
     df2:	cf                   	iret
     df3:	05 c2 03 72 c7       	add    $0xc77203c2,%eax
     df8:	79 ec                	jns    de6 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xde6>
     dfa:	b8 b3 0d d1 96       	mov    $0x96d10db3,%eax
     dff:	1f                   	(bad)
     e00:	4b 1a 59 07          	rex.WXB sbb 0x7(%r9),%bl
     e04:	3f                   	(bad)
     e05:	22 e0                	and    %al,%ah
     e07:	3a 08                	cmp    (%rax),%cl
     e09:	b8 b3 ad d0 01       	mov    $0x1d0adb3,%eax
     e0e:	69 d6 30 33 7a e0    	imul   $0xe07a3330,%esi,%edx
     e14:	67 00 a4 28 b5 00 5e 	add    %ah,-0x3a1ff4b(%eax,%ebp,1)
     e1b:	fc 
     e1c:	52                   	push   %rdx
     e1d:	a3 28 d5 07 1f 3a 04 	movabs %eax,0x4d58043a1f07d528
     e24:	58 4d 
     e26:	12 71 8e             	adc    -0x72(%rcx),%dh
     e29:	c5 01 9e             	(bad)
     e2c:	63 80 3b db 12 b7    	movsxd -0x48ed24c5(%rax),%eax
     e32:	14 d0                	adc    $0xd0,%al
     e34:	64 09 07             	or     %eax,%fs:(%rdi)
     e37:	1f                   	(bad)
     e38:	ba 71 1c 37 ee       	mov    $0xee371c71,%edx
     e3d:	6c                   	insb   (%dx),%es:(%rdi)
     e3e:	43 dc e2             	rex.XB fsub %st,%st(2)
     e41:	03 8d 1d 0f 26 d4    	add    -0x2bd9f0e3(%rbp),%ecx
     e47:	04 4d                	add    $0x4d,%al
     e49:	e0 1f                	loopne e6a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xe6a>
     e4b:	e6 f0                	out    %al,$0xf0
     e4d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     e4e:	c7                   	(bad)
     e4f:	61                   	(bad)
     e50:	13 3a                	adc    (%rdx),%edi
     e52:	eb e5                	jmp    e39 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xe39>
     e54:	91                   	xchg   %eax,%ecx
     e55:	32 33                	xor    (%rbx),%dh
     e57:	72 50                	jb     ea9 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xea9>
     e59:	28 90 c7 a1 bb 04    	sub    %dl,0x4bba1c7(%rax)
     e5f:	27                   	(bad)
     e60:	4a                   	rex.WX
     e61:	d5 c1 92 be d4 26 4a 	{rex2 0xc1} setb 0x254a26d4(%r14)
     e68:	25 
     e69:	a0 c7 9e f5 e7 ee b0 	movabs 0x92c1b0eee7f59ec7,%al
     e70:	c1 92 
     e72:	6a dc                	push   $0xffffffffffffffdc
     e74:	c6                   	(bad)
     e75:	20 ae 71 67 1b a1    	and    %ch,-0x5ee4988f(%rsi)
     e7b:	a0 0e 26 34 7a 6c c6 	movabs 0xb469c66c7a34260e,%al
     e82:	69 b4 
     e84:	20 9e 71 67 9b a0    	and    %bl,-0x5f64988f(%rsi)
     e8a:	60                   	(bad)
     e8b:	17                   	(bad)
     e8c:	02 9e 22 e5 ec 06    	add    0x6ece522(%rsi),%bl
     e92:	e0 bd                	loopne e51 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xe51>
     e94:	6f                   	outsl  %ds:(%rsi),(%dx)
     e95:	72 c3                	jb     e5a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xe5a>
     e97:	92                   	xchg   %eax,%edx
     e98:	33 f9                	xor    %ecx,%edi
     e9a:	f3 0c 1e             	repz or $0x1e,%al
     e9d:	0e                   	(bad)
     e9e:	5e                   	pop    %rsi
     e9f:	04 e5                	add    $0xe5,%al
     ea1:	50                   	push   %rax
     ea2:	2a 52 97             	sub    -0x69(%rdx),%dl
     ea5:	8f                   	(bad)
     ea6:	f7 70 b9             	divl   -0x47(%rax)
     ea9:	e4 bc                	in     $0xbc,%al
     eab:	77 d6                	ja     e83 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xe83>
     ead:	bb 73 88 e6 46       	mov    $0x46e68873,%ebx
     eb2:	c8 cc 28 77          	enter  $0x28cc,$0x77
     eb6:	56                   	push   %rsi
     eb7:	c7                   	(bad)
     eb8:	71 ac                	jno    e66 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xe66>
     eba:	25 0d 30 89 cb       	and    $0xcb89300d,%eax
     ebf:	0d c6 e3 75 29       	or     $0x2975e3c6,%eax
     ec4:	7b 26                	jnp    eec <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xeec>
     ec6:	d9 dd                	(bad)
     ec8:	60                   	(bad)
     ec9:	c3                   	ret
     eca:	6f                   	outsl  %ds:(%rsi),(%dx)
     ecb:	d2 c6                	rol    %cl,%dh
     ecd:	92                   	xchg   %eax,%edx
     ece:	4f                   	rex.WRXB
     ecf:	f0 e7 04             	lock out %eax,$0x4
     ed2:	9f                   	lahf
     ed3:	72 29                	jb     efe <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xefe>
     ed5:	6f                   	outsl  %ds:(%rsi),(%dx)
     ed6:	36 16                	ss (bad)
     ed8:	e0 50                	loopne f2a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xf2a>
     eda:	c6 05 78 53 5f 96 37 	movb   $0x37,-0x69a0ac88(%rip)        # ffffffff965f6259 <utils.cpp.0ab61856+0xffffffff965f6259>
     ee1:	ba 1c 32 ee 6c       	mov    $0x6cee321c,%edx
     ee6:	a3 23 d8 05 07 0a 5e 	movabs %eax,0x36725e0a0705d823
     eed:	72 36 
     eef:	3c 23                	cmp    $0x23,%al
     ef1:	8a 73 88             	mov    -0x78(%rbx),%dh
     ef4:	e6 e6                	out    %al,$0xe6
     ef6:	84 e7                	test   %ah,%bh
     ef8:	4f 72 90             	rex.WRXB jb e8b <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xe8b>
     efb:	6e                   	outsb  %ds:(%rsi),(%dx)
     efc:	1c ba                	sbb    $0xba,%al
     efe:	5e                   	pop    %rsi
     eff:	0f 52 c6             	rsqrtps %xmm6,%xmm0
     f02:	0f 95 d9             	setne  %cl
     f05:	90                   	nop
     f06:	24 bf                	and    $0xbf,%al
     f08:	40                   	rex
     f09:	47 1b 87 2e f3 4f 94 	rex.RXB sbb -0x6bb00cd2(%r15),%r8d
     f10:	4a 83 fb 9c          	rex.WX cmp $0xffffffffffffff9c,%rbx
     f14:	69 18 a5 ce 60 c4    	imul   $0xc460cea5,(%rax),%ebx
     f1a:	3f                   	(bad)
     f1b:	f0 e7 d6             	lock out %eax,$0xd6
     f1e:	88 d1                	mov    %dl,%cl
     f20:	07                   	(bad)
     f21:	c6                   	(bad)
     f22:	63 e8                	movsxd %eax,%ebp
     f24:	80 71 27 9b          	xorb   $0x9b,0x27(%rcx)
     f28:	08 5b c0             	or     %bl,-0x40(%rbx)
     f2b:	d0 d8                	rcr    $1,%al
     f2d:	d0 4b 3e             	rorb   $1,0x3e(%rbx)
     f30:	e5 5e                	in     $0x5e,%eax
     f32:	ef                   	out    %eax,(%dx)
     f33:	2e fc                	cs cld
     f35:	e2 5c                	loop   f93 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xf93>
     f37:	df f5                	fcomip %st(5),%st
     f39:	81 85 f8 e4 2a e6 64 	addl   $0x2fe2eb64,-0x19d51b08(%rbp)
     f40:	eb e2 2f 
     f43:	de 80 07 2c 5d dc    	fiadds -0x23a2d3f9(%rax)
     f49:	c9                   	leave
     f4a:	e6 68                	out    %al,$0x68
     f4c:	46 95                	rex.RX xchg %eax,%ebp
     f4e:	af                   	scas   %es:(%rdi),%eax
     f4f:	3c 08                	cmp    $0x8,%al
     f51:	5c                   	pop    %rsp
     f52:	20 1d e6 70 41 06    	and    %bl,0x64170e6(%rip)        # 641803e <utils.cpp.0ab61856+0x641803e>
     f58:	02 1c 2a             	add    (%rdx,%rbp,1),%bl
     f5b:	e3 74                	jrcxz  fd1 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xfd1>
     f5d:	6b 48 04 2e          	imul   $0x2e,0x4(%rax),%ecx
     f61:	30 b8 4e 94 83 15    	xor    %bh,0x1583944e(%rax)
     f67:	8a 60 07             	mov    0x7(%rax),%ah
     f6a:	83 03 bf             	addl   $0xffffffbf,(%rbx)
     f6d:	c9                   	leave
     f6e:	17                   	(bad)
     f6f:	48 9e                	rex.W sahf
     f71:	04 10                	add    $0x10,%al
     f73:	10 ec                	adc    %ch,%ah
     f75:	5c                   	pop    %rsp
     f76:	e7 dc                	out    %eax,$0xdc
     f78:	e8 0d 35 86 97       	call   ffffffff9786448a <utils.cpp.0ab61856+0xffffffff9786448a>
     f7d:	2c 2a                	sub    $0x2a,%al
     f7f:	1a 57 e7             	sbb    -0x19(%rdi),%dl
     f82:	c0 24 bf 3a          	shlb   $0x3a,(%rdi,%rdi,4)
     f86:	d3 14 31             	rcll   %cl,(%rcx,%rsi,1)
     f89:	12 c6                	adc    %dh,%al
     f8b:	0b 40 37             	or     0x37(%rax),%eax
     f8e:	57                   	push   %rdi
     f8f:	5c                   	pop    %rsp
     f90:	f8                   	clc
     f91:	ff                   	(bad)
     f92:	3d da b5 e0 bf       	cmp    $0xbfe0b5da,%eax
     f97:	5b                   	pop    %rbx
     f98:	11 92 76 c5 82 11    	adc    %edx,0x1182c576(%rdx)
     f9e:	5c                   	pop    %rsp
     f9f:	82                   	(bad)
     fa0:	3f                   	(bad)
     fa1:	cb                   	lret
     fa2:	0a 03                	or     (%rbx),%al
     fa4:	83 9f a8 c2 68 29 0e 	sbbl   $0xe,0x2968c2a8(%rdi)
     fab:	73 4a                	jae    ff7 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xff7>
     fad:	21 34 23             	and    %esi,(%rbx,%riz,1)
     fb0:	22 22                	and    (%rdx),%ah
     fb2:	92                   	xchg   %eax,%edx
     fb3:	24 49                	and    $0x49,%al
     fb5:	3a d2                	cmp    %dl,%dl
     fb7:	0b 10                	or     (%rax),%edx
     fb9:	0a 63 59             	or     0x59(%rbx),%ah
     fbc:	29 25 ec 01 12 60    	sub    %esp,0x601201ec(%rip)        # 601211ae <utils.cpp.0ab61856+0x601211ae>
     fc2:	93                   	xchg   %eax,%ebx
     fc3:	61                   	(bad)
     fc4:	14 e9                	adc    $0xe9,%al
     fc6:	9c                   	pushf
     fc7:	23 48 64             	and    0x64(%rax),%ecx
     fca:	86 53 18             	xchg   %dl,0x18(%rbx)
     fcd:	c6                   	(bad)
     fce:	4a d7                	rex.WX xlat %ds:(%rbx)
     fd0:	48 ac                	rex.W lods %ds:(%rsi),%al
     fd2:	d6                   	(bad)
     fd3:	10 ea                	adc    %ch,%dl
     fd5:	84 d1                	test   %dl,%cl
     fd7:	b0 13                	mov    $0x13,%al
     fd9:	d0 3d 4c 4c cd c1    	sarb   $1,-0x3e32b3b4(%rip)        # ffffffffc1cd5c2b <utils.cpp.0ab61856+0xffffffffc1cd5c2b>
     fdf:	7d 95                	jge    f76 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xf76>
     fe1:	ea                   	(bad)
     fe2:	76 d0                	jbe    fb4 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xfb4>
     fe4:	29 18                	sub    %ebx,(%rax)
     fe6:	94                   	xchg   %eax,%esp
     fe7:	c4                   	(bad)
     fe8:	8e e6                	mov    %esi,%fs
     fea:	0c 80                	or     $0x80,%al
     fec:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     fed:	a2 11 fb ac cc 53 72 	movabs %al,0x2a857253ccacfb11
     ff4:	85 2a 
     ff6:	02 a3 a7 7e c9 47    	add    0x47c97ea7(%rbx),%ah
     ffc:	74 6c                	je     106a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x106a>
     ffe:	11 52 f6             	adc    %edx,-0xa(%rdx)
    1001:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    1002:	f5                   	cmc
    1003:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    1004:	0d d7 29 99 ab       	or     $0xab9929d7,%eax
    1009:	1b 82 c4 22 00 53    	sbb    0x530022c4(%rdx),%eax
    100f:	50                   	push   %rax
    1010:	95                   	xchg   %eax,%ebp
    1011:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1012:	5d                   	pop    %rbp
    1013:	ec                   	in     (%dx),%al
    1014:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    1015:	a0 16 ab 9c 1a 82 ee 	movabs 0xc997ee821a9cab16,%al
    101c:	97 c9 
    101e:	6c                   	insb   (%dx),%es:(%rdi)
    101f:	e8 e5 d7 94 1f       	call   1f94e809 <utils.cpp.0ab61856+0x1f94e809>
    1024:	7c 17                	jl     103d <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x103d>
    1026:	cf                   	iret
    1027:	65 d3 15 4d bd 13 c6 	rcll   %cl,%gs:-0x39ec42b3(%rip)        # ffffffffc613cd7b <utils.cpp.0ab61856+0xffffffffc613cd7b>
    102e:	8f                   	(bad)
    102f:	b3 9d                	mov    $0x9d,%bl
    1031:	de 5e 5e             	ficomps 0x5e(%rsi)
    1034:	d7                   	xlat   %ds:(%rbx)
    1035:	c6                   	(bad)
    1036:	d1 89 dd 73 a7 ac    	rorl   $1,-0x53588c23(%rcx)
    103c:	ce                   	(bad)
    103d:	e3 84                	jrcxz  fc3 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xfc3>
    103f:	fc                   	cld
    1040:	1f                   	(bad)
    1041:	2a d4                	sub    %ah,%dl
    1043:	64 fc                	fs cld
    1045:	cf                   	iret
    1046:	06                   	(bad)
    1047:	49 35 50 23 fe d7    	rex.WB xor $0xffffffffd7fe2350,%rax
    104d:	77 ab                	ja     ffa <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0xffa>
    104f:	82                   	(bad)
    1050:	17                   	(bad)
    1051:	f6 34 47             	divb   (%rdi,%rax,2)
    1054:	02 fd                	add    %ch,%bh
    1056:	84 c5                	test   %al,%ch
    1058:	2c ed                	sub    $0xed,%al
    105a:	db 91 9a 9a d5 1d    	fistl  0x1dd59a9a(%rcx)
    1060:	cf                   	iret
    1061:	07                   	(bad)
    1062:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    1063:	4b 23 7e 26          	rex.WXB and 0x26(%r14),%rdi
    1067:	82                   	(bad)
    1068:	23 9f 54 01 3f ee    	and    -0x11c0feac(%rdi),%ebx
    106e:	aa                   	stos   %al,%es:(%rdi)
    106f:	44 f4                	rex.R hlt
    1071:	b9 a9 db 26 e7       	mov    $0xe726dba9,%ecx
    1076:	01 73 cc             	add    %esi,-0x34(%rbx)
    1079:	c9                   	leave
    107a:	06                   	(bad)
    107b:	bc b4 43 a6 c8       	mov    $0xc8a643b4,%esp
    1080:	ef                   	out    %eax,(%dx)
    1081:	7e ae                	jle    1031 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1031>
    1083:	e4 e4                	in     $0xe4,%al
    1085:	96                   	xchg   %eax,%esi
    1086:	d2 87 9f 4a 8e fb    	rolb   %cl,-0x471b561(%rdi)
    108c:	2d a7 15 10 88       	sub    $0x881015a7,%eax
    1091:	8a 90 66 47 d4 39    	mov    0x39d44766(%rax),%dl
    1097:	9c                   	pushf
    1098:	82                   	(bad)
    1099:	fc                   	cld
    109a:	e6 1c                	out    %al,$0x1c
    109c:	b6 01                	mov    $0x1,%dh
    109e:	67 12 b0 9d e3 65 d1 	adc    -0x2e9a1c63(%eax),%dh
    10a5:	71 2e                	jno    10d5 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x10d5>
    10a7:	e7 41                	out    %eax,$0x41
    10a9:	83 69 8f ee          	subl   $0xffffffee,-0x71(%rcx)
    10ad:	e5 30                	in     $0x30,%eax
    10af:	45 9e                	rex.RB sahf
    10b1:	5e                   	pop    %rsi
    10b2:	12 04 03             	adc    (%rbx,%rax,1),%al
    10b5:	65 89 fc             	gs mov %edi,%esp
    10b8:	39 a6 b4 88 b7 f9    	cmp    %esp,-0x648774c(%rsi)
    10be:	14 07                	adc    $0x7,%al
    10c0:	51                   	push   %rcx
    10c1:	c6                   	(bad)
    10c2:	a2 35 fa c5 42 cd 93 	movabs %al,0xf63c93cd42c5fa35
    10c9:	3c f6 
    10cb:	f5                   	cmc
    10cc:	34 cb                	xor    $0xcb,%al
    10ce:	c0 87 f6 b4 6d 7d 66 	rolb   $0x66,0x7d6db4f6(%rdi)
    10d5:	d5 41 36             	{rex2 0x41} (bad)
    10d8:	6b 57 69 18          	imul   $0x18,0x69(%rdi),%edx
    10dc:	16                   	(bad)
    10dd:	ec                   	in     (%dx),%al
    10de:	20 e6                	and    %ah,%dh
    10e0:	d2 2d 39 b9 da 0d    	shrb   %cl,0xddab939(%rip)        # ddaca1f <utils.cpp.0ab61856+0xddaca1f>
    10e6:	79 d5                	jns    10bd <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x10bd>
    10e8:	d6                   	(bad)
    10e9:	7f 28                	jg     1113 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1113>
    10eb:	dd fc                	(bad)
    10ed:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    10ee:	43                   	rex.XB
    10ef:	64 f7 e1             	fs mul %ecx
    10f2:	03 f9                	add    %ecx,%edi
    10f4:	0d 40 f0 69 b6       	or     $0xb669f040,%eax
    10f9:	da a5 10 45 0e 91    	fisubl -0x6ef1baf0(%rbp)
    10ff:	e0 ac                	loopne 10ad <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x10ad>
    1101:	b2 fb                	mov    $0xfb,%dl
    1103:	70 72                	jo     1177 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1177>
    1105:	1b 1b                	sbb    (%rbx),%ebx
    1107:	76 0c                	jbe    1115 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1115>
    1109:	5d                   	pop    %rbp
    110a:	09 e3                	or     %esp,%ebx
    110c:	5c                   	pop    %rsp
    110d:	41 77 72             	rex.B ja 1182 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1182>
    1110:	7e 72                	jle    1184 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1184>
    1112:	7d 70                	jge    1184 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1184>
    1114:	24 ec                	and    $0xec,%al
    1116:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1117:	ee                   	out    %al,(%dx)
    1118:	d8 df                	fcomp  %st(7)
    111a:	48                   	rex.W
    111b:	45 75 90             	rex.RB jne 10ae <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x10ae>
    111e:	0e                   	(bad)
    111f:	8e 27                	mov    (%rdi),%fs
    1121:	1c 57                	sbb    $0x57,%al
    1123:	5b                   	pop    %rbx
    1124:	93                   	xchg   %eax,%ebx
    1125:	e9 dd 02 4e 65       	jmp    654e1407 <utils.cpp.0ab61856+0x654e1407>
    112a:	12 30                	adc    (%rax),%dh
    112c:	e3 38                	jrcxz  1166 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1166>
    112e:	8f                   	(bad)
    112f:	34 76                	xor    $0x76,%al
    1131:	c7                   	(bad)
    1132:	74 66                	je     119a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x119a>
    1134:	79 aa                	jns    10e0 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x10e0>
    1136:	dc ce                	fmul   %st,%st(6)
    1138:	9b                   	fwait
    1139:	e1 01                	loope  113c <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x113c>
    113b:	6c                   	insb   (%dx),%es:(%rdi)
    113c:	c6                   	(bad)
    113d:	92                   	xchg   %eax,%edx
    113e:	47                   	rex.RXB
    113f:	43 fc                	rex.XB cld
    1141:	25 19 e7 7f 62       	and    $0x627fe719,%eax
    1146:	c1 a0 4c dc 0a ae 08 	shll   $0x8,-0x51f523b4(%rax)
    114d:	c2 19 f2             	ret    $0xf219
    1150:	41 e5 ec             	rex.B in $0xec,%eax
    1153:	1a f6                	sbb    %dh,%dh
    1155:	ff a7 29 8a c7 ff    	jmp    *-0x3875d7(%rdi)
    115b:	68 9c 6d f6 f0       	push   $0xfffffffff0f66d9c
    1160:	14 3a                	adc    $0x3a,%al
    1162:	07                   	(bad)
    1163:	b1 0b                	mov    $0xb,%cl
    1165:	69 a7 52 9c e1 44 c2 	imul   $0x98279ac2,0x44e19c52(%rdi),%esp
    116c:	9a 27 98 
    116f:	e2 09                	loop   117a <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x117a>
    1171:	d3 f4                	shl    %cl,%esp
    1173:	b2 00                	mov    $0x0,%dl
    1175:	f7 b2 96 16 9f 64    	divl   0x649f1696(%rdx)
    117b:	67 94                	addr32 xchg %eax,%esp
    117d:	32 07                	xor    (%rdi),%al
    117f:	71 fa                	jno    117b <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x117b>
    1181:	d0 68 61             	shrb   $1,0x61(%rax)
    1184:	b6 fb                	mov    $0xfb,%dh
    1186:	84 00                	test   %al,(%rax)
    1188:	19 0c 8f             	sbb    %ecx,(%rdi,%rcx,4)
    118b:	8e 17                	mov    (%rdi),%ss
    118d:	08 26                	or     %ah,(%rsi)
    118f:	33 e0                	xor    %eax,%esp
    1191:	7d 1a                	jge    11ad <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x11ad>
    1193:	b6 33                	mov    $0x33,%dh
    1195:	2a 1b                	sub    (%rbx),%bl
    1197:	08 0f                	or     %cl,(%rdi)
    1199:	01 85 d4 bc cf ed    	add    %eax,-0x1230432c(%rbp)
    119f:	b0 20                	mov    $0x20,%al
    11a1:	24 b2                	and    $0xb2,%al
    11a3:	6b de 6d             	imul   $0x6d,%esi,%ebx
    11a6:	6d                   	insl   (%dx),%es:(%rdi)
    11a7:	1f                   	(bad)
    11a8:	92                   	xchg   %eax,%edx
    11a9:	b2 24                	mov    $0x24,%dl
    11ab:	4d 2d 00 96 09 5a    	rex.WRB sub $0x5a099600,%rax
    11b1:	8d 8b b2 e1 8b 78    	lea    0x788be1b2(%rbx),%ecx
    11b7:	34 85                	xor    $0x85,%al
    11b9:	c2 b9 e7             	ret    $0xe7b9
    11bc:	83 25 1e 2e 41 00 db 	andl   $0xffffffdb,0x412e1e(%rip)        # 413fe1 <utils.cpp.0ab61856+0x413fe1>
    11c3:	8c 10                	mov    %ss,(%rax)
    11c5:	c8 f4 ea 87          	enter  $0xeaf4,$0x87
    11c9:	94                   	xchg   %eax,%esp
    11ca:	57                   	push   %rdi
    11cb:	73 69                	jae    1236 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1236>
    11cd:	4f 5a                	rex.WRXB pop %r10
    11cf:	63 4f 6a             	movsxd 0x6a(%rdi),%ecx
    11d2:	b5 c0                	mov    $0xc0,%ch
    11d4:	a9 50 0f 0e c0       	test   $0xc00e0f50,%eax
    11d9:	7d cc                	jge    11a7 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x11a7>
    11db:	a3 3a 1e 04 bf f9 23 	movabs %eax,0xc0c823f9bf041e3a
    11e2:	c8 c0 
    11e4:	2c ad                	sub    $0xad,%al
    11e6:	b7 45                	mov    $0x45,%bh
    11e8:	d5 09 d5             	{rex2 0x9} (bad)
    11eb:	cc                   	int3
    11ec:	39 b4 93 5c b7 e4 c4 	cmp    %esi,-0x3b1b48a4(%rbx,%rdx,4)
    11f3:	01 65 2b             	add    %esp,0x2b(%rbp)
    11f6:	c5 a1 ef cb          	vpxor  %xmm3,%xmm11,%xmm1
    11fa:	7c ff                	jl     11fb <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x11fb>
    11fc:	b6 e8                	mov    $0xe8,%dh
    11fe:	ac                   	lods   %ds:(%rsi),%al
    11ff:	89 38                	mov    %edi,(%rax)
    1201:	5f                   	pop    %rdi
    1202:	6e                   	outsb  %ds:(%rsi),(%dx)
    1203:	b9 b1 00 e7 f3       	mov    $0xf3e700b1,%ecx
    1208:	50                   	push   %rax
    1209:	6f                   	outsl  %ds:(%rsi),(%dx)
    120a:	06                   	(bad)
    120b:	30 cc                	xor    %cl,%ah
    120d:	2b ff                	sub    %edi,%edi
    120f:	70 d1                	jo     11e2 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x11e2>
    1211:	84 8c 91 99 7c 40 6a 	test   %cl,0x6a407c99(%rcx,%rdx,4)
    1218:	11 e0                	adc    %esp,%eax
    121a:	8b 67 b4             	mov    -0x4c(%rdi),%esp
    121d:	d0 20                	shlb   $1,(%rax)
    121f:	89 58 16             	mov    %ebx,0x16(%rax)
    1222:	52                   	push   %rdx
    1223:	73 70                	jae    1295 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1295>
    1225:	62 02 de 00 e1       	(bad)
    122a:	64 0c ee             	fs or  $0xee,%al
    122d:	11 a5 3d e0 39 f6    	adc    %esp,-0x9c61fc3(%rbp)
    1233:	47 20 cd             	rex.RXB and %r9b,%r13b
    1236:	fa                   	cli
    1237:	a1 ab 40 bb de e3 a5 	movabs 0xe410a5e3debb40ab,%eax
    123e:	10 e4 
    1240:	6a c7                	push   $0xffffffffffffffc7
    1242:	81 55 60 57 8b 43 1c 	adcl   $0x1c438b57,0x60(%rbp)
    1249:	f9                   	stc
    124a:	ea                   	(bad)
    124b:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    124c:	79 93                	jns    11e1 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x11e1>
    124e:	31 aa c0 a9 00 de    	xor    %ebp,-0x21ff5640(%rdx)
    1254:	a2 70 88 53 63 bd b5 	movabs %al,0x7880b5bd63538870
    125b:	80 78 
    125d:	9b                   	fwait
    125e:	08 fc                	or     %bh,%ah
    1260:	1c 7b                	sbb    $0x7b,%al
    1262:	2a e6                	sub    %dh,%ah
    1264:	ac                   	lods   %ds:(%rsi),%al
    1265:	01 97 7e 3d 17 03    	add    %edx,0x3173d7e(%rdi)
    126b:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    126c:	b2 5c                	mov    $0x5c,%dl
    126e:	90                   	nop
    126f:	ec                   	in     (%dx),%al
    1270:	89 b8 3d 92 58 b2    	mov    %edi,-0x4da76dc3(%rax)
    1276:	b1 44                	mov    $0x44,%cl
    1278:	60                   	(bad)
    1279:	8f                   	(bad)
    127a:	6b 77 86 a0          	imul   $0xffffffa0,-0x7a(%rdi),%esi
    127e:	42 25 c2 a1 e4 88    	rex.X and $0x88e4a1c2,%eax
    1284:	7a 95                	jp     121b <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x121b>
    1286:	1b 64 4f e4          	sbb    -0x1c(%rdi,%rcx,2),%esp
    128a:	f6 46 3b 30          	testb  $0x30,0x3b(%rsi)
    128e:	e0 48                	loopne 12d8 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x12d8>
    1290:	de c0                	faddp  %st,%st(0)
    1292:	d3 7b 8d             	sarl   %cl,-0x73(%rbx)
    1295:	a1 5e 20 89 7a bc 90 	movabs 0x179590bc7a89205e,%eax
    129c:	95 17 
    129e:	5e                   	pop    %rsi
    129f:	2a e5                	sub    %ch,%ah
    12a1:	c8 6f d1 2e          	enter  $0xd16f,$0x2e
    12a5:	79 da                	jns    1281 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1281>
    12a7:	02 fd                	add    %ch,%bh
    12a9:	db ef                	fucomi %st(7),%st
    12ab:	65 b6 53             	gs mov $0x53,%dh
    12ae:	1f                   	(bad)
    12af:	38 c2                	cmp    %al,%dl
    12b1:	eb 17                	jmp    12ca <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x12ca>
    12b3:	94                   	xchg   %eax,%esp
    12b4:	7e 86                	jle    123c <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x123c>
    12b6:	fb                   	sti
    12b7:	fa                   	cli
    12b8:	cf                   	iret
    12b9:	3e 18 3f             	ds sbb %bh,(%rdi)
    12bc:	8d 1e                	lea    (%rsi),%ebx
    12be:	49 a4                	rex.WB movsb %ds:(%rsi),%es:(%rdi)
    12c0:	72 0d                	jb     12cf <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x12cf>
    12c2:	9d                   	popf
    12c3:	ac                   	lods   %ds:(%rsi),%al
    12c4:	8e e5                	mov    %ebp,%fs
    12c6:	84 41 ca             	test   %al,-0x36(%rcx)
    12c9:	78 d1                	js     129c <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x129c>
    12cb:	c0 dc 8d             	rcr    $0x8d,%ah
    12ce:	c2 e5 20             	ret    $0x20e5
    12d1:	1c 97                	sbb    $0x97,%al
    12d3:	82                   	(bad)
    12d4:	d0 a0 89 46 09 58    	shlb   $1,0x58094689(%rax)
    12da:	02 40 b9             	add    -0x47(%rax),%al
    12dd:	bc 7f 1f 0a 1c       	mov    $0x1c0a1f7f,%esp
    12e2:	e8 c0 c0 52 3c       	call   3c52d3a7 <utils.cpp.0ab61856+0x3c52d3a7>
    12e7:	c1 68 0b 7b          	shrl   $0x7b,0xb(%rax)
    12eb:	81 24 c9 cb f1 7a 4e 	andl   $0x4e7af1cb,(%rcx,%rcx,8)
    12f2:	6c                   	insb   (%dx),%es:(%rdi)
    12f3:	e7 82                	out    %eax,$0x82
    12f5:	34 b3                	xor    $0xb3,%al
    12f7:	19 ca                	sbb    %ecx,%edx
    12f9:	5b                   	pop    %rbx
    12fa:	91                   	xchg   %eax,%ecx
    12fb:	ed                   	in     (%dx),%eax
    12fc:	ad                   	lods   %ds:(%rsi),%eax
    12fd:	f1                   	int1
    12fe:	0d 49 02 1b 0a       	or     $0xa1b0249,%eax
    1303:	48 f9                	rex.W stc
    1305:	43 3c 43             	rex.XB cmp $0x43,%al
    1308:	97                   	xchg   %eax,%edi
    1309:	06                   	(bad)
    130a:	83 1f d2             	sbbl   $0xffffffd2,(%rdi)
    130d:	37                   	(bad)
    130e:	fd                   	std
    130f:	36 18 fe             	ss sbb %bh,%dh
    1312:	09 4e 47             	or     %ecx,0x47(%rsi)
    1315:	de c4                	faddp  %st,%st(4)
    1317:	85 eb                	test   %ebp,%ebx
    1319:	a9 1b 3b 95 98       	test   $0x98953b1b,%eax
    131e:	73 b6                	jae    12d6 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x12d6>
    1320:	eb 37                	jmp    1359 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1359>
    1322:	58                   	pop    %rax
    1323:	37                   	(bad)
    1324:	dd f3                	(bad)
    1326:	8b 32                	mov    (%rdx),%esi
    1328:	67 8d a9 b6 60 43 14 	lea    0x144360b6(%ecx),%ebp
    132f:	9c                   	pushf
    1330:	c8 8a b7 1c          	enter  $0xb78a,$0x1c
    1334:	7d cb                	jge    1301 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1301>
    1336:	04 cb                	add    $0xcb,%al
    1338:	1a 0c 0c             	sbb    (%rsp,%rcx,1),%cl
    133b:	c0 c4 71             	rol    $0x71,%ah
    133e:	36 4b 3f             	ss rex.WXB (bad)
    1341:	ac                   	lods   %ds:(%rsi),%al
    1342:	3b 14 4c             	cmp    (%rsp,%rcx,2),%edx
    1345:	e5 b8                	in     $0xb8,%eax
    1347:	82                   	(bad)
    1348:	85 77 87             	test   %esi,-0x79(%rdi)
    134b:	c7                   	(bad)
    134c:	90                   	nop
    134d:	f6 23                	mulb   (%rbx)
    134f:	8f                   	(bad)
    1350:	37                   	(bad)
    1351:	47 62 ce ab c4 32    	(bad)
    1357:	6d                   	insl   (%dx),%es:(%rdi)
    1358:	11 31                	adc    %esi,(%rcx)
    135a:	11 59 ad             	adc    %ebx,-0x53(%rcx)
    135d:	e0 72                	loopne 13d1 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x13d1>
    135f:	d5 f9 bd fa          	{rex2 0xf9} bsr %r26,%r23
    1363:	4e                   	rex.WRX
    1364:	48 92                	xchg   %rax,%rdx
    1366:	2e 26 9e             	cs es sahf
    1369:	05 5f fa fd 01       	add    $0x1fdfa5f,%eax
    136e:	3d 76 54 be 9c       	cmp    $0x9cbe5476,%eax
    1373:	ec                   	in     (%dx),%al
    1374:	72 9d                	jb     1313 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1313>
    1376:	c2 d1 49             	ret    $0x49d1
    1379:	e9 87 c5 a6 0e       	jmp    ea6d905 <utils.cpp.0ab61856+0xea6d905>
    137e:	ea                   	(bad)
    137f:	05 6d d9 40 0b       	add    $0xb40d96d,%eax
    1384:	8e 1a                	mov    (%rdx),%ds
    1386:	83 23 75             	andl   $0x75,(%rbx)
    1389:	38 0f                	cmp    %cl,(%rdi)
    138b:	ad                   	lods   %ds:(%rsi),%eax
    138c:	81 e9 de af d2 f1    	sub    $0xf1d2afde,%ecx
    1392:	f7 62 e1             	mull   -0x1f(%rdx)
    1395:	a9 41 15 b6 ad       	test   $0xadb61541,%eax
    139a:	da b7 8a 70 2d 6a    	fidivl 0x6a2d708a(%rdi)
    13a0:	bd f6 09 ee 38       	mov    $0x38ee09f6,%ebp
    13a5:	50                   	push   %rax
    13a6:	af                   	scas   %es:(%rdi),%eax
    13a7:	60                   	(bad)
    13a8:	7b 07                	jnp    13b1 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x13b1>
    13aa:	85 51 5f             	test   %edx,0x5f(%rcx)
    13ad:	7d de                	jge    138d <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x138d>
    13af:	01 8a 91 23 e7 c7    	add    %ecx,-0x3818dc6f(%rdx)
    13b5:	39 d0                	cmp    %edx,%eax
    13b7:	2d 6f b7 5c e0       	sub    $0xe05cb76f,%eax
    13bc:	ba e2 e6 79 6c       	mov    $0x6c79e6e2,%edx
    13c1:	06                   	(bad)
    13c2:	74 36                	je     13fa <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x13fa>
    13c4:	42 b1 bf             	rex.X mov $0xbf,%cl
    13c7:	d8 00                	fadds  (%rax)
    13c9:	2b 17                	sub    (%rdi),%edx
    13cb:	f2 4f 51             	repnz rex.WRXB push %r9
    13ce:	83 8f bb 01 a0 98 91 	orl    $0xffffff91,-0x675ffe45(%rdi)
    13d5:	84 ec                	test   %ch,%ah
    13d7:	ef                   	out    %eax,(%dx)
    13d8:	67 13 38             	adc    (%eax),%edi
    13db:	a2 bf 91 e2 20 fd 80 	movabs %al,0x2b0a80fd20e291bf
    13e2:	0a 2b 
    13e4:	97                   	xchg   %eax,%edi
    13e5:	0e                   	(bad)
    13e6:	bc 07 d3 ef f3       	mov    $0xf3efd307,%esp
    13eb:	db 08                	fisttpl (%rax)
    13ed:	04 98                	add    $0x98,%al
    13ef:	df 27                	fbld   (%rdi)
    13f1:	f3 e1 c5             	repz loope 13b9 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x13b9>
    13f4:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    13f5:	0a cd                	or     %ch,%cl
    13f7:	d5 11 3d eb af 05 a5 	{rex2 0x11} cmp $0xa505afeb,%eax
    13fe:	3f                   	(bad)
    13ff:	89 06                	mov    %eax,(%rsi)
    1401:	38 52 56             	cmp    %dl,0x56(%rdx)
    1404:	a9 c5 1b be 82       	test   $0x82be1bc5,%eax
    1409:	ef                   	out    %eax,(%dx)
    140a:	1f                   	(bad)
    140b:	eb db                	jmp    13e8 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x13e8>
    140d:	9c                   	pushf
    140e:	2f                   	(bad)
    140f:	66 d4                	data16 (bad)
    1411:	e3 69                	jrcxz  147c <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x147c>
    1413:	1e                   	(bad)
    1414:	91                   	xchg   %eax,%ecx
    1415:	f4                   	hlt
    1416:	f0 81 28 73 1a 86 e0 	lock subl $0xe0861a73,(%rax)
    141d:	ab                   	stos   %eax,%es:(%rdi)
    141e:	13 4b a8             	adc    -0x58(%rbx),%ecx
    1421:	d9 2d 04 b1 24 59    	fldcw  0x5924b104(%rip)        # 5924c52b <utils.cpp.0ab61856+0x5924c52b>
    1427:	2e cd 49             	cs int $0x49
    142a:	e9 d9 00 eb 9a       	jmp    ffffffff9aeb1508 <utils.cpp.0ab61856+0xffffffff9aeb1508>
    142f:	31 d1                	xor    %edx,%ecx
    1431:	80 08 41             	orb    $0x41,(%rax)
    1434:	c6                   	(bad)
    1435:	1c f5                	sbb    $0xf5,%al
    1437:	29 a3 ca 91 5d f2    	sub    %esp,-0xda26e36(%rbx)
    143d:	1e                   	(bad)
    143e:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    143f:	01 a1 14 56 49 68    	add    %esp,0x68495614(%rcx)
    1445:	dc 04 a2             	faddl  (%rdx,%riz,4)
    1448:	30 a9 73 65 1c ac    	xor    %ch,-0x53e39a8d(%rcx)
    144e:	bb 7a 01 8f 10       	mov    $0x108f017a,%ebx
    1453:	ce                   	(bad)
    1454:	64 5e                	fs pop %rsi
    1456:	fe                   	(bad)
    1457:	af                   	scas   %es:(%rdi),%eax
    1458:	17                   	(bad)
    1459:	8f                   	(bad)
    145a:	71 8f                	jno    13eb <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x13eb>
    145c:	8e d8                	mov    %eax,%ds
    145e:	c2 1f 15             	ret    $0x151f
    1461:	1a 6e 8b             	sbb    -0x75(%rsi),%ch
    1464:	db a6 fd dd 21 9f    	(bad) -0x60de2203(%rsi)
    146a:	23 b1 70 b3 14 80    	and    -0x7feb4c90(%rcx),%esi
    1470:	2c e6                	sub    $0xe6,%al
    1472:	e6 7b                	out    %al,$0x7b
    1474:	4b 72 b0             	rex.WXB jb 1427 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1427>
    1477:	24 8c                	and    $0x8c,%al
    1479:	38 b5 a9 62 8d 1a    	cmp    %dh,0x1a8d62a9(%rbp)
    147f:	88 a9 61 b9 ab 27    	mov    %ch,0x27abb961(%rcx)
    1485:	3a 82 4b 67 cd e9    	cmp    -0x163298b5(%rdx),%al
    148b:	02 b6 cc dd 9a ae    	add    -0x51652234(%rsi),%dh
    1491:	ff                   	(bad)
    1492:	b8 29 51 06 df       	mov    $0xdf065129,%eax
    1497:	9b                   	fwait
    1498:	0d 08 75 d4 0c       	or     $0xcd47508,%eax
    149d:	5a                   	pop    %rdx
    149e:	b2 7a                	mov    $0x7a,%dl
    14a0:	f1                   	int1
    14a1:	4c 8d                	lea    (bad),%r12
    14a3:	e7 4d                	out    %eax,$0x4d
    14a5:	89 1b                	mov    %ebx,(%rbx)
    14a7:	0f a1                	pop    %fs
    14a9:	08 0c d6             	or     %cl,(%rsi,%rdx,8)
    14ac:	22 b5 b3 78 0f e6    	and    -0x19f0874d(%rbp),%dh
    14b2:	2e 8a 85 b7 34 ee 52 	cs mov 0x52ee34b7(%rbp),%al
    14b9:	0c 50                	or     $0x50,%al
    14bb:	94                   	xchg   %eax,%esp
    14bc:	25 cc 39 1d 0f       	and    $0xf1d39cc,%eax
    14c1:	98                   	cwtl
    14c2:	eb 50                	jmp    1514 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1514>
    14c4:	71 a8                	jno    146e <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x146e>
    14c6:	14 2b                	adc    $0x2b,%al
    14c8:	dd a4 33 59 04 74 02 	frstor 0x2740459(%rbx,%rsi,1)
    14cf:	21 d6                	and    %edx,%esi
    14d1:	01 11                	add    %edx,(%rcx)
    14d3:	12 bf ca 6a 86 e3    	adc    -0x1c799536(%rdi),%bh
    14d9:	92                   	xchg   %eax,%edx
    14da:	57                   	push   %rdi
    14db:	b7 e9                	mov    $0xe9,%bh
    14dd:	2e 80 60 18 f7       	cs andb $0xf7,0x18(%rax)
    14e2:	15 d6 a1 23 c8       	adc    $0xc823a1d6,%eax
    14e7:	e5 56                	in     $0x56,%eax
    14e9:	bb 35 fb d5 e9       	mov    $0xe9d5fb35,%ebx
    14ee:	ee                   	out    %al,(%dx)
    14ef:	cc                   	int3
    14f0:	ab                   	stos   %eax,%es:(%rdi)
    14f1:	e7 d1                	out    %eax,$0xd1
    14f3:	00 7d fd             	add    %bh,-0x3(%rbp)
    14f6:	d6                   	(bad)
    14f7:	e4 22                	in     $0x22,%al
    14f9:	a0 c4 1a 3c 40 e2 24 	movabs 0x87d124e2403c1ac4,%al
    1500:	d1 87 
    1502:	0f 6e a6 e2 e7 9b 15 	movd   0x159be7e2(%rsi),%mm4
    1509:	ac                   	lods   %ds:(%rsi),%al
    150a:	da 3c 48             	fidivrl (%rax,%rcx,2)
    150d:	7a 0f                	jp     151e <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x151e>
    150f:	18 a6 7a cc 3d a9    	sbb    %ah,-0x56c23386(%rsi)
    1515:	38 52 13             	cmp    %dl,0x13(%rdx)
    1518:	94                   	xchg   %eax,%esp
    1519:	cb                   	lret
    151a:	55                   	push   %rbp
    151b:	8a d4                	mov    %ah,%dl
    151d:	23 ed                	and    %ebp,%ebp
    151f:	cc                   	int3
    1520:	c2 e9 73             	ret    $0x73e9
    1523:	0f c8                	bswap  %eax
    1525:	d1 86 82 c8 12 d8    	roll   $1,-0x27ed377e(%rsi)
    152b:	6d                   	insl   (%dx),%es:(%rdi)
    152c:	6e                   	outsb  %ds:(%rsi),(%dx)
    152d:	3e 81 f2 65 ee 07 10 	ds xor $0x1007ee65,%edx
    1534:	12 7a b2             	adc    -0x4e(%rdx),%bh
    1537:	f0 bb c6 f2 0e e1    	lock mov $0xe10ef2c6,%ebx
    153d:	1a 1e                	sbb    (%rsi),%bl
    153f:	b2 b0                	mov    $0xb0,%dl
    1541:	1c e4                	sbb    $0xe4,%al
    1543:	d9 d2                	(bad)
    1545:	b8 2a 4a 52 c5       	mov    $0xc5524a2a,%eax
    154a:	e0 46                	loopne 1592 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1592>
    154c:	72 82                	jb     14d0 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x14d0>
    154e:	bd 43 25 55 31       	mov    $0x31552543,%ebp
    1553:	87 e4                	xchg   %esp,%esp
    1555:	a9 4a 10 85 b6       	test   $0xb685104a,%eax
    155a:	c9                   	leave
    155b:	ff 05 c4 94 35 6b    	incl   0x6b3594c4(%rip)        # 6b35aa25 <utils.cpp.0ab61856+0x6b35aa25>
    1561:	87 cd                	xchg   %ecx,%ebp
    1563:	fd                   	std
    1564:	a0 b4 25 74 d0 e6 27 	movabs 0x64b27e6d07425b4,%al
    156b:	4b 06 
    156d:	bc b0 23 a5 60       	mov    $0x60a523b0,%esp
    1572:	8f                   	(bad)
    1573:	cb                   	lret
    1574:	59                   	pop    %rcx
    1575:	d4                   	(bad)
    1576:	0e                   	(bad)
    1577:	24 f5                	and    $0xf5,%al
    1579:	74 64                	je     15df <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x15df>
    157b:	83 90 53 98 da 12 8d 	adcl   $0xffffff8d,0x12da9853(%rax)
    1582:	38 cc                	cmp    %cl,%ah
    1584:	34 89                	xor    $0x89,%al
    1586:	4c c1 f2 53          	rex.WR shl $0x53,%rdx
    158a:	bc 57 2d cb 1c       	mov    $0x1ccb2d57,%esp
    158f:	46 ca 22 0e          	rex.RX lret $0xe22
    1593:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1594:	7c 66                	jl     15fc <utils.cpp.0ab61856+0x15fc>
    1596:	30 b8 71 ef 7b 76    	xor    %bh,0x767bef71(%rax)
    159c:	68 24 8b 18 c4       	push   $0xffffffffc4188b24
    15a1:	2f                   	(bad)
    15a2:	f7 44 09 14 08 72 73 	testl  $0x9c737208,0x14(%rcx,%rcx,1)
    15a9:	9c 
    15aa:	19 52 86             	sbb    %edx,-0x7a(%rdx)
    15ad:	21 6a 95             	and    %ebp,-0x6b(%rdx)
    15b0:	ac                   	lods   %ds:(%rsi),%al
    15b1:	30 d2                	xor    %dl,%dl
    15b3:	14 7a                	adc    $0x7a,%al
    15b5:	7d 08                	jge    15bf <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x15bf>
    15b7:	58                   	pop    %rax
    15b8:	73 ab                	jae    1565 <.gnu.lto__ZN10QuantumNEC3Lib8vsprintfEPcPKcP13__va_list_tag.15.7c70a44ae594ff4d+0x1565>
    15ba:	0d 99 ad 3d bc       	or     $0xbc3dad99,%eax
    15bf:	40 59                	rex pop %rcx
    15c1:	aa                   	stos   %al,%es:(%rdi)
    15c2:	99                   	cltd
    15c3:	e8 6c ec 6a 76       	call   766b0234 <utils.cpp.0ab61856+0x766b0234>
    15c8:	de 65 71             	fisubs 0x71(%rbp)
    15cb:	c8 79 00 f0          	enter  $0x79,$0xf0
    15cf:	32 9e 7d 65 7b 1f    	xor    0x1f7b657d(%rsi),%bl
    15d5:	ea                   	(bad)
    15d6:	cd 21                	int    $0x21
    15d8:	b9 a1 c1 5c c4       	mov    $0xc45cc1a1,%ecx
    15dd:	c8 0c 6b 4e          	enter  $0x6b0c,$0x4e
    15e1:	20 21                	and    %ah,(%rcx)
    15e3:	89 3b                	mov    %edi,(%rbx)
    15e5:	81 1b 96 83 a4 51    	sbbl   $0x51a48396,(%rbx)
    15eb:	2c 32                	sub    $0x32,%al
    15ed:	92                   	xchg   %eax,%edx
    15ee:	d7                   	xlat   %ds:(%rbx)
    15ef:	99                   	cltd
    15f0:	e1 08                	loope  15fa <utils.cpp.0ab61856+0x15fa>

Disassembly of section .gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 60 9f    	sub    %dh,-0x609f02d1(%rbp)
   6:	02 ad 14 00 c6 25    	add    0x25c60014(%rbp),%ch
   c:	88 4a b0             	mov    %cl,-0x50(%rdx)
   f:	d4                   	(bad)
  10:	51                   	push   %rcx
  11:	3a 9c 11 f5 df ad 1f 	cmp    0x1faddff5(%rcx,%rdx,1),%bl
  18:	5c                   	pop    %rsp
  19:	1e                   	(bad)
  1a:	3e 1d 80 22 b8 83    	ds sbb $0x83b82280,%eax
  20:	8e a8 ef 3b 08 3c    	mov    0x3c083bef(%rax),%gs
  26:	c4                   	(bad)
  27:	f5                   	cmc
  28:	74 cf                	je     fffffffffffffff9 <utils.cpp.0ab61856+0xfffffffffffffff9>
  2a:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  2b:	be bb a0 c2 5d       	mov    $0x5dc2a0bb,%esi
  30:	05 fb 76 7d ee       	add    $0xee7d76fb,%eax
  35:	b3 b9                	mov    $0xb9,%bl
  37:	27                   	(bad)
  38:	14 57                	adc    $0x57,%al
  3a:	fa                   	cli
  3b:	c0 4f fd 41          	rorb   $0x41,-0x3(%rdi)
  3f:	8f 46 f5             	pop    -0xb(%rsi)
  42:	8a 89 af e3 77 f4    	mov    -0xb881c51(%rcx),%cl
  48:	50                   	push   %rax
  49:	a2 c0 e4 ad bd 24 9e 	movabs %al,0xe3b39e24bdade4c0
  50:	b3 e3 
  52:	13 b2 37 91 52 a6    	adc    -0x59ad6ec9(%rdx),%esi
  58:	6f                   	outsl  %ds:(%rsi),(%dx)
  59:	00 6f 00             	add    %ch,0x0(%rdi)
  5c:	71 00                	jno    5e <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x5e>
  5e:	75 65                	jne    c5 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0xc5>
  60:	e7 29                	out    %eax,$0x29
  62:	90                   	nop
  63:	3b 0b                	cmp    (%rbx),%ecx
  65:	88 cb                	mov    %cl,%bl
  67:	a2 94 45 0c f3 96 3b 	movabs %al,0x529b3b96f30c4594
  6e:	9b 52 
  70:	2b d3                	sub    %ebx,%edx
  72:	07                   	(bad)
  73:	1b b5 96 ad 3f 20    	sbb    0x203fad96(%rbp),%esi
  79:	77 ee                	ja     69 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x69>
  7b:	8b 45 b2             	mov    -0x4e(%rbp),%eax
  7e:	fd                   	std
  7f:	46 a0 04 0e 71 f0 a8 	rex.RX movabs 0x910648a8f0710e04,%al
  86:	48 06 91 
  89:	5a                   	pop    %rdx
  8a:	4b 96                	rex.WXB xchg %rax,%r14
  8c:	97                   	xchg   %eax,%edi
  8d:	7b 42                	jnp    d1 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0xd1>
  8f:	77 92                	ja     23 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x23>
  91:	cb                   	lret
  92:	a2 3b 9b c4 45 be 2d 	movabs %al,0x629d2dbe45c49b3b
  99:	9d 62 
  9b:	f3 ed                	repz in (%dx),%eax
  9d:	ab                   	stos   %eax,%es:(%rdi)
  9e:	e3 e1                	jrcxz  81 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x81>
  a0:	96                   	xchg   %eax,%esi
  a1:	12 41 fd             	adc    -0x3(%rcx),%al
  a4:	74 3c                	je     e2 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0xe2>
  a6:	0f 3b                	(bad)
  a8:	05 f0 7c 78 c7       	add    $0xc7787cf0,%eax
  ad:	e3 61                	jrcxz  110 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x110>
  af:	71 45                	jno    f6 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0xf6>
  b1:	6f                   	outsl  %ds:(%rsi),(%dx)
  b2:	7b 97                	jnp    4b <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x4b>
  b4:	96                   	xchg   %eax,%esi
  b5:	74 7a                	je     131 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x131>
  b7:	8a d2                	mov    %dl,%dl
  b9:	f1                   	int1
  ba:	7a cb                	jp     87 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x87>
  bc:	e2 6d                	loop   12b <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x12b>
  be:	38 1c 9e             	cmp    %bl,(%rsi,%rbx,4)
  c1:	75 bc                	jne    7f <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x7f>
  c3:	a1 fd f8 ff 19 fe 5f 	movabs 0xd9f85ffe19fff8fd,%eax
  ca:	f8 d9 
  cc:	28 5f 94             	sub    %bl,-0x6c(%rdi)
  cf:	e1 fb                	loope  cc <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0xcc>
  d1:	f7 9b 9c bf 12 f9    	negl   -0x6ed4064(%rbx)
  d7:	25 5b ee 06 50       	and    $0x5006ee5b,%eax
  dc:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
  dd:	28 9f 9c fc 71 f2    	sub    %bl,-0xd8e0364(%rdi)
  e3:	e9 c8 9f 94 2f       	jmp    2f94a0b0 <utils.cpp.0ab61856+0x2f94a0b0>
  e8:	52                   	push   %rdx
  e9:	7e 53                	jle    13e <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x13e>
  eb:	3e 4f fe             	ds rex.WRXB (bad)
  ee:	b2 48                	mov    $0x48,%dl
  f0:	8e 7a d0             	mov    -0x30(%rdx),%?
  f3:	c0 61 00 45          	shlb   $0x45,0x0(%rcx)
  f7:	ad                   	lods   %ds:(%rsi),%eax
  f8:	22 86 44 6a d3 bc    	and    -0x432c95bc(%rsi),%al
  fe:	91                   	xchg   %eax,%ecx
  ff:	62 95 f6 5c 81       	(bad)
 104:	88 54 86 7a          	mov    %dl,0x7a(%rsi,%rax,4)
 108:	41 39 84 d5 a7 5c 79 	cmp    %eax,0x2795ca7(%r13,%rdx,8)
 10f:	02 
 110:	17                   	(bad)
 111:	db c6                	fcmovnb %st(6),%st
 113:	c8 59 d5 26          	enter  $0xd559,$0x26
 117:	95                   	xchg   %eax,%ebp
 118:	0e                   	(bad)
 119:	be 20 92 b0 e2       	mov    $0xe2b09220,%esi
 11e:	ca 95 bf             	lret   $0xbf95
 121:	c8 9d fd ef          	enter  $0xfd9d,$0xef
 125:	7f db                	jg     102 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x102>
 127:	77 e9                	ja     112 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x112>
 129:	2a 8a 14 03 63 93    	sub    -0x6c9cfcec(%rdx),%cl
 12f:	6c                   	insb   (%dx),%es:(%rdi)
 130:	ab                   	stos   %eax,%es:(%rdi)
 131:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 132:	b3 ca                	mov    $0xca,%bl
 134:	11 0d e8 05 5d 08    	adc    %ecx,0x85d05e8(%rip)        # 85d0722 <utils.cpp.0ab61856+0x85d0722>
 13a:	6b 0d fd 63 90 f1 ee 	imul   $0xffffffee,-0xe6f9c03(%rip),%ecx        # fffffffff190653e <utils.cpp.0ab61856+0xfffffffff190653e>
 141:	4a 5a                	rex.WX pop %rdx
 143:	04 f6                	add    $0xf6,%al
 145:	74 8e                	je     d5 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0xd5>
 147:	ec                   	in     (%dx),%al
 148:	75 7a                	jne    1c4 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x1c4>
 14a:	8a da                	mov    %dl,%bl
 14c:	f9                   	stc
 14d:	72 a2                	jb     f1 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0xf1>
 14f:	84 b1 4d ba a1 68    	test   %dh,0x68a1ba4d(%rcx)
 155:	6f                   	outsl  %ds:(%rsi),(%dx)
 156:	8f                   	(bad)
 157:	3d fa fc a8 98       	cmp    $0x98a8fcfa,%eax
 15c:	4d 7b 75             	rex.WRB jnp 1d4 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x1d4>
 15f:	42 35 36 d8 cc e8    	rex.X xor $0xe8ccd836,%eax
 165:	ce                   	(bad)
 166:	d9 e3                	(bad)
 168:	88 9d 4f 6c 06 c0    	mov    %bl,-0x3ff993b1(%rbp)
 16e:	6d                   	insl   (%dx),%es:(%rdi)
 16f:	d9 6e b1             	fldcw  -0x4f(%rsi)
 172:	f7 a7 05 4f d7 73    	mull   0x73d74f05(%rdi)
 178:	77 a7                	ja     121 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x121>
 17a:	74 e8                	je     164 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x164>
 17c:	84 7c 67 54          	test   %bh,0x54(%rdi,%riz,2)
 180:	98                   	cwtl
 181:	91                   	xchg   %eax,%ecx
 182:	b5 d6                	mov    $0xd6,%ch
 184:	3d f1 dd a1 3b       	cmp    $0x3ba1ddf1,%eax
 189:	b9 47 a8 9d 8f       	mov    $0x8f9da847,%ecx
 18e:	64 cf                	fs iret
 190:	83 a6 7a 7b 4d 40 71 	andl   $0x71,0x404d7b7a(%rsi)
 197:	f8                   	clc
 198:	29 e2                	sub    %esp,%edx
 19a:	e9 06 ea 50 55       	jmp    5550eba5 <utils.cpp.0ab61856+0x5550eba5>
 19f:	93                   	xchg   %eax,%ebx
 1a0:	fc                   	cld
 1a1:	42 18 0d c9 75 7d 89 	rex.X sbb %cl,-0x76828a37(%rip)        # ffffffff897d7771 <utils.cpp.0ab61856+0xffffffff897d7771>
 1a8:	5b                   	pop    %rbx
 1a9:	94                   	xchg   %eax,%esp
 1aa:	21 37                	and    %esi,(%rdi)
 1ac:	30 2d 0a 5a 34 2f    	xor    %ch,0x2f345a0a(%rip)        # 2f345bbc <utils.cpp.0ab61856+0x2f345bbc>
 1b2:	0d 34 18 4e 2a       	or     $0x2a4e1834,%eax
 1b7:	b6 7f                	mov    $0x7f,%dh
 1b9:	71 59                	jno    214 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x214>
 1bb:	d0 f2                	shl    $1,%dl
 1bd:	22 f3                	and    %bl,%dh
 1bf:	62 69 b1 70 68       	(bad)
 1c4:	b3 fe                	mov    $0xfe,%bl
 1c6:	cd cd                	int    $0xcd
 1c8:	4c 6b 46 13 a3       	imul   $0xffffffffffffffa3,0x13(%rsi),%r8
 1cd:	d5 5c 32 31          	{rex2 0x5c} xor (%r17),%r30b
 1d1:	1a 17                	sbb    (%rdi),%dl
 1d3:	6c                   	insb   (%dx),%es:(%rdi)
 1d4:	06                   	(bad)
 1d5:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 1d6:	66 33 3b             	xor    (%rbx),%di
 1d9:	39 ac 26 26 8b 41 40 	cmp    %ebp,0x40418b26(%rsi,%riz,1)
 1e0:	d0 c0                	rol    $1,%al
 1e2:	41 04 59             	rex.B add $0x59,%al
 1e5:	8d 56 f3             	lea    -0xd(%rsi),%edx
 1e8:	aa                   	stos   %al,%es:(%rdi)
 1e9:	4d 70 c1             	rex.WRB jo 1ad <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x1ad>
 1ec:	64 36 16             	fs ss (bad)
 1ef:	5c                   	pop    %rsp
 1f0:	ad                   	lods   %ds:(%rsi),%eax
 1f1:	ff 65 dd             	jmp    *-0x23(%rbp)
 1f4:	fe                   	(bad)
 1f5:	ad                   	lods   %ds:(%rsi),%eax
 1f6:	7a 97                	jp     18f <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x18f>
 1f8:	36 05 08 a2 44 53    	ss add $0x5344a208,%eax
 1fe:	ae                   	scas   %es:(%rdi),%al
 1ff:	7b 2e                	jnp    22f <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x22f>
 201:	5c                   	pop    %rsp
 202:	98                   	cwtl
 203:	5c                   	pop    %rsp
 204:	70 c7                	jo     1cd <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x1cd>
 206:	81 c3 e0 f8 08 4d    	add    $0x4d08f8e0,%ebx
 20c:	f5                   	cmc
 20d:	aa                   	stos   %al,%es:(%rdi)
 20e:	85 72 b3             	test   %esi,-0x4d(%rdx)
 211:	81 df 22 40 82 da    	sbb    $0xda824022,%edi
 217:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 218:	99                   	cltd
 219:	e9 87 0f 56 75       	jmp    755611a5 <utils.cpp.0ab61856+0x755611a5>
 21e:	aa                   	stos   %al,%es:(%rdi)
 21f:	81 9e 43 4b 1a 40 52 	sbbl   $0x361e9052,0x401a4b43(%rsi)
 226:	90 1e 36 
 229:	72 15                	jb     240 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x240>
 22b:	93                   	xchg   %eax,%ebx
 22c:	01 2f                	add    %ebp,(%rdi)
 22e:	20 40 02             	and    %al,0x2(%rax)
 231:	63 a0 b3 3a 93 28    	movsxd 0x28933ab3(%rax),%esp
 237:	1e                   	(bad)
 238:	4b 35 ef 1d c8 ec    	rex.WXB xor $0xffffffffecc81def,%rax
 23e:	29 0b                	sub    %ecx,(%rbx)
 240:	15 b2 0d 8a ac       	adc    $0xac8a0db2,%eax
 245:	f5                   	cmc
 246:	bb 3f 1e 79 94       	mov    $0x94791e3f,%ebx
 24b:	5a                   	pop    %rdx
 24c:	4c 62 dd fa bf 75    	rex.WR (bad) {%k7}{z}
 252:	9f                   	lahf
 253:	e7 0e                	out    %eax,$0xe
 255:	7d 36                	jge    28d <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x28d>
 257:	36 8b b0 60 0c fb 32 	ss mov 0x32fb0c60(%rax),%esi
 25e:	6b 3c 06 33          	imul   $0x33,(%rsi,%rax,1),%edi
 262:	21 34 f0             	and    %esi,(%rax,%rsi,8)
 265:	eb a1                	jmp    208 <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x208>
 267:	b3 b1                	mov    $0xb1,%bl
 269:	2c de                	sub    $0xde,%al
 26b:	be 09 37 16 20       	mov    $0x20163709,%esi
 270:	6f                   	outsl  %ds:(%rsi),(%dx)
 271:	97                   	xchg   %eax,%edi
 272:	c9                   	leave
 273:	06                   	(bad)
 274:	dc 6d f2             	fsubrl -0xe(%rbp)
 277:	a2 76 15 ee 3d 9d 05 	movabs %al,0x1e55059d3dee1576
 27e:	55 1e 
 280:	15 3b 99 fe 59       	adc    $0x59fe993b,%eax
 285:	b0 92                	mov    $0x92,%al
 287:	cb                   	lret
 288:	44 ab                	rex.R stos %eax,%es:(%rdi)
 28a:	bf 19 08 cb 92       	mov    $0x92cb0819,%edi
 28f:	f0 fe                	lock (bad)
 291:	7e e8                	jle    27b <.gnu.lto__ZN10QuantumNEC3Lib9skip_atoiEPPKc.16.7c70a44ae594ff4d+0x27b>
 293:	c4                   	(bad)
 294:	f0 f2 1d 3d 29 20 44 	lock repnz sbb $0x4420293d,%eax
 29b:	4c 57                	rex.WR push %rdi
 29d:	78 02                	js     2a1 <utils.cpp.0ab61856+0x2a1>

Disassembly of section .gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 60 66    	sub    %dh,0x6660fd2f(%rbp)
   6:	18 75 6c             	sbb    %dh,0x6c(%rbp)
   9:	00 0a                	add    %cl,(%rdx)
   b:	b2 e0                	mov    $0xe0,%dl
   d:	27                   	(bad)
   e:	4e 20 94 ca 49 07 83 	rex.WRX and %r10b,-0x477cf8b7(%rdx,%r9,8)
  15:	b8 
  16:	80 08 a7             	orb    $0xa7,(%rax)
  19:	76 3c                	jbe    57 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x57>
  1b:	8b a4 93 74 11 25 1a 	mov    0x1a251174(%rbx,%rdx,4),%esp
  22:	f2 80 00 5f          	repnz addb $0x5f,(%rax)
  26:	17                   	(bad)
  27:	1d c2 4f 7c bc       	sbb    $0xbc7c4fc2,%eax
  2c:	dc 7d c5             	fdivrl -0x3b(%rbp)
  2f:	99                   	cltd
  30:	15 bf 6e 99 fd       	adc    $0xfd996ebf,%eax
  35:	ed                   	in     (%dx),%eax
  36:	20 be 37 52 7f b0    	and    %bh,-0x4f80adc9(%rsi)
  3c:	d6                   	(bad)
  3d:	73 7d                	jae    bc <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xbc>
  3f:	ae                   	scas   %es:(%rdi),%al
  40:	da 04 fd 8e d7 1c e6 	fiaddl -0x19e32872(,%rdi,8)
  47:	38 d4                	cmp    %dl,%ah
  49:	ca 83 55             	lret   $0x5583
  4c:	ff 43 ad             	incl   -0x53(%rbx)
  4f:	16                   	(bad)
  50:	f3 e2 c7             	repz loop 1a <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x1a>
  53:	f2 5e                	repnz pop %rsi
  55:	3a da                	cmp    %dl,%bl
  57:	da 36                	fidivl (%rsi)
  59:	92                   	xchg   %eax,%edx
  5a:	b6 94                	mov    $0x94,%dh
  5c:	01 90 02 42 02 5a    	add    %edx,0x5a024202(%rax)
  62:	02 48 b8             	add    -0x48(%rax),%cl
  65:	18 19                	sbb    %bl,(%rcx)
  67:	13 38                	adc    (%rax),%edi
  69:	b6 c5                	mov    $0xc5,%dh
  6b:	50                   	push   %rax
  6c:	f0 06                	lock (bad)
  6e:	22 c6                	and    %dh,%al
  70:	8a d8                	mov    %al,%bl
  72:	8a 8c 44 b7 a8 c1 b3 	mov    -0x4c3e5749(%rsp,%rax,2),%cl
  79:	01 70 6c             	add    %esi,0x6c(%rax)
  7c:	6e                   	outsb  %ds:(%rsi),(%dx)
  7d:	9a                   	(bad)
  7e:	27                   	(bad)
  7f:	45 08 fe             	or     %r15b,%r14b
  82:	02 43 c9             	add    -0x37(%rbx),%al
  85:	d6                   	(bad)
  86:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  87:	ca 12 2d             	lret   $0x2d12
  8a:	2c 00                	sub    $0x0,%al
  8c:	e1 83                	loope  11 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x11>
  8e:	09 db                	or     %ebx,%ebx
  90:	1e                   	(bad)
  91:	14 b7                	adc    $0xb7,%al
  93:	9d                   	popf
  94:	0f ce                	bswap  %esi
  96:	23 43 62             	and    0x62(%rbx),%eax
  99:	68 c2 43 d9 0e       	push   $0xed943c2
  9e:	ab                   	stos   %eax,%es:(%rdi)
  9f:	03 d3                	add    %ebx,%edx
  a1:	90                   	nop
  a2:	12 b2 50 05 59 36    	adc    0x36590550(%rdx),%dh
  a8:	16                   	(bad)
  a9:	8a 3b                	mov    (%rbx),%bh
  ab:	09 d3                	or     %edx,%ebx
  ad:	14 c9                	adc    $0xc9,%al
  af:	10 25 82 ec db 1e    	adc    %ah,0x1edbec82(%rip)        # 1edbed37 <utils.cpp.0ab61856+0x1edbed37>
  b5:	d4                   	(bad)
  b6:	0e                   	(bad)
  b7:	73 13                	jae    cc <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xcc>
  b9:	0f b9 b8 73 e0 36 c3 	ud1    -0x3cc91f8d(%rax),%edi
  c0:	c9                   	leave
  c1:	22 5b 86             	and    -0x7a(%rbx),%bl
  c4:	bf ec 3c 9b f0       	mov    $0xf09b3cec,%edi
  c9:	a8 30                	test   $0x30,%al
  cb:	9d                   	popf
  cc:	0a 12                	or     (%rdx),%dl
  ce:	39 92 19 c3 9c 6c    	cmp    %edx,0x6c9cc319(%rdx)
  d4:	31 cc                	xor    %ecx,%esp
  d6:	c9                   	leave
  d7:	26 36 b3 1a          	es ss mov $0x1a,%bl
  db:	77 96                	ja     73 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x73>
  dd:	be a1 bd f4 97       	mov    $0x97f4bda1,%esi
  e2:	0e                   	(bad)
  e3:	c3                   	ret
  e4:	49 a2 15 30 5a e2 bc 	rex.WB movabs %al,0xa95970bce25a3015
  eb:	70 59 a9 
  ee:	35 0e 4e 18 45       	xor    $0x45184e0e,%eax
  f3:	96                   	xchg   %eax,%esi
  f4:	8d 22                	lea    (%rdx),%esp
  f6:	28 44 07 ae          	sub    %al,-0x52(%rdi,%rax,1)
  fa:	2d cd 45 ad bb       	sub    $0xbbad45cd,%eax
  ff:	a0 ed b0 3a b4 09 71 	movabs 0x82847109b43ab0ed,%al
 106:	84 82 
 108:	2c 2b                	sub    $0x2b,%al
 10a:	d7                   	xlat   %ds:(%rbx)
 10b:	6f                   	outsl  %ds:(%rsi),(%dx)
 10c:	c7                   	(bad)
 10d:	26 5e                	es pop %rsi
 10f:	8e ea                	mov    %edx,%gs
 111:	0c 17                	or     $0x17,%al
 113:	b3 16                	mov    $0x16,%bl
 115:	1f                   	(bad)
 116:	97                   	xchg   %eax,%edi
 117:	95                   	xchg   %eax,%ebp
 118:	36 51                	ss push %rcx
 11a:	0e                   	(bad)
 11b:	89 6b 03             	mov    %ebp,0x3(%rbx)
 11e:	64 90                	fs nop
 120:	8b b9 9a 56 e4 86    	mov    -0x791ba966(%rcx),%edi
 126:	04 1e                	add    $0x1e,%al
 128:	cb                   	lret
 129:	b2 50                	mov    $0x50,%dl
 12b:	4d                   	rex.WRB
 12c:	64 0f 88 7b 57 d4 f8 	fs js  fffffffff8d458ae <utils.cpp.0ab61856+0xfffffffff8d458ae>
 133:	70 e1                	jo     116 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x116>
 135:	2f                   	(bad)
 136:	6d                   	insl   (%dx),%es:(%rdi)
 137:	2d 62 83 54 d3       	sub    $0xd3548362,%eax
 13c:	e0 85                	loopne c3 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xc3>
 13e:	39 e9                	cmp    %ebp,%ecx
 140:	4b bb 4d 78 8c 54 05 	rex.WXB movabs $0xe1307905548c784d,%r11
 147:	79 30 e1 
 14a:	3a 0d 5d 45 ad 6b    	cmp    0x6bad455d(%rip),%cl        # 6bad46ad <utils.cpp.0ab61856+0x6bad46ad>
 150:	48 63 25 cb d2 80 84 	movslq -0x7b7f2d35(%rip),%rsp        # ffffffff8480d422 <utils.cpp.0ab61856+0xffffffff8480d422>
 157:	16                   	(bad)
 158:	af                   	scas   %es:(%rdi),%eax
 159:	63 13                	movsxd (%rbx),%edx
 15b:	8b 56 62             	mov    0x62(%rsi),%edx
 15e:	11 ae 4b e5 07 4e    	adc    %ebp,0x4e07e54b(%rsi)
 164:	13 a5 91 6a 19 41    	adc    0x41196a91(%rbp),%esp
 16a:	96                   	xchg   %eax,%esi
 16b:	65 97                	gs xchg %eax,%edi
 16d:	9c                   	pushf
 16e:	e3 d8                	jrcxz  148 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x148>
 170:	44 62 94 8b 6f ef    	(bad)
 176:	ad                   	lods   %ds:(%rsi),%eax
 177:	e1 34                	loope  1ad <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x1ad>
 179:	51                   	push   %rcx
 17a:	1e                   	(bad)
 17b:	89 23                	mov    %esp,(%rbx)
 17d:	23 c8                	and    %eax,%ecx
 17f:	b2 7b                	mov    $0x7b,%dl
 181:	4b                   	rex.WXB
 182:	46 e0 d8             	rex.RX loopne 15d <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x15d>
 185:	c4                   	(bad)
 186:	96                   	xchg   %eax,%esi
 187:	d2 53 d4             	rclb   %cl,-0x2c(%rbx)
 18a:	78 0d                	js     199 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x199>
 18c:	68 af 9d de aa       	push   $0xffffffffaade9daf
 191:	98                   	cwtl
 192:	16                   	(bad)
 193:	ac                   	lods   %ds:(%rsi),%al
 194:	10 b2 ec 9e 14 ef    	adc    %dh,-0x10eb6114(%rdx)
 19a:	f5                   	cmc
 19b:	4f b1 89             	rex.WRXB mov $0x89,%r9b
 19e:	c7                   	(bad)
 19f:	ee                   	out    %al,(%dx)
 1a0:	29 36                	sub    %esi,(%rsi)
 1a2:	f1                   	int1
 1a3:	4e 38 8b ad 98 8a 99 	rex.WRX cmp %r9b,-0x66756753(%rbx)
 1aa:	8c c4                	mov    %es,%esp
 1ac:	43 c6                	rex.XB (bad)
 1ae:	b5 6e                	mov    $0x6e,%ch
 1b0:	b1 a5                	mov    $0xa5,%cl
 1b2:	95                   	xchg   %eax,%ebp
 1b3:	85 75 65             	test   %esi,0x65(%rbp)
 1b6:	55                   	push   %rbp
 1b7:	c5 82 6a             	(bad)
 1ba:	4a 8a b9 8c 82 7a 72 	rex.WX mov 0x727a828c(%rcx),%dil
 1c1:	6a 62                	push   $0x62
 1c3:	5a                   	pop    %rdx
 1c4:	52                   	push   %rdx
 1c5:	4a                   	rex.WX
 1c6:	42 5a                	rex.X pop %rdx
 1c8:	71 64                	jno    22e <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x22e>
 1ca:	54                   	push   %rsp
 1cb:	44 34 24             	rex.R xor $0x24,%al
 1ce:	14 a4                	adc    $0xa4,%al
 1d0:	22 05 0a a0 13 26    	and    0x2613a00a(%rip),%al        # 2613a1e0 <utils.cpp.0ab61856+0x2613a1e0>
 1d6:	7e 7c                	jle    254 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x254>
 1d8:	7a 94                	jp     16e <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x16e>
 1da:	3c 3b                	cmp    $0x3b,%al
 1dc:	3a 39                	cmp    (%rcx),%bh
 1de:	25 70 92 37 c8       	and    $0xc8379270,%eax
 1e3:	a3 b1 48 5c 7f d7 b8 	movabs %eax,0xbad9b8d77f5c48b1
 1ea:	d9 ba 
 1ec:	45 61                	rex.RB (bad)
 1ee:	6f                   	outsl  %ds:(%rsi),(%dx)
 1ef:	f9                   	stc
 1f0:	14 c1                	adc    $0xc1,%al
 1f2:	d3 62 63             	shll   %cl,0x63(%rdx)
 1f5:	c4                   	(bad)
 1f6:	cd 22                	int    $0x22
 1f8:	6c                   	insb   (%dx),%es:(%rdi)
 1f9:	2c ea                	sub    $0xea,%al
 1fb:	0a 74 53 c2          	or     -0x3e(%rbx,%rdx,2),%dh
 1ff:	be 0a 24 e2 5a       	mov    $0x5ae2240a,%esi
 204:	15 d1 55 3d 46       	adc    $0x463d55d1,%eax
 209:	56                   	push   %rsi
 20a:	a0 9b 16 d1 2c ce 0c 	movabs 0xa9710cce2cd1169b,%al
 211:	71 a9 
 213:	00 7b 0a             	add    %bh,0xa(%rbx)
 216:	67 8b 21             	mov    (%ecx),%esp
 219:	1a ba 29 60 4b 09    	sbb    0x94b6029(%rdx),%bh
 21f:	51                   	push   %rcx
 220:	e6 32                	out    %al,$0x32
 222:	cd f4                	int    $0xf4
 224:	52                   	push   %rdx
 225:	cd 0a                	int    $0xa
 227:	74 53                	je     27c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x27c>
 229:	33 1d 25 44 0e 17    	xor    0x170e4425(%rip),%ebx        # 170e4654 <utils.cpp.0ab61856+0x170e4654>
 22f:	ea                   	(bad)
 230:	69 cc 75 22 d3 4d    	imul   $0x4dd32275,%esp,%ecx
 236:	62 c2 5c 26 32       	(bad)
 23b:	60                   	(bad)
 23c:	ee                   	out    %al,(%dx)
 23d:	52                   	push   %rdx
 23e:	96                   	xchg   %eax,%esi
 23f:	56                   	push   %rsi
 240:	ca 52 bd             	lret   $0xbd52
 243:	49 58                	rex.WB pop %r8
 245:	c2 58 b9             	ret    $0xb958
 248:	48 57                	rex.W push %rdi
 24a:	7a 85                	jp     1d1 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x1d1>
 24c:	32 6f 05             	xor    0x5(%rdi),%ch
 24f:	ba e9 95 3e c2       	mov    $0xc23e95e9,%edx
 254:	f2 77 8d             	bnd ja 1e4 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x1e4>
 257:	fc                   	cld
 258:	ba c8 af ef 12       	mov    $0x12efafc8,%edx
 25d:	cd 30                	int    $0x30
 25f:	46 ca 1d 3a          	rex.RX lret $0x3a1d
 263:	61                   	(bad)
 264:	3a a5 85 c6 74 c7    	cmp    -0x388b397b(%rbp),%ah
 26a:	6d                   	insl   (%dx),%es:(%rdi)
 26b:	91                   	xchg   %eax,%ecx
 26c:	43                   	rex.XB
 26d:	43 37                	rex.XB (bad)
 26f:	9d                   	popf
 270:	d2 41 33             	rolb   %cl,0x33(%rcx)
 273:	b4 8a                	mov    $0x8a,%ah
 275:	28 62 64             	sub    %ah,0x64(%rdx)
 278:	b8 29 50 e8 5d       	mov    $0x5de85029,%eax
 27d:	20 28                	and    %ch,(%rax)
 27f:	7d 22                	jge    2a3 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x2a3>
 281:	06                   	(bad)
 282:	15 ae 09 28 77       	adc    $0x772809ae,%eax
 287:	f7 e7                	mul    %edi
 289:	49 fb                	rex.WB sti
 28b:	3c 49                	cmp    $0x49,%al
 28d:	e1 f6                	loope  285 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x285>
 28f:	28 79 9c             	sub    %bh,-0x64(%rcx)
 292:	f4                   	hlt
 293:	8e 5d 7b             	mov    0x7b(%rbp),%ds
 296:	75 7c                	jne    314 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x314>
 298:	b2 e4                	mov    $0xe4,%dl
 29a:	a1 a1 9b a2 d0 39 4c 	movabs 0x6ee64c39d0a29ba1,%eax
 2a1:	e6 6e 
 2a3:	09 26                	or     %esp,(%rsi)
 2a5:	46 79 72             	rex.RX jns 31a <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x31a>
 2a8:	23 5c 1c a3          	and    -0x5d(%rsp,%rbx,1),%ebx
 2ac:	24 dd                	and    $0xdd,%al
 2ae:	74 49                	je     2f9 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x2f9>
 2b0:	df 88 40 bd 48 13    	fisttps 0x1348bd40(%rax)
 2b6:	43 94                	rex.XB xchg %eax,%r12d
 2b8:	a0 a1 9b b6 e9 23 0f 	movabs 0x21720f23e9b69ba1,%al
 2bf:	72 21 
 2c1:	18 a3 79 72 4a 6e    	sbb    %ah,0x6e4a7279(%rbx)
 2c7:	11 49 13             	adc    %ecx,0x13(%rcx)
 2ca:	a1 49 22 6f 77 bd 21 	movabs 0xa46221bd776f2249,%eax
 2d1:	62 a4 
 2d3:	9f                   	lahf
 2d4:	43 c4                	rex.XB (bad)
 2d6:	ad                   	lods   %ds:(%rsi),%eax
 2d7:	c3                   	ret
 2d8:	f4                   	hlt
 2d9:	fd                   	std
 2da:	80 48 db bd          	orb    $0xbd,-0x25(%rax)
 2de:	eb da                	jmp    2ba <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x2ba>
 2e0:	e1 e1                	loope  2c3 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x2c3>
 2e2:	21 5f 38             	and    %ebx,0x38(%rdi)
 2e5:	22 d3                	and    %bl,%dl
 2e7:	66 17                	data16 (bad)
 2e9:	cc                   	int3
 2ea:	bc ba 60 6e 09       	mov    $0x96e60ba,%esp
 2ef:	98                   	cwtl
 2f0:	7b aa                	jnp    29c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x29c>
 2f2:	04 5d                	add    $0x5d,%al
 2f4:	42 61                	rex.X (bad)
 2f6:	12 a8 9a a8 2e 2b    	adc    0x2b2ea89a(%rax),%ch
 2fc:	4e                   	rex.WRX
 2fd:	f0 1b 1b             	lock sbb (%rbx),%ebx
 300:	c0 10 0e             	rclb   $0xe,(%rax)
 303:	3e 73 7e             	jae,pt 384 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x384>
 306:	14 71                	adc    $0x71,%al
 308:	7c 55                	jl     35f <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x35f>
 30a:	13 e5                	adc    %ebp,%esp
 30c:	90                   	nop
 30d:	2f                   	(bad)
 30e:	07                   	(bad)
 30f:	b7 5b                	mov    $0x5b,%bh
 311:	58                   	pop    %rax
 312:	e2 2d                	loop   341 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x341>
 314:	cf                   	iret
 315:	48 da b8 8f df 11 53 	rex.W fidivrl 0x5311df8f(%rax)
 31c:	6e                   	outsb  %ds:(%rsi),(%dx)
 31d:	6e                   	outsb  %ds:(%rsi),(%dx)
 31e:	3c 80                	cmp    $0x80,%al
 320:	f5                   	cmc
 321:	66 7d 95             	data16 jge 2b9 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x2b9>
 324:	e0 46                	loopne 36c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x36c>
 326:	1b aa 84 01 3c 82    	sbb    -0x7dc3fe7c(%rdx),%ebp
 32c:	1f                   	(bad)
 32d:	97                   	xchg   %eax,%edi
 32e:	0c 41                	or     $0x41,%al
 330:	c5 29 ea b2 a2 8d df 	vpminsw -0x4120725e(%rdx),%xmm10,%xmm14
 337:	be 
 338:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 339:	54                   	push   %rsp
 33a:	97                   	xchg   %eax,%edi
 33b:	15 6f bc fb 06       	adc    $0x6fbbc6f,%eax
 340:	6f                   	outsl  %ds:(%rsi),(%dx)
 341:	fe                   	(bad)
 342:	f5                   	cmc
 343:	8f                   	(bad)
 344:	ef                   	out    %eax,(%dx)
 345:	0c 54                	or     $0x54,%al
 347:	67 fd                	addr32 std
 349:	ef                   	out    %eax,(%dx)
 34a:	16                   	(bad)
 34b:	d8 7c 89 52          	fdivrs 0x52(%rcx,%rcx,4)
 34f:	db 90 6f ff d8 97    	fistl  -0x68270091(%rax)
 355:	c0 dc 6b             	rcr    $0x6b,%ah
 358:	c5 8e 7b             	(bad)
 35b:	32 7a 85             	xor    -0x7b(%rdx),%bh
 35e:	70 f0                	jo     350 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x350>
 360:	79 7c                	jns    3de <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x3de>
 362:	5b                   	pop    %rbx
 363:	e3 6b                	jrcxz  3d0 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x3d0>
 365:	99                   	cltd
 366:	28 66 f8             	sub    %ah,-0x8(%rsi)
 369:	cc                   	int3
 36a:	b8 dd 42 63 98       	mov    $0x986342dd,%eax
 36f:	56                   	push   %rsi
 370:	de 90 a6 4a a4 71    	ficoms 0x71a44aa6(%rax)
 376:	5e                   	pop    %rsi
 377:	d7                   	xlat   %ds:(%rbx)
 378:	19 cf                	sbb    %ecx,%edi
 37a:	ba 14 aa 6b 9c       	mov    $0x9c6baa14,%edx
 37f:	2a ca                	sub    %dl,%cl
 381:	18 be 32 6e b7 b0    	sbb    %bh,-0x4f4891ce(%rsi)
 387:	08 84 c6 bb 65 53 47 	or     %al,0x475365bb(%rsi,%rax,8)
 38e:	7c cb                	jl     35b <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x35b>
 390:	77 87                	ja     319 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x319>
 392:	34 71                	xor    $0x71,%al
 394:	87 e0                	xchg   %esp,%eax
 396:	8d                   	lea    (bad),%eax
 397:	c6                   	(bad)
 398:	88 bb 2b e3 5b 97    	mov    %bh,-0x68a41cd5(%rbx)
 39e:	de 9d fb 4e 81 4d    	ficomps 0x4d814efb(%rbp)
 3a4:	92                   	xchg   %eax,%edx
 3a5:	28 b5 6d 7d cb 66    	sub    %dh,0x66cb7d6d(%rbp)
 3ab:	c7                   	(bad)
 3ac:	f2 26 61             	repnz es (bad)
 3af:	6a 22                	push   $0x22
 3b1:	04 6f                	add    $0x6f,%al
 3b3:	3c 36                	cmp    $0x36,%al
 3b5:	51                   	push   %rcx
 3b6:	38 25 7f cb 4f dd    	cmp    %ah,-0x22b03481(%rip)        # ffffffffdd4fcf3b <utils.cpp.0ab61856+0xffffffffdd4fcf3b>
 3bc:	ef                   	out    %eax,(%dx)
 3bd:	3f                   	(bad)
 3be:	be 33 6e b7 90       	mov    $0x90b76e33,%esi
 3c3:	79 af                	jns    374 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x374>
 3c5:	f9                   	stc
 3c6:	4b 71 c6             	rex.WXB jno 38f <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x38f>
 3c9:	fb                   	sti
 3ca:	9d                   	popf
 3cb:	c2 9a 35             	ret    $0x359a
 3ce:	51                   	push   %rcx
 3cf:	6a db                	push   $0xffffffffffffffdb
 3d1:	e0 0e                	loopne 3e1 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x3e1>
 3d3:	66 cb                	lretw
 3d5:	b2 d0                	mov    $0xd0,%dl
 3d7:	fe                   	(bad)
 3d8:	a0 79 84 36 1a a6 26 	movabs 0x38ca26a61a368479,%al
 3df:	ca 38 
 3e1:	07                   	(bad)
 3e2:	6b be c0 29 41 bb 6d 	imul   $0x6d,-0x44bed640(%rsi),%edi
 3e9:	04 53                	add    $0x53,%al
 3eb:	77 e9                	ja     3d6 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x3d6>
 3ed:	05 ec a6 7d 44       	add    $0x447da6ec,%eax
 3f2:	c7 78 56 cb ed       	xbegin ffffffffedcb5a6f <utils.cpp.0ab61856+0xffffffffedcb5a6f>,(bad)
 3f7:	2c 36                	sub    $0x36,%al
 3f9:	f0 0e                	lock (bad)
 3fb:	d3 4b 51             	rorl   %cl,0x51(%rbx)
 3fe:	94                   	xchg   %eax,%esp
 3ff:	0c 3e                	or     $0x3e,%al
 401:	cf                   	iret
 402:	f2 1e                	repnz (bad)
 404:	5b                   	pop    %rbx
 405:	13 1d de b7 dc 44    	adc    0x44dcb7de(%rip),%ebx        # 44dcbbe9 <utils.cpp.0ab61856+0x44dcbbe9>
 40b:	af                   	scas   %es:(%rdi),%eax
 40c:	63 8e 93 c2 75 10    	movsxd 0x1075c293(%rsi),%ecx
 412:	be dc 51 68 bf       	mov    $0xbf6851dc,%esi
 417:	b9 75 db f1 72       	mov    $0x72f1db75,%ecx
 41c:	3f                   	(bad)
 41d:	9b                   	fwait
 41e:	6d                   	insl   (%dx),%es:(%rdi)
 41f:	ed                   	in     (%dx),%eax
 420:	78 19                	js     43b <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x43b>
 422:	88 da                	mov    %bl,%dl
 424:	8f                   	(bad)
 425:	34 1f                	xor    $0x1f,%al
 427:	68 ce e3 65 b3       	push   $0xffffffffb365e3ce
 42c:	b2 de                	mov    $0xde,%dl
 42e:	eb 26                	jmp    456 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x456>
 430:	eb be                	jmp    3f0 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x3f0>
 432:	e6 31                	out    %al,$0x31
 434:	b1 fe                	mov    $0xfe,%cl
 436:	eb 0e                	jmp    446 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x446>
 438:	d3 a0 89 bc cc a3    	shll   %cl,-0x5c334377(%rax)
 43e:	cb                   	lret
 43f:	34 ef                	xor    $0xef,%al
 441:	c0 60 bd 0c          	shlb   $0xc,-0x43(%rax)
 445:	f6 e5                	mul    %ch
 447:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 448:	a3 ab fb ba 2f c8 51 	movabs %eax,0x6cbc51c82fbafbab
 44f:	bc 6c 
 451:	41 f1                	rex.B int1
 453:	72 05                	jb     45a <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x45a>
 455:	14 4c                	adc    $0x4c,%al
 457:	d0 54 ba 71          	rclb   $1,0x71(%rdx,%rdi,4)
 45b:	48 10 81 f1 f2 0d e3 	rex.W adc %al,-0x1cf20d0f(%rcx)
 462:	65 1b 5d 43          	sbb    %gs:0x43(%rbp),%ebx
 466:	77 0d                	ja     475 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x475>
 468:	1a 10                	sbb    (%rax),%dl
 46a:	f4                   	hlt
 46b:	95                   	xchg   %eax,%ebp
 46c:	ee                   	out    %al,(%dx)
 46d:	19 32                	sbb    %esi,(%rdx)
 46f:	62 34 50 bc 0c       	(bad)
 474:	c3                   	ret
 475:	78 39                	js     4b0 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x4b0>
 477:	00 be 0c c0 0b 17    	add    %bh,0x170bc00c(%rsi)
 47d:	5d                   	pop    %rbp
 47e:	6d                   	insl   (%dx),%es:(%rdi)
 47f:	6e                   	outsb  %ds:(%rsi),(%dx)
 480:	d1 5a 9a             	rcrl   $1,-0x66(%rdx)
 483:	b7 1a                	mov    $0x1a,%bh
 485:	87 66 ad             	xchg   %esp,-0x53(%rsi)
 488:	be d2 9c 85 d5       	mov    $0xd5859cd2,%esi
 48d:	7f cd                	jg     45c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x45c>
 48f:	57                   	push   %rdi
 490:	56                   	push   %rsi
 491:	55                   	push   %rbp
 492:	2c a8                	sub    $0xa8,%al
 494:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 495:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 496:	ba af 99 b9 6c       	mov    $0x6cb999af,%edx
 49b:	2a cd                	sub    %ch,%cl
 49d:	51                   	push   %rcx
 49e:	50                   	push   %rax
 49f:	4f                   	rex.WRXB
 4a0:	4e                   	rex.WRX
 4a1:	4d                   	rex.WRB
 4a2:	4c                   	rex.WR
 4a3:	4b                   	rex.WXB
 4a4:	4a                   	rex.WX
 4a5:	49 bd d7 8c 84 bc bc 	movabs $0x1f2f82bcbc848cd7,%r13
 4ac:	82 2f 1f 
 4af:	21 2f                	and    %ebp,(%rdi)
 4b1:	1b f1                	sbb    %ecx,%esi
 4b3:	e5 22                	in     $0x22,%eax
 4b5:	e3 65                	jrcxz  51c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x51c>
 4b7:	22 e4                	and    %ah,%ah
 4b9:	e5 21                	in     $0x21,%eax
 4bb:	be 2c 84 bc 1c       	mov    $0x1cbc842c,%esi
 4c0:	c4                   	(bad)
 4c1:	97                   	xchg   %eax,%edi
 4c2:	55                   	push   %rbp
 4c3:	18 2f                	sbb    %ch,(%rdi)
 4c5:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 4c6:	40 5e                	rex pop %rsi
 4c8:	46 c1 97 81 8c 97 4f 	rex.RX rcll $0xac,0x4f978c81(%rdi)
 4cf:	ac 
 4d0:	97                   	xchg   %eax,%edi
 4d1:	4d                   	rex.WRB
 4d2:	f0 e5 1f             	lock in $0x1f,%eax
 4d5:	be ec 83 bc dc       	mov    $0xdcbc83ec,%esi
 4da:	c3                   	ret
 4db:	97                   	xchg   %eax,%edi
 4dc:	95                   	xchg   %eax,%ebp
 4dd:	c6                   	(bad)
 4de:	cb                   	lret
 4df:	3c c8                	cmp    $0xc8,%al
 4e1:	cb                   	lret
 4e2:	3b 7c 59 07          	cmp    0x7(%rcx,%rbx,2),%edi
 4e6:	79 39                	jns    521 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x521>
 4e8:	07                   	(bad)
 4e9:	79 b9                	jns    4a4 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x4a4>
 4eb:	84 f1                	test   %dh,%cl
 4ed:	32 ce                	xor    %dh,%cl
 4ef:	7a 39                	jp     52a <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x52a>
 4f1:	79 73                	jns    566 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x566>
 4f3:	f9                   	stc
 4f4:	06                   	(bad)
 4f5:	79 19                	jns    510 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x510>
 4f7:	89 bc 7c 34 5e 36 1a 	mov    %edi,0x1a365e34(%rsp,%rdi,2)
 4fe:	2f                   	(bad)
 4ff:	17                   	(bad)
 500:	91                   	xchg   %eax,%ecx
 501:	97                   	xchg   %eax,%edi
 502:	89 c8                	mov    %ecx,%eax
 504:	cb                   	lret
 505:	2b f2                	sub    %edx,%esi
 507:	f2 91                	repnz xchg %eax,%ecx
 509:	97                   	xchg   %eax,%edi
 50a:	2f                   	(bad)
 50b:	f2 72 b7             	bnd jb 4c5 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x4c5>
 50e:	dc 0d 16 2b 55 b8    	fmull  -0x47aad4ea(%rip)        # ffffffffb855302a <utils.cpp.0ab61856+0xffffffffb855302a>
 514:	2c 03                	sub    $0x3,%al
 516:	59                   	pop    %rcx
 517:	96                   	xchg   %eax,%esi
 518:	c9                   	leave
 519:	21 21                	and    %esp,(%rcx)
 51b:	ab                   	stos   %eax,%es:(%rdi)
 51c:	03 71 8b             	add    -0x75(%rcx),%esi
 51f:	0a 5d a6             	or     -0x5a(%rbp),%bl
 522:	bb da ad a5 bb       	mov    $0xbba5adda,%ebx
 527:	4b 37                	rex.WXB (bad)
 529:	0e                   	(bad)
 52a:	dd 60 3a             	frstor 0x3a(%rax)
 52d:	cd 92                	int    $0x92
 52f:	22 54 c1 1f          	and    0x1f(%rcx,%rax,8),%dl
 533:	04 03                	add    $0x3,%al
 535:	d1 ce                	ror    $1,%esi
 537:	7a cf                	jp     508 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x508>
 539:	fb                   	sti
 53a:	c9                   	leave
 53b:	91                   	xchg   %eax,%ecx
 53c:	68 94 ba c4 73       	push   $0x73c4ba94
 541:	6e                   	outsb  %ds:(%rsi),(%dx)
 542:	43 1c 4e             	rex.XB sbb $0x4e,%al
 545:	21 62 15             	and    %esp,0x15(%rdx)
 548:	38 35 ca a3 25 5d    	cmp    %dh,0x5d25a3ca(%rip)        # 5d25a918 <utils.cpp.0ab61856+0x5d25a918>
 54e:	f9                   	stc
 54f:	26 bb 39 ad f3 3c    	es mov $0x3cf3ad39,%ebx
 555:	29 64 4e 4f          	sub    %esp,0x4f(%rsi,%rcx,2)
 559:	09 a9 2c 0d 09 81    	or     %ebp,-0x7ef6f2d4(%rcx)
 55f:	46 63 a7 ba 94 91 90 	rex.RX movsxd -0x6f6e6b46(%rdi),%r12d
 566:	ce                   	(bad)
 567:	ab                   	stos   %eax,%es:(%rdi)
 568:	11 d9                	adc    %ebx,%ecx
 56a:	93                   	xchg   %eax,%ebx
 56b:	fc                   	cld
 56c:	ce                   	(bad)
 56d:	24 fd                	and    $0xfd,%al
 56f:	9d                   	popf
 570:	70 b7                	jo     529 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x529>
 572:	a2 ec 9d 86 84 c0 a3 	movabs %al,0x4fb1a3c084869dec
 579:	b1 4f 
 57b:	5d                   	pop    %rbp
 57c:	0a 78 42             	or     0x42(%rax),%bh
 57f:	75 85                	jne    506 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x506>
 581:	f3 bc 1e 91 1d 69    	repz mov $0x691d911e,%esp
 587:	ac                   	lods   %ds:(%rsi),%al
 588:	68 76 02 ce ec       	push   $0xffffffffecce0276
 58d:	dc ec                	fsubr  %st,%st(4)
 58f:	c6                   	(bad)
 590:	2a d1                	sub    %cl,%dl
 592:	29 6d 67             	sub    %ebp,0x67(%rbp)
 595:	77 5e                	ja     5f5 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x5f5>
 597:	36 f5                	ss cmc
 599:	9d                   	popf
 59a:	e7 d8                	out    %eax,$0xd8
 59c:	85 a0 37 f7 3c 8b    	test   %esp,-0x74c308c9(%rax)
 5a2:	f4                   	hlt
 5a3:	f6 b0 b9 0d 2f 70    	divb   0x702f0db9(%rax)
 5a9:	36 b5 59             	ss mov $0x59,%ch
 5ac:	ed                   	in     (%dx),%eax
 5ad:	e0 54                	loopne 603 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x603>
 5af:	eb dc                	jmp    58d <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x58d>
 5b1:	f9                   	stc
 5b2:	86 be 80 74 9d 27    	xchg   %bh,0x279d7480(%rsi)
 5b8:	ed                   	in     (%dx),%eax
 5b9:	a8 7a                	test   $0x7a,%al
 5bb:	73 2b                	jae    5e8 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x5e8>
 5bd:	de 1e                	ficomps (%rsi)
 5bf:	bd ae 0d 09 77       	mov    $0x77090dae,%ebp
 5c4:	45 62 e7 95 28 ec    	(bad)
 5ca:	57                   	push   %rdi
 5cb:	39 80 3c 39 6f bd    	cmp    %eax,-0x4290c6c4(%rax)
 5d1:	22 d1                	and    %cl,%dl
 5d3:	28 f5                	sub    %dh,%ch
 5d5:	ea                   	(bad)
 5d6:	52                   	push   %rdx
 5d7:	1f                   	(bad)
 5d8:	7b 1a                	jnp    5f4 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x5f4>
 5da:	91                   	xchg   %eax,%ecx
 5db:	35 d0 bc b6 b3       	xor    $0xb3b6bcd0,%eax
 5e0:	46                   	rex.RX
 5e1:	2e 2e c6             	cs cs (bad)
 5e4:	35 04 08 7a d4       	xor    $0xd47a0804,%eax
 5e9:	a2 75 a8 85 32 cc e1 	movabs %al,0xa9de1cc3285a875
 5f0:	9d 0a 
 5f2:	0d ee e2 d2 b0       	or     $0xb0d2e2ee,%eax
 5f7:	bb 58 f3 fa 7a       	mov    $0x7afaf358,%ebx
 5fc:	20 22                	and    %ah,(%rdx)
 5fe:	d3 ca                	ror    %cl,%edx
 600:	36 74 77             	ss je  67a <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x67a>
 603:	42                   	rex.X
 604:	4d 9e                	rex.WRB sahf
 606:	30 86 81 41 5f 6f    	xor    %al,0x6f5f4181(%rsi)
 60c:	71 69                	jno    677 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x677>
 60e:	9b                   	fwait
 60f:	69 13 80 74 77 42    	imul   $0x42777480,(%rbx),%edx
 615:	18 9c d7 a0 a8 2f 97 	sbb    %bl,-0x68d05760(%rdi,%rdx,8)
 61c:	ef                   	out    %eax,(%dx)
 61d:	31 bd 8a e9 e3 1b    	xor    %edi,0x1be3e98a(%rbp)
 623:	c2 39 33             	ret    $0x3339
 626:	7f b5                	jg     5dd <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x5dd>
 628:	17                   	(bad)
 629:	e7 96                	out    %eax,$0x96
 62b:	b1 0a                	mov    $0xa,%cl
 62d:	9c                   	pushf
 62e:	9a                   	(bad)
 62f:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 630:	90                   	nop
 631:	2e f1                	cs int1
 633:	66 8b 97 38 f3 8a c0 	mov    -0x3f750cc8(%rdi),%dx
 63a:	a3 eb c8 b2 6c 3f e1 	movabs %eax,0x51f6e13f6cb2c8eb
 641:	f6 51 
 643:	6c                   	insb   (%dx),%es:(%rdi)
 644:	22 ce                	and    %dh,%cl
 646:	fb                   	sti
 647:	83 25 37 07 7b f2 37 	andl   $0x37,-0xd84f8c9(%rip)        # fffffffff27b0d85 <utils.cpp.0ab61856+0xfffffffff27b0d85>
 64e:	4c 80 be c0 e3 37 3c 	rex.WR cmpb $0x70,0x3c37e3c0(%rsi)
 655:	70 
 656:	72 3b                	jb     693 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x693>
 658:	ce                   	(bad)
 659:	e3 31                	jrcxz  68c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x68c>
 65b:	ec                   	in     (%dx),%al
 65c:	a8 40                	test   $0x40,%al
 65e:	ba dc 10 94 7c       	mov    $0x7c9410dc,%edx
 663:	81 ba 48 8e 74 59 a3 	cmpl   $0xa645bba3,0x59748e48(%rdx)
 66a:	bb 45 a6 
 66d:	5e                   	pop    %rsi
 66e:	47 e8 bd 01 ef ca    	rex.RXB call ffffffffcaef0831 <utils.cpp.0ab61856+0xffffffffcaef0831>
 674:	0d c1 c2 94 77       	or     $0x7794c2c1,%eax
 679:	41 60                	rex.B (bad)
 67b:	46                   	rex.RX
 67c:	f2 45                	repnz rex.RB
 67e:	36 11 ec             	ss adc %ebp,%esp
 681:	08 bd 7e 4c 4d bc    	or     %bh,-0x43b2b382(%rbp)
 687:	52                   	push   %rdx
 688:	98                   	cwtl
 689:	ef                   	out    %eax,(%dx)
 68a:	db 4c 27 5d          	fisttpl 0x5d(%rdi,%riz,1)
 68e:	68 f2 76 36 de       	push   $0xffffffffde3676f2
 693:	3a d8                	cmp    %al,%bl
 695:	9b                   	fwait
 696:	4c 3b e0             	cmp    %rax,%r12
 699:	27                   	(bad)
 69a:	44 e8 6d d0 eb 0c    	rex.R call cebd70d <utils.cpp.0ab61856+0xcebd70d>
 6a0:	9b                   	fwait
 6a1:	99                   	cltd
 6a2:	7b b4                	jnp    658 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x658>
 6a4:	17                   	(bad)
 6a5:	e7 b2                	out    %eax,$0xb2
 6a7:	65 59                	gs pop %rcx
 6a9:	56                   	push   %rsi
 6aa:	2b ab 1d 7c 76 5a    	sub    0x5a767c1d(%rbx),%ebp
 6b0:	11 79 0d             	adc    %edi,0xd(%rcx)
 6b3:	de 50 bc             	ficoms -0x44(%rax)
 6b6:	af                   	scas   %es:(%rdi),%eax
 6b7:	23 17                	and    (%rdi),%edx
 6b9:	08 22                	or     %ah,(%rdx)
 6bb:	09 3d ea f3 ac 8a    	or     %edi,-0x75530c16(%rip)        # ffffffff8aacfaab <utils.cpp.0ab61856+0xffffffff8aacfaab>
 6c1:	b7 7c                	mov    $0x7c,%bh
 6c3:	bf c2 40 14 3a       	mov    $0x3a1440c2,%edi
 6c8:	8e a6 4d e0 09 af    	mov    -0x50f61fb3(%rsi),%fs
 6ce:	33 10                	xor    (%rax),%edx
 6d0:	f3 bc fe 30 2f 75    	repz mov $0x752f30fe,%esp
 6d6:	29 b3 75 d4 5b 4c    	sub    %esi,0x4c5bd475(%rbx)
 6dc:	af                   	scas   %es:(%rdi),%eax
 6dd:	79 33                	jns    712 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x712>
 6df:	f4                   	hlt
 6e0:	f0 d4                	lock (bad)
 6e2:	5f                   	pop    %rdi
 6e3:	2f                   	(bad)
 6e4:	06                   	(bad)
 6e5:	51                   	push   %rcx
 6e6:	18 43 8a             	sbb    %al,-0x76(%rbx)
 6e9:	b7 d0                	mov    $0xd0,%bh
 6eb:	66 5e                	pop    %si
 6ed:	c7                   	(bad)
 6ee:	db 87 24 d6 40 f1    	fildl  -0xebf29dc(%rdi)
 6f4:	da 50 1c             	ficoml 0x1c(%rax)
 6f7:	67 4c 39 02          	cmp    %r8,(%edx)
 6fb:	e8 6d 61 33 ef       	call   ffffffffef33686d <utils.cpp.0ab61856+0xffffffffef33686d>
 700:	f5                   	cmc
 701:	8e 21                	mov    (%rcx),%fs
 703:	09 18                	or     %ebx,(%rax)
 705:	4e bc e5 36 5d e3 5b 	rex.WRX movabs $0xf0b8535be35d36e5,%rsp
 70c:	53 b8 f0 
 70f:	01 9a f0 5b 13 e8    	add    %ebx,-0x17eca410(%rdx)
 715:	d3 75 5e             	shll   %cl,0x5e(%rbp)
 718:	7b 2e                	jnp    748 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x748>
 71a:	38 f3                	cmp    %dh,%bl
 71c:	58                   	pop    %rax
 71d:	74 7c                	je     79b <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x79b>
 71f:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 720:	90                   	nop
 721:	c4                   	(bad)
 722:	cf                   	iret
 723:	5a                   	pop    %rdx
 724:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 725:	15 2f 78 d7 21       	adc    $0x21d7782f,%eax
 72a:	14 af                	adc    $0xaf,%al
 72c:	cd e7                	int    $0xe7
 72e:	2d 1b ad 41 a2       	sub    $0xa241ad1b,%eax
 733:	cc                   	int3
 734:	f1                   	int1
 735:	c1 b8 9c 09 ae 75 29 	sarl   $0x29,0x75ae099c(%rax)
 73c:	af                   	scas   %es:(%rdi),%eax
 73d:	4a 1c bf             	rex.WX sbb $0xbf,%al
 740:	7e 83                	jle    6c5 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x6c5>
 742:	77 39                	ja     77d <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x77d>
 744:	14 3c                	adc    $0x3c,%al
 746:	8a b5 4e 25 65 0d    	mov    0xd65254e(%rbp),%dh
 74c:	df 99 1e 9e 0a 4e    	fistps 0x4e0a9e1e(%rcx)
 752:	b5 63                	mov    $0x63,%ch
 754:	c1 61 c0 78          	shll   $0x78,-0x40(%rcx)
 758:	8e af 7e 54 e5 5b    	mov    0x5be5547e(%rdi),%gs
 75e:	67 b1 02             	addr32 mov $0x2,%cl
 761:	1e                   	(bad)
 762:	67 d1 78 0b          	sarl   $1,0xb(%eax)
 766:	4e 34 21             	rex.WRX xor $0x21,%al
 769:	4a bd 6c 17 6f 7c 43 	rex.WX movabs $0x5eb30d437c6f176c,%rbp
 770:	0d b3 5e 
 773:	3c 33                	cmp    $0x33,%al
 775:	09 38                	or     %edi,(%rax)
 777:	b9 e7 d9 9d b7       	mov    $0xb79dd9e7,%ecx
 77c:	4c fc                	rex.WR cld
 77e:	dd c2                	ffree  %st(2)
 780:	07                   	(bad)
 781:	b8 12 df 44 14       	mov    $0x1444df12,%eax
 786:	da 10                	ficoml (%rax)
 788:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 789:	b6 e9                	mov    $0xe9,%dh
 78b:	e0 38                	loopne 7c5 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x7c5>
 78d:	05 0f ec 75 79       	add    $0x7975ec0f,%eax
 792:	ea                   	(bad)
 793:	b2 d4                	mov    $0xd4,%dl
 795:	e5 af                	in     $0xaf,%eax
 797:	17                   	(bad)
 798:	e7 ae                	out    %eax,$0xae
 79a:	17                   	(bad)
 79b:	67 0e                	addr32 (bad)
 79d:	bc cc 92 92 8a       	mov    $0x8a9292cc,%esp
 7a2:	ca 36 68             	lret   $0x6836
 7a5:	7e 25                	jle    7cc <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x7cc>
 7a7:	b9 83 34 0e 7c       	mov    $0x7c0e3483,%ecx
 7ac:	6c                   	insb   (%dx),%es:(%rdi)
 7ad:	80 76 e6 34          	xorb   $0x34,-0x1a(%rsi)
 7b1:	2b 23                	sub    (%rbx),%esp
 7b3:	1b 13                	sbb    (%rbx),%edx
 7b5:	0b eb                	or     %ebx,%ebp
 7b7:	a1 41 06 4d 1e 3b 30 	movabs 0xfb00303b1e4d0641,%eax
 7be:	00 fb 
 7c0:	f2 d2 d1             	repnz rcl %cl,%cl
 7c3:	85 43 82             	test   %eax,-0x7e(%rbx)
 7c6:	08 6e d8             	or     %ch,-0x28(%rsi)
 7c9:	a8 41                	test   $0x41,%al
 7cb:	03 82 19 32 1e 70    	add    0x701e3219(%rdx),%eax
 7d1:	20 46 03             	and    %al,0x3(%rsi)
 7d4:	0c 70                	or     $0x70,%al
 7d6:	2d a0 40 02 08       	sub    $0x80240a0,%eax
 7db:	1c 60                	sbb    $0x60,%al
 7dd:	40 01 04 0c          	rex add %eax,(%rsp,%rcx,1)
 7e1:	20 40 12             	and    %al,0x12(%rax)
 7e4:	37                   	(bad)
 7e5:	56                   	push   %rsi
 7e6:	d5 d4 55 96 95 d6 55 	andnps -0x2aaa296b(%r22),%xmm10
 7ed:	d5 
 7ee:	b2 47                	mov    $0x47,%dl
 7f0:	d7                   	xlat   %ds:(%rbx)
 7f1:	06                   	(bad)
 7f2:	67 60                	addr32 (bad)
 7f4:	66 48 ab             	data16 stos %rax,%es:(%rdi)
 7f7:	aa                   	stos   %al,%es:(%rdi)
 7f8:	25 92 05 55 d5       	and    $0xd5550592,%eax
 7fd:	92                   	xchg   %eax,%edx
 7fe:	2c ec                	sub    $0xec,%al
 800:	0c 83                	or     $0x83,%al
 802:	e6 d1                	out    %al,$0xd1
 804:	09 66 96             	or     %esp,-0x6a(%rsi)
 807:	23 07                	and    (%rdi),%eax
 809:	91                   	xchg   %eax,%ecx
 80a:	87 d7                	xchg   %edx,%edi
 80c:	15 db d1 74 ae       	adc    $0xae74d1db,%eax
 811:	64 61                	fs (bad)
 813:	67 77 9e             	addr32 ja 7b4 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x7b4>
 816:	35 77 34 bf 8a       	xor    $0x8abf3477,%eax
 81b:	cd 06                	int    $0x6
 81d:	23 4b 3b             	and    0x3b(%rbx),%ecx
 820:	5b                   	pop    %rbx
 821:	c5 c6 9a             	(bad)
 824:	ce                   	(bad)
 825:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 826:	17                   	(bad)
 827:	98                   	cwtl
 828:	19 19                	sbb    %ebx,(%rcx)
 82a:	12 ac 83 a6 73 05 73 	adc    0x730573a6(%rbx,%rax,4),%ch
 831:	76 e9                	jbe    81c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x81c>
 833:	58                   	pop    %rax
 834:	c3                   	ret
 835:	d0 c4                	rol    $1,%ah
 837:	ce                   	(bad)
 838:	57                   	push   %rdi
 839:	56                   	push   %rsi
 83a:	59                   	pop    %rcx
 83b:	53                   	push   %rbx
 83c:	57                   	push   %rdi
 83d:	3a ba a4 96 3d 66    	cmp    0x663d96a4(%rdx),%bh
 843:	67 ce                	addr32 (bad)
 845:	33 19                	xor    (%rcx),%ebx
 847:	99                   	cltd
 848:	d7                   	xlat   %ds:(%rbx)
 849:	d2 d9                	rcr    %cl,%cl
 84b:	a3 79 86 c6 d4 d1 ec 	movabs %eax,0x4c1ecd1d4c68679
 852:	c1 04 
 854:	f3 32 43 1b          	repz xor 0x1b(%rbx),%al
 858:	73 fe                	jae    858 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x858>
 85a:	30 98 58 33 ac c9    	xor    %bl,-0x3653cca8(%rax)
 860:	40 14 01             	rex adc $0x1,%al
 863:	06                   	(bad)
 864:	c4                   	(bad)
 865:	08 43 3b             	or     %al,0x3b(%rbx)
 868:	13 eb                	adc    %ebx,%ebp
 86a:	42 93                	rex.X xchg %eax,%ebx
 86c:	c1 04 0b 1b          	roll   $0x1b,(%rbx,%rcx,1)
 870:	e3 c1                	jrcxz  833 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x833>
 872:	5c                   	pop    %rsp
 873:	32 f3                	xor    %bl,%dh
 875:	1e                   	(bad)
 876:	db af 03 e0 f7 6e    	fldt   0x6ef7e003(%rdi)
 87c:	2c d8                	sub    $0xd8,%al
 87e:	30 9e 5c f2 04 59    	xor    %bl,0x5904f25c(%rsi)
 884:	96                   	xchg   %eax,%esi
 885:	75 62                	jne    8e9 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x8e9>
 887:	18 6c d7 b0          	sbb    %ch,-0x50(%rdi,%rdx,8)
 88b:	05 95 17 e2 b4       	add    $0xb4e21795,%eax
 890:	3a fa                	cmp    %dl,%bh
 892:	bb c3 11 71 c7       	mov    $0xc77111c3,%ebx
 897:	8e 3b                	mov    (%rbx),%?
 899:	00 68 3b             	add    %ch,0x3b(%rax)
 89c:	2c 4b                	sub    $0x4b,%al
 89e:	07                   	(bad)
 89f:	23 0d 95 ad b7 ef    	and    -0x1048526b(%rip),%ecx        # ffffffffefb7b63a <utils.cpp.0ab61856+0xffffffffefb7b63a>
 8a5:	e8 6f 84 80 d1       	call   ffffffffd1808d19 <utils.cpp.0ab61856+0xffffffffd1808d19>
 8aa:	7a cb                	jp     877 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x877>
 8ac:	80 2c dc 61          	subb   $0x61,(%rsp,%rbx,8)
 8b0:	f5                   	cmc
 8b1:	5b                   	pop    %rbx
 8b2:	d5 ad 58 a8 62 75 90 	{rex2 0xad} addps -0xc6f8a9e(%r8),%xmm13
 8b9:	f3 
 8ba:	7a f5                	jp     8b1 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x8b1>
 8bc:	74 28                	je     8e6 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x8e6>
 8be:	28 f4                	sub    %dh,%ah
 8c0:	c6                   	(bad)
 8c1:	b7 15                	mov    $0x15,%bh
 8c3:	ef                   	out    %eax,(%dx)
 8c4:	37                   	(bad)
 8c5:	ab                   	stos   %eax,%es:(%rdi)
 8c6:	af                   	scas   %es:(%rdi),%eax
 8c7:	78 d2                	js     89b <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x89b>
 8c9:	0e                   	(bad)
 8ca:	4b d6                	rex.WXB (bad)
 8cc:	1a 94 a3 77 10 a8 1f 	sbb    0x1fa81077(%rbx,%riz,4),%dl
 8d3:	fd                   	std
 8d4:	c6                   	(bad)
 8d5:	ae                   	scas   %es:(%rdi),%al
 8d6:	aa                   	stos   %al,%es:(%rdi)
 8d7:	87 f5                	xchg   %esi,%ebp
 8d9:	f6 ea                	imul   %dl
 8db:	75 bc                	jne    899 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x899>
 8dd:	25 af 5a d5 6d       	and    $0x6dd55aaf,%eax
 8e2:	2e fe                	cs (bad)
 8e4:	22 b0 aa e1 ce 2b    	and    0x2bcee1aa(%rax),%dh
 8ea:	0b a7 3f b9 b9 9d    	or     -0x624646c1(%rdi),%esp
 8f0:	e8 c5 e8 dd f6       	call   fffffffff6ddf1ba <utils.cpp.0ab61856+0xfffffffff6ddf1ba>
 8f5:	e2 46                	loop   93d <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x93d>
 8f7:	bf f1 fb d3 a3       	mov    $0xa3d3fbf1,%edi
 8fc:	3e ad                	lods   %ds:(%rsi),%eax
 8fe:	88 d6                	mov    %dl,%dh
 900:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 901:	14 bd                	adc    $0xbd,%al
 903:	e1 9e                	loope  8a3 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x8a3>
 905:	5e                   	pop    %rsi
 906:	f4                   	hlt
 907:	26 3b 35 c2 f6 e2 3c 	es cmp 0x3ce2f6c2(%rip),%esi        # 3ce2ffd0 <utils.cpp.0ab61856+0x3ce2ffd0>
 90e:	12 5d c7             	adc    -0x39(%rbp),%bl
 911:	ce                   	(bad)
 912:	8a 5e 97             	mov    -0x69(%rsi),%bl
 915:	aa                   	stos   %al,%es:(%rdi)
 916:	b7 2c                	mov    $0x2c,%bh
 918:	5e                   	pop    %rsi
 919:	97                   	xchg   %eax,%edi
 91a:	46 85 c0             	rex.RX test %r8d,%eax
 91d:	a9 66 bb 3a d6       	test   $0xd63abb66,%eax
 922:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 923:	79 71                	jns    996 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x996>
 925:	53                   	push   %rbx
 926:	2d 3d af 52 4d       	sub    $0x4d52af3d,%eax
 92b:	77 ea                	ja     917 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x917>
 92d:	e7 09                	out    %eax,$0x9
 92f:	38 33                	cmp    %dh,(%rbx)
 931:	f4                   	hlt
 932:	3c d1                	cmp    $0xd1,%al
 934:	85 28                	test   %ebp,(%rax)
 936:	94                   	xchg   %eax,%esp
 937:	a1 37 1b d6 87 ae e3 	movabs 0x337e3ae87d61b37,%eax
 93e:	37 03 
 940:	95                   	xchg   %eax,%ebp
 941:	61                   	(bad)
 942:	01 4e 21             	add    %ecx,0x21(%rsi)
 945:	28 a1 b7 d4 e9 42    	sub    %ah,0x42e9d4b7(%rcx)
 94b:	bf b1 eb d3 9b       	mov    $0x9bd3ebb1,%edi
 950:	3a 62 aa             	cmp    -0x56(%rdx),%ah
 953:	9d                   	popf
 954:	a1 a8 5e 75 29 33 99 	movabs 0x2bce993329755ea8,%eax
 95b:	ce 2b 
 95d:	d4                   	(bad)
 95e:	d2 9b 2e 65 a9 b7    	rcrb   %cl,-0x48569ad2(%rbx)
 964:	3d 7f 77 d5 a5       	cmp    $0xa5d5777f,%eax
 969:	1a d5                	sbb    %ch,%dl
 96b:	59                   	pop    %rcx
 96c:	5c                   	pop    %rsp
 96d:	7a 17                	jp     986 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x986>
 96f:	b8 5c 3b af 51       	mov    $0x51af3b5c,%eax
 974:	4b                   	rex.WXB
 975:	67 ba f4 32 69 20    	addr32 mov $0x206932f4,%edx
 97b:	41 07                	rex.B (bad)
 97d:	12 74 35 16          	adc    0x16(%rbp,%rsi,1),%dh
 981:	0f 7a                	(bad)
 983:	8e 1d 14 bd b9 27    	mov    0x27b9bd14(%rip),%ds        # 27b9c69d <utils.cpp.0ab61856+0x27b9c69d>
 989:	33 45 02             	xor    0x2(%rbp),%eax
 98c:	2a be c6 74 15 8f    	sub    -0x70ea8b3a(%rsi),%bh
 992:	8a e0                	mov    %al,%ah
 994:	29 9e 23 44 86 e5    	sub    %ebx,-0x1a79bbdd(%rsi)
 99a:	db a8 d7 f1 45 a1    	fldt   -0x5eba0e29(%rax)
 9a0:	86 a7 b4 3b a9 36    	xchg   %ah,0x36a93bb4(%rdi)
 9a6:	fd                   	std
 9a7:	38 3b                	cmp    %bh,(%rbx)
 9a9:	29 9d d7 25 a5 2f    	sub    %ebx,0x2fa525d7(%rbp)
 9af:	a1 c8 3a 8a b7 5e 92 	movabs 0x5024925eb78a3ac8,%eax
 9b6:	24 50 
 9b8:	27                   	(bad)
 9b9:	62                   	(bad)
 9ba:	18 df                	sbb    %bl,%bh
 9bc:	e0 d4                	loopne 992 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x992>
 9be:	00 3d cd c7 81 1e    	add    %bh,0x1e81c7cd(%rip)        # 1e81d191 <utils.cpp.0ab61856+0x1e81d191>
 9c4:	65 37                	gs (bad)
 9c6:	37                   	(bad)
 9c7:	a3 eb 78 c2 a8 7b 8a 	movabs %eax,0x375b8a7ba8c278eb
 9ce:	5b 37 
 9d0:	f1                   	int1
 9d1:	eb c2                	jmp    995 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x995>
 9d3:	91                   	xchg   %eax,%ecx
 9d4:	20 68 fc             	and    %ch,-0x4(%rax)
 9d7:	dc c7                	fadd   %st,%st(7)
 9d9:	cf                   	iret
 9da:	93                   	xchg   %eax,%ebx
 9db:	76 4f                	jbe    a2c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xa2c>
 9dd:	f4                   	hlt
 9de:	e6 9e                	out    %al,$0x9e
 9e0:	4f 34 fe             	rex.WRXB xor $0xfe,%al
 9e3:	7a 70                	jp     a55 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xa55>
 9e5:	32 b4 e1 f3 1f 4a f7 	xor    -0x8b5e00d(%rcx,%riz,8),%dh
 9ec:	79 d2                	jns    9c0 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0x9c0>
 9ee:	ce                   	(bad)
 9ef:	89 de                	mov    %ebx,%esi
 9f1:	dc b3 e9 06 f9 b3    	fdivl  -0x4c06f917(%rbx)
 9f7:	c2 f4 96             	ret    $0x96f4
 9fa:	ff                   	ljmp   (bad)
 9fb:	ea                   	(bad)
 9fc:	aa                   	stos   %al,%es:(%rdi)
 9fd:	4a 68 e7 35 29 e9    	rex.WX push $0xffffffffe92935e7
 a03:	4a 3d 01 82 01 a8    	rex.WX cmp $0xffffffffa8018201,%rax
 a09:	b2 38                	mov    $0x38,%dl
 a0b:	1d 17 32 a6 14       	sbb    $0x14a63217,%eax
 a10:	52                   	push   %rdx
 a11:	44 23 d2             	and    %edx,%r10d
 a14:	24 c9                	and    $0xc9,%al
 a16:	72 62                	jb     a7a <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xa7a>
 a18:	0b 10                	or     (%rax),%edx
 a1a:	8a 83 61 20 db 3a    	mov    0x3adb2061(%rbx),%al
 a20:	12 a0 25 35 46 3a    	adc    0x3a463525(%rax),%ah
 a26:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 a27:	e6 02                	out    %al,$0x2
 a29:	51                   	push   %rcx
 a2a:	cb                   	lret
 a2b:	01 a6 82 0a 10 75    	add    %esp,0x75100a82(%rsi)
 a31:	31 ff                	xor    %edi,%edi
 a33:	80 ab 63 2b 2c 39 5f 	subb   $0x5f,0x392c2b63(%rbx)
 a3a:	62 e1 d6 da 49       	(bad)
 a3f:	00 1d 18 4d f5 8e    	add    %bl,-0x710ab2e8(%rip)        # ffffffff8ef5575d <utils.cpp.0ab61856+0xffffffff8ef5575d>
 a45:	dd b3 78 85 49 1f    	fnsave 0x1f498578(%rbx)
 a4b:	55                   	push   %rbp
 a4c:	69 25 0c 55 42 d6 2e 	imul   $0xfe81842e,-0x29bdaaf4(%rip),%esp        # ffffffffd6425f62 <utils.cpp.0ab61856+0xffffffffd6425f62>
 a53:	84 81 fe 
 a56:	87 5f 4f             	xchg   %ebx,0x4f(%rdi)
 a59:	49 35 1a 47 03 66    	rex.WB xor $0x6603471a,%rax
 a5f:	28 e4                	sub    %ah,%ah
 a61:	0b 3b                	or     (%rbx),%edi
 a63:	36 f4                	ss hlt
 a65:	07                   	(bad)
 a66:	19 b0 65 3f 52 30    	sbb    %esi,0x30523f65(%rax)
 a6c:	93                   	xchg   %eax,%ebx
 a6d:	88 e6                	mov    %ah,%dh
 a6f:	ba 2c 72 c6 18       	mov    $0x18c6722c,%edx
 a74:	35 f3 49 27 2b       	xor    $0x2b2749f3,%eax
 a79:	80 a5 13 89 37 80 5d 	andb   $0x5d,-0x7fc876ed(%rbp)
 a80:	54                   	push   %rsp
 a81:	43 3f                	rex.XB (bad)
 a83:	f4                   	hlt
 a84:	25 60 73 d9 65       	and    $0x65d97360,%eax
 a89:	4a c6                	rex.WX (bad)
 a8b:	e4 90                	in     $0x90,%al
 a8d:	e0 b5                	loopne a44 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xa44>
 a8f:	7a eb                	jp     a7c <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xa7c>
 a91:	d2 fd                	sar    %cl,%ch
 a93:	0a b3 52 14 ba a3    	or     -0x5c45ebae(%rbx),%dh
 a99:	0f ab ed             	bts    %ebp,%ebp
 a9c:	bd c6 77 58 57       	mov    $0x575877c6,%ebp
 aa1:	14 a8                	adc    $0xa8,%al
 aa3:	1b 61 aa             	sbb    -0x56(%rcx),%esp
 aa6:	a8 14                	test   $0x14,%al
 aa8:	f7 39                	idivl  (%rcx)
 aaa:	f0 f1                	lock int1
 aac:	32 18                	xor    (%rax),%bl
 aae:	a2 f0 4f 52 f1 28 b5 	movabs %al,0x78adb528f1524ff0
 ab5:	ad 78 
 ab7:	3b e3                	cmp    %ebx,%esp
 ab9:	4f f1                	rex.WRXB int1
 abb:	4e 06                	rex.WRX (bad)
 abd:	54                   	push   %rsp
 abe:	9c                   	pushf
 abf:	47 99                	rex.RXB cltd
 ac1:	22 f0                	and    %al,%dh
 ac3:	6c                   	insb   (%dx),%es:(%rdi)
 ac4:	57                   	push   %rdi
 ac5:	83 68 38 38          	subl   $0x38,0x38(%rax)
 ac9:	6d                   	insl   (%dx),%es:(%rdi)
 aca:	7b 2c                	jnp    af8 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xaf8>
 acc:	6b 91 40 0d 87 8e c1 	imul   $0xffffffc1,-0x7178f2c0(%rcx),%edx
 ad3:	43                   	rex.XB
 ad4:	26 0f b0 d5          	es cmpxchg %dl,%ch
 ad8:	70 49                	jo     b23 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xb23>
 ada:	fc                   	cld
 adb:	05 ca d3 ef c3       	add    $0xc3efd3ca,%eax
 ae0:	cf                   	iret
 ae1:	77 62                	ja     b45 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xb45>
 ae3:	fe                   	(bad)
 ae4:	f6 f2                	div    %dl
 ae6:	1a d6                	sbb    %dh,%dl
 ae8:	45 b9 4b ad 25 dd    	rex.RB mov $0xdd25ad4b,%r9d
 aee:	8c 7e 36             	mov    %?,0x36(%rsi)
 af1:	0a 0a                	or     (%rdx),%cl
 af3:	91                   	xchg   %eax,%ecx
 af4:	49 1d 8d e7 05 13    	rex.WB sbb $0x1305e78d,%rax
 afa:	60                   	(bad)
 afb:	94                   	xchg   %eax,%esp
 afc:	bb 93 b2 0d ec       	mov    $0xec0db293,%ebx
 b01:	b3 14                	mov    $0x14,%bl
 b03:	75 49                	jne    b4e <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xb4e>
 b05:	d5 53 74             	(bad)
 b08:	35 13 27 36 c5       	xor    $0xc5362713,%eax
 b0d:	82                   	(bad)
 b0e:	1a 6c 60 f3          	sbb    -0xd(%rax,%riz,2),%ch
 b12:	bd 5f 51 fa a3       	mov    $0xa3fa515f,%ebp
 b17:	4c d2 96 fd 27 12 e9 	rex.WR rclb %cl,-0x16edd803(%rsi)
 b1e:	07                   	(bad)
 b1f:	07                   	(bad)
 b20:	7a 0b                	jp     b2d <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xb2d>
 b22:	42 5f                	rex.X pop %rdi
 b24:	6b 05 f3 9e 2d 44 f5 	imul   $0xfffffff5,0x442d9ef3(%rip),%eax        # 442daa1e <utils.cpp.0ab61856+0x442daa1e>
 b2b:	12 b5 5e 8a 3f 40    	adc    0x403f8a5e(%rbp),%dh
 b31:	73 12                	jae    b45 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xb45>
 b33:	54                   	push   %rsp
 b34:	96                   	xchg   %eax,%esi
 b35:	31 39                	xor    %edi,(%rcx)
 b37:	90                   	nop
 b38:	d4                   	(bad)
 b39:	14 4d                	adc    $0x4d,%al
 b3b:	8b a2 c9 a3 72 6f    	mov    0x6f72a3c9(%rdx),%esp
 b41:	b4 80                	mov    $0x80,%ah
 b43:	3a fb                	cmp    %bl,%bh
 b45:	4e 55                	rex.WRX push %rbp
 b47:	a8 65                	test   $0x65,%al
 b49:	19 fb                	sbb    %edi,%ebx
 b4b:	2e 6e                	outsb  %ds:(%rsi),(%dx)
 b4d:	fb                   	sti
 b4e:	b8 03 65 89 d4       	mov    $0xd4896503,%eax
 b53:	94                   	xchg   %eax,%esp
 b54:	2d 2c a5 ab 76       	sub    $0x76aba52c,%eax
 b59:	b2 a9                	mov    $0xa9,%dl
 b5b:	34 94                	xor    $0x94,%al
 b5d:	fa                   	cli
 b5e:	bf 2f c0 2c a5       	mov    $0xa52cc02f,%edi
 b63:	9a                   	(bad)
 b64:	fd                   	std
 b65:	26 ae                	es scas %es:(%rdi),%al
 b67:	93                   	xchg   %eax,%ebx
 b68:	51                   	push   %rcx
 b69:	21 50 d8             	and    %edx,-0x28(%rax)
 b6c:	ab                   	stos   %eax,%es:(%rdi)
 b6d:	0a d1                	or     %cl,%dl
 b6f:	2d bc 36 fd f0       	sub    $0xf0fd36bc,%eax
 b74:	8c f6                	mov    %?,%esi
 b76:	43 6b 31 73          	rex.XB imul $0x73,(%r9),%esi
 b7a:	cf                   	iret
 b7b:	4b f4                	rex.WXB hlt
 b7d:	fb                   	sti
 b7e:	fd                   	std
 b7f:	00 8c a8 08 04 bc 3a 	add    %cl,0x3abc0408(%rax,%rbp,4)
 b86:	3b 02                	cmp    (%rdx),%eax
 b88:	dd 40 2b             	fldl   0x2b(%rax)
 b8b:	db 5c b5 4c          	fistpl 0x4c(%rbp,%rsi,4)
 b8f:	1d 41 0e d3 1f       	sbb    $0x1fd30e41,%eax
 b94:	04 92                	add    $0x92,%al
 b96:	79 6d                	jns    c05 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xc05>
 b98:	cc                   	int3
 b99:	bc d1 07 a6 78       	mov    $0x78a607d1,%esp
 b9e:	af                   	scas   %es:(%rdi),%eax
 b9f:	f5                   	cmc
 ba0:	d6                   	(bad)
 ba1:	05 98 2b 32 ac       	add    $0xac322b98,%eax
 ba6:	46 25 62 73 a5 09    	rex.RX and $0x9a57362,%eax
 bac:	75 3d                	jne    beb <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xbeb>
 bae:	69 a6 24 8b 26 2d 18 	imul   $0x98e2d518,0x2d268b24(%rsi),%esp
 bb5:	d5 e2 98 
 bb8:	b8 12 26 61 26       	mov    $0x26612612,%eax
 bbd:	d1 a8 db 3a 70 87    	shrl   $1,-0x788fc525(%rax)
 bc3:	dd 57 17             	fstl   0x17(%rdi)
 bc6:	cf                   	iret
 bc7:	3c b2                	cmp    $0xb2,%al
 bc9:	53                   	push   %rbx
 bca:	ee                   	out    %al,(%dx)
 bcb:	90                   	nop
 bcc:	5f                   	pop    %rdi
 bcd:	4c 8a 59 69          	rex.WR mov 0x69(%rcx),%r11b
 bd1:	d2 5e c7             	rcrb   %cl,-0x39(%rsi)
 bd4:	c6 78                	xabort $0x78,(bad)
 bd6:	55                   	push   %rbp
 bd7:	b8 60 e6 d0 fa       	mov    $0xfad0e660,%eax
 bdc:	2d 01 4f 31 cc       	sub    $0xcc314f01,%eax
 be1:	9c                   	pushf
 be2:	02 37                	add    (%rdi),%dh
 be4:	1e                   	(bad)
 be5:	d7                   	xlat   %ds:(%rbx)
 be6:	bf ba 3f 7e ef       	mov    $0xef7e3fba,%edi
 beb:	19 64 c7 71          	sbb    %esp,0x71(%rdi,%rax,8)
 bef:	47 56                	rex.RXB push %r14
 bf1:	83 4b c8 bb          	orl    $0xffffffbb,-0x38(%rbx)
 bf5:	5f                   	pop    %rdi
 bf6:	f4                   	hlt
 bf7:	b2 3c                	mov    $0x3c,%dl
 bf9:	09 79 63             	or     %edi,0x63(%rcx)
 bfc:	81 11 34 38 6a 5e    	adcl   $0x5e6a3834,(%rcx)
 c02:	57                   	push   %rdi
 c03:	92                   	xchg   %eax,%edx
 c04:	98                   	cwtl
 c05:	c7                   	(bad)
 c06:	9c                   	pushf
 c07:	33 82 4e 2c fb 0c    	xor    0xcfb2c4e(%rdx),%eax
 c0d:	06                   	(bad)
 c0e:	b6 d4                	mov    $0xd4,%dh
 c10:	e5 b8                	in     $0xb8,%eax
 c12:	91                   	xchg   %eax,%ecx
 c13:	78 ac                	js     bc1 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xbc1>
 c15:	2e 34 26             	cs xor $0x26,%al
 c18:	29 58 6c             	sub    %ebx,0x6c(%rax)
 c1b:	68 8a 11 f0 30       	push   $0x30f0118a
 c20:	0b c8                	or     %eax,%ecx
 c22:	64 6b 4a 01 18       	imul   $0x18,%fs:0x1(%rdx),%ecx
 c27:	a2 cb 69 3a db e3 d6 	movabs %al,0xbe9d6e3db3a69cb
 c2e:	e9 0b 
 c30:	3e ed                	ds in  (%dx),%eax
 c32:	1c 8b                	sbb    $0x8b,%al
 c34:	55                   	push   %rbp
 c35:	31 ae 87 4f e2 c9    	xor    %ebp,-0x361db079(%rsi)
 c3b:	31 28                	xor    %ebp,(%rax)
 c3d:	e8 53 a9 aa b1       	call   ffffffffb1aab595 <utils.cpp.0ab61856+0xffffffffb1aab595>
 c42:	1d 96 66 1b d8       	sbb    $0xd81b6696,%eax
 c47:	2c 75                	sub    $0x75,%al
 c49:	47 a2 c1 8b 50 4e f2 	rex.RXB movabs %al,0x42503af24e508bc1
 c50:	3a 50 42 
 c53:	76 6f                	jbe    cc4 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xcc4>
 c55:	c7                   	(bad)
 c56:	2b 50 44             	sub    0x44(%rax),%edx
 c59:	9b                   	fwait
 c5a:	a2 1e 82 21 ba e5 05 	movabs %al,0xb64805e5ba21821e
 c61:	48 b6 
 c63:	81 c7 ce 0d e4 a4    	add    $0xa4e40dce,%edi
 c69:	92                   	xchg   %eax,%edx
 c6a:	1b dd                	sbb    %ebp,%ebx
 c6c:	29 5e 08             	sub    %ebx,0x8(%rsi)
 c6f:	af                   	scas   %es:(%rdi),%eax
 c70:	a2 84 c8 10 59 0f 2c 	movabs %al,0x20e92c0f5910c884
 c77:	e9 20 
 c79:	f9                   	stc
 c7a:	64 b0 49             	fs mov $0x49,%al
 c7d:	a8 78                	test   $0x78,%al
 c7f:	64 05 56 90 75 0f    	fs add $0xf759056,%eax
 c85:	a3 d8 3d f6 96 6c 44 	movabs %eax,0xd654446c96f63dd8
 c8c:	54 d6 
 c8e:	b6 ac                	mov    $0xac,%dh
 c90:	a8 28                	test   $0x28,%al
 c92:	24 97                	and    $0x97,%al
 c94:	09 a6 10 66 29 dd    	or     %esp,-0x22d699f0(%rsi)
 c9a:	10 04 a3             	adc    %al,(%rbx,%riz,4)
 c9d:	b0 20                	mov    $0x20,%al
 c9f:	8f                   	(bad)
 ca0:	cc                   	int3
 ca1:	f9                   	stc
 ca2:	b7 06                	mov    $0x6,%bh
 ca4:	65 0e                	gs (bad)
 ca6:	1e                   	(bad)
 ca7:	30 d3                	xor    %dl,%bl
 ca9:	39 23                	cmp    %esp,(%rbx)
 cab:	82                   	(bad)
 cac:	cf                   	iret
 cad:	b3 fe                	mov    $0xfe,%bl
 caf:	ab                   	stos   %eax,%es:(%rdi)
 cb0:	0c 59                	or     $0x59,%al
 cb2:	8b ad 51 ad f8 85    	mov    -0x7a0752af(%rbp),%ebp
 cb8:	5a                   	pop    %rdx
 cb9:	b9 e4 f2 95 aa       	mov    $0xaa95f2e4,%ecx
 cbe:	d8 78 b1             	fdivrs -0x4f(%rax)
 cc1:	10 29                	adc    %ch,(%rcx)
 cc3:	40 2b 1e             	rex sub (%rsi),%ebx
 cc6:	8b f9                	mov    %ecx,%edi
 cc8:	2a 85 df 7d 7e 07    	sub    0x77e7ddf(%rbp),%al
 cce:	84 66 40             	test   %ah,0x40(%rsi)
 cd1:	2f                   	(bad)
 cd2:	5d                   	pop    %rbp
 cd3:	45 dc 49 4a          	rex.RB fmull 0x4a(%r9)
 cd7:	7f db                	jg     cb4 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xcb4>
 cd9:	25 a9 63 79 a4       	and    $0xa47963a9,%eax
 cde:	fd                   	std
 cdf:	f2 99                	repnz cltd
 ce1:	26 f5                	es cmc
 ce3:	b5 f5                	mov    $0xf5,%ch
 ce5:	ea                   	(bad)
 ce6:	99                   	cltd
 ce7:	4a 05 ad 75 97 86    	rex.WX add $0xffffffff869775ad,%rax
 ced:	bd ef e2 a4 c0       	mov    $0xc0a4e2ef,%ebp
 cf2:	52                   	push   %rdx
 cf3:	db c2                	fcmovnb %st(2),%st
 cf5:	df a5 ba 23 91 cc    	fbld   -0x336edc46(%rbp)
 cfb:	95                   	xchg   %eax,%ebp
 cfc:	dc 6e 11             	fsubrl 0x11(%rsi)
 cff:	47 5b                	rex.RXB pop %r11
 d01:	d3 7e cb             	sarl   %cl,-0x35(%rsi)
 d04:	ee                   	out    %al,(%dx)
 d05:	fa                   	cli
 d06:	d2 69 02             	shrb   %cl,0x2(%rcx)
 d09:	2f                   	(bad)
 d0a:	70 3a                	jo     d46 <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xd46>
 d0c:	5f                   	pop    %rdi
 d0d:	56                   	push   %rsi
 d0e:	08 d7                	or     %dl,%bh
 d10:	67 df e7             	addr32 (bad)
 d13:	37                   	(bad)
 d14:	fd                   	std
 d15:	0f 59 ae c0 7f 25 2e 	mulps  0x2e257fc0(%rsi),%xmm5
 d1c:	f5                   	cmc
 d1d:	69 16 5c e4 8e 57    	imul   $0x578ee45c,(%rsi),%edx
 d23:	c8 11 c4 67          	enter  $0xc411,$0x67
 d27:	32 79 ce             	xor    -0x32(%rcx),%bh
 d2a:	ee                   	out    %al,(%dx)
 d2b:	39 03                	cmp    %eax,(%rbx)
 d2d:	e9 8c 3d ed 54       	jmp    54ed4abe <utils.cpp.0ab61856+0x54ed4abe>
 d32:	b7 92                	mov    $0x92,%bh
 d34:	85 fb                	test   %edi,%ebx
 d36:	b7 3e                	mov    $0x3e,%bh
 d38:	89 8b a5 8f 3a 1b    	mov    %ecx,0x1b3a8fa5(%rbx)
 d3e:	ec                   	in     (%dx),%al
 d3f:	e1 ea                	loope  d2b <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xd2b>
 d41:	bc df d4 5a b0       	mov    $0xb05ad4df,%esp
 d46:	d2 f3                	shl    %cl,%bl
 d48:	3c 48                	cmp    $0x48,%al
 d4a:	02 ce                	add    %dh,%cl
 d4c:	b5 df                	mov    $0xdf,%ch
 d4e:	09 68 a0             	or     %ebp,-0x60(%rax)
 d51:	c3                   	ret
 d52:	49 09 13             	or     %rdx,(%r11)
 d55:	a2 15 5f 01 c6 6d a2 	movabs %al,0xe700a26dc6015f15
 d5c:	00 e7 
 d5e:	51                   	push   %rcx
 d5f:	fb                   	sti
 d60:	03 f7                	add    %edi,%esi
 d62:	22 85 de a0 a0 47    	and    0x47a0a0de(%rbp),%al
 d68:	25 cf 09 b2 38       	and    $0x38b209cf,%eax
 d6d:	4f                   	rex.WRXB
 d6e:	46 2d 49 37 95 38    	rex.RX sub $0x38953749,%eax
 d74:	75 b4                	jne    d2a <.gnu.lto__ZN10QuantumNEC3Lib6numberEPcliiii.17.7c70a44ae594ff4d+0xd2a>
 d76:	85 db                	test   %ebx,%ebx
 d78:	f4                   	hlt
 d79:	88 e3                	mov    %ah,%bl
 d7b:	13 dc                	adc    %esp,%ebx
 d7d:	82                   	(bad)
 d7e:	70 55                	jo     dd5 <utils.cpp.0ab61856+0xdd5>
 d80:	fc                   	cld
 d81:	22 fe                	and    %dh,%bh
 d83:	84 8f 7f 72 66 ef    	test   %cl,-0x10998d81(%rdi)
 d89:	5b                   	pop    %rbx
 d8a:	5e                   	pop    %rsi
 d8b:	f3 fe                	repz (bad)
 d8d:	97                   	xchg   %eax,%edi
 d8e:	c8 4c dd e6          	enter  $0xdd4c,$0xe6
 d92:	36                   	ss
 d93:	0a                   	.byte 0xa
 d94:	8b 50 e8             	mov    -0x18(%rax),%edx
 d97:	10                   	.byte 0x10

Disassembly of section .gnu.lto_.symbol_nodes.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.symbol_nodes.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 60 c9    	sub    %dh,-0x369f02d1(%rbp)
   6:	00 55 06             	add    %dl,0x6(%rbp)
   9:	00 b4 08 c5 01 00 00 	add    %dh,0x1c5(%rax,%rcx,1)
  10:	00 02                	add    %al,(%rdx)
  12:	0e                   	(bad)
  13:	7f 00                	jg     15 <.gnu.lto_.symbol_nodes.7c70a44ae594ff4d+0x15>
  15:	ff 1f                	lcall  *(%rdi)
  17:	01 90 ce 00 00 7f    	add    %edx,0x7f0000ce(%rax)
  1d:	5f                   	pop    %rdi
  1e:	5a                   	pop    %rdx
  1f:	4e 31 30             	rex.WRX xor %r14,(%rax)
  22:	51                   	push   %rcx
  23:	75 61                	jne    86 <.gnu.lto_.symbol_nodes.7c70a44ae594ff4d+0x86>
  25:	6e                   	outsb  %ds:(%rsi),(%dx)
  26:	74 75                	je     9d <.gnu.lto_.symbol_nodes.7c70a44ae594ff4d+0x9d>
  28:	6d                   	insl   (%dx),%es:(%rdi)
  29:	4e                   	rex.WRX
  2a:	45                   	rex.RB
  2b:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
  30:	38 49 53             	cmp    %cl,0x53(%rcx)
  33:	5f                   	pop    %rdi
  34:	44                   	rex.R
  35:	49                   	rex.WB
  36:	47                   	rex.RXB
  37:	49 54                	rex.WB push %r12
  39:	49 63 45 45          	movslq 0x45(%r13),%rax
  3d:	44 61                	rex.R (bad)
  3f:	52                   	push   %rdx
  40:	4b 54                	rex.WXB push %r12
  42:	5f                   	pop    %rdi
  43:	00 7f 00             	add    %bh,0x0(%rdi)
  46:	be 90 82 02 10       	mov    $0x10028290,%esi
  4b:	7f 01                	jg     4e <.gnu.lto_.symbol_nodes.7c70a44ae594ff4d+0x4e>
  4d:	00 00                	add    %al,(%rax)
  4f:	be 91 11 7f 02       	mov    $0x27f1191,%esi
  54:	0f 7f 03             	movq   %mm0,(%rbx)
  57:	05 0c 04 c6 84       	add    $0x84c6040c,%eax
  5c:	01 00                	add    %eax,(%rax)
  5e:	00 03                	add    %al,(%rbx)
  60:	05 0b 05 0a 06       	add    $0x60a050b,%eax
  65:	09 07                	or     %eax,(%rdi)
  67:	08 08                	or     %cl,(%rax)
  69:	07                   	(bad)
  6a:	09 06                	or     %eax,(%rsi)
  6c:	0a 01                	or     (%rcx),%al
  6e:	0b 00                	or     (%rax),%eax
  70:	0c 03                	or     $0x3,%al
  72:	01 a3 07 03 03 83    	add    %esp,-0x7cfcfcf9(%rbx)
  78:	1a 03                	sbb    (%rbx),%al
  7a:	03 01                	add    (%rcx),%eax
  7c:	c3                   	ret
  7d:	1a 66 66             	sbb    0x66(%rsi),%ah
  80:	03 03                	add    (%rbx),%eax
  82:	02 a3 bf 01 83 e2    	add    -0x1d7cfe41(%rbx),%ah
  88:	c3                   	ret
  89:	e6 e3                	out    %al,$0xe3
  8b:	ea                   	(bad)
  8c:	c3                   	ret
  8d:	eb 83                	jmp    12 <.gnu.lto_.symbol_nodes.7c70a44ae594ff4d+0x12>
  8f:	f2 e3 a3             	repnz jrcxz 35 <.gnu.lto_.symbol_nodes.7c70a44ae594ff4d+0x35>
  92:	f6 83 f7 01 00 1c 00 	testb  $0x0,0x1c0001f7(%rbx)
  99:	40                   	rex
  9a:	46 d0 31             	rex.RX shlb $1,(%rcx)
  9d:	20 37                	and    %dh,(%rdi)
  9f:	20 37                	and    %dh,(%rdi)
  a1:	20 37                	and    %dh,(%rdi)
  a3:	20 37                	and    %dh,(%rdi)
  a5:	20 b7 99 c7 81 2d    	and    %dh,0x2d81c799(%rdi)
  ab:	81 cc 82 92 0d c0    	or     $0xc00d9282,%esp
  b1:	27                   	(bad)
  b2:	13 b3 fa 45 0c 30    	adc    0x300c45fa(%rbx),%esi
  b8:	06                   	(bad)
  b9:	19 83 8c 41 c6 20    	sbb    %eax,0x20c6418c(%rbx)
  bf:	63 90 31 c8 98 25    	movsxd 0x2598c831(%rax),%edx
  c5:	4b 00 1c 60          	rex.WXB add %bl,(%r8,%r12,2)
  c9:	8d 9f 03 81 1e 64    	lea    0x641e8103(%rdi),%ebx
  cf:	04 0b                	add    $0xb,%al
  d1:	33                   	.byte 0x33
  d2:	80                   	.byte 0x80
  d3:	04                   	.byte 0x4

Disassembly of section .gnu.lto_.refs.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.refs.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 20 05    	sub    %dh,0x520fd2f(%rbp)
   6:	29 00                	sub    %eax,(%rax)
   8:	00 01                	add    %al,(%rcx)
   a:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.lto_.decls.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.decls.7c70a44ae594ff4d>:
   0:	28 b5 2f fd 60 ba    	sub    %dh,-0x459f02d1(%rbp)
   6:	0f fd 4c 00 fa       	paddw  -0x6(%rax,%rax,1),%mm1
   b:	86 84 1d 51 30 90 ca 	xchg   %al,-0x356fcfaf(%rbp,%rbx,1)
  12:	49 07                	rex.WB (bad)
  14:	54                   	push   %rsp
  15:	32 35 2f 90 cc 36    	xor    0x36cc902f(%rip),%dh        # 36cc904a <utils.cpp.0ab61856+0x36cc904a>
  1b:	d4                   	(bad)
  1c:	2e 4f 8e 29          	cs rex.WRXB mov (%r9),%gs
  20:	c6                   	(bad)
  21:	f3 ba 01 6a e2 ab    	repz mov $0xabe26a01,%edx
  27:	ad                   	lods   %ds:(%rsi),%eax
  28:	f5                   	cmc
  29:	54                   	push   %rsp
  2a:	2b f6                	sub    %esi,%esi
  2c:	ab                   	stos   %eax,%es:(%rdi)
  2d:	5b                   	pop    %rbx
  2e:	c5 30 5b             	(bad)
  31:	bd 9c 69 fb 5a       	mov    $0x5afb699c,%ebp
  36:	e1 bb                	loope  fffffffffffffff3 <utils.cpp.0ab61856+0xfffffffffffffff3>
  38:	27                   	(bad)
  39:	77 99                	ja     ffffffffffffffd4 <utils.cpp.0ab61856+0xffffffffffffffd4>
  3b:	3f                   	(bad)
  3c:	73 e8                	jae    26 <.gnu.lto_.decls.7c70a44ae594ff4d+0x26>
  3e:	fd                   	std
  3f:	a1 3d 84 55 87 e9 89 	movabs 0x3a0e89e98755843d,%eax
  46:	0e 3a 
  48:	21 02                	and    %eax,(%rdx)
  4a:	62                   	(bad)
  4b:	58                   	pop    %rax
  4c:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
  4d:	88 bd 66 a9 9d 58    	mov    %bh,0x589da966(%rbp)
  53:	f0 a8 10             	lock test $0x10,%al
  56:	26 ed                	es in  (%dx),%eax
  58:	f3 17                	repz (bad)
  5a:	db 88 11 2b 65 0a    	fisttpl 0xa652b11(%rax)
  60:	78 01                	js     63 <.gnu.lto_.decls.7c70a44ae594ff4d+0x63>
  62:	c5 01 cc             	(bad)
  65:	01 dd                	add    %ebx,%ebp
  67:	43 8f                	rex.XB (bad)
  69:	a0 de a7 82 ee 9e ef 	movabs 0xb47fef9eee82a7de,%al
  70:	7f b4 
  72:	a3 94 dd 3d 64 d3 14 	movabs %eax,0xa4d14d3643ddd94
  79:	4d 0a 
  7b:	88 fe                	mov    %bh,%dh
  7d:	7b fe                	jnp    7d <.gnu.lto_.decls.7c70a44ae594ff4d+0x7d>
  7f:	e9 6c 6f 61 fc       	jmp    fffffffffc616ff0 <utils.cpp.0ab61856+0xfffffffffc616ff0>
  84:	3f                   	(bad)
  85:	7b 42                	jnp    c9 <.gnu.lto_.decls.7c70a44ae594ff4d+0xc9>
  87:	dd 49 3a             	fisttpll 0x3a(%rcx)
  8a:	9d                   	popf
  8b:	22 68 8a             	and    -0x76(%rax),%ch
  8e:	30 c3                	xor    %al,%bl
  90:	e7 51                	out    %eax,$0x51
  92:	74 77                	je     10b <.gnu.lto_.decls.7c70a44ae594ff4d+0x10b>
  94:	ff a7 5f bb 8d dd    	jmp    *-0x227244a1(%rdi)
  9a:	ad                   	lods   %ds:(%rsi),%eax
  9b:	c4                   	(bad)
  9c:	d1 ca                	ror    $1,%edx
  9e:	9e                   	sahf
  9f:	1e                   	(bad)
  a0:	7b a2                	jnp    44 <.gnu.lto_.decls.7c70a44ae594ff4d+0x44>
  a2:	e4 4e                	in     $0x4e,%al
  a4:	de d0                	(bad)
  a6:	c6                   	(bad)
  a7:	9f                   	lahf
  a8:	64 6b 29 6b          	imul   $0x6b,%fs:(%rcx),%ebp
  ac:	32 aa 37 99 76 9f    	xor    -0x608966c9(%rdx),%ch
  b2:	48 b5 7a             	rex.W mov $0x7a,%bpl
  b5:	b9 c7 1a ab f6       	mov    $0xf6ab1ac7,%ecx
  ba:	56                   	push   %rsi
  bb:	d7                   	xlat   %ds:(%rbx)
  bc:	b4 bb                	mov    $0xbb,%ah
  be:	57                   	push   %rdi
  bf:	16                   	(bad)
  c0:	d7                   	xlat   %ds:(%rbx)
  c1:	9d                   	popf
  c2:	b6 f1                	mov    $0xf1,%dh
  c4:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  c5:	d3 8e ea b4 e9 6a    	rorl   %cl,0x6ae9b4ea(%rsi)
  cb:	b7 11                	mov    $0x11,%bh
  cd:	80 3e 46             	cmpb   $0x46,(%rsi)
  d0:	b5 8d                	mov    $0x8d,%ch
  d2:	ae                   	scas   %es:(%rdi),%al
  d3:	66 8f 45 55          	popw   0x55(%rbp)
  d7:	b1 32                	mov    $0x32,%cl
  d9:	c9                   	leave
  da:	5c                   	pop    %rsp
  db:	02 53 a6             	add    -0x5a(%rbx),%dl
  de:	91                   	xchg   %eax,%ecx
  df:	95                   	xchg   %eax,%ebp
  e0:	6d                   	insl   (%dx),%es:(%rdi)
  e1:	2c 63                	sub    $0x63,%al
  e3:	44 a6                	rex.R cmpsb %es:(%rdi),%ds:(%rsi)
  e5:	58                   	pop    %rax
  e6:	4e 56                	rex.WRX push %rsi
  e8:	7d a4                	jge    8e <.gnu.lto_.decls.7c70a44ae594ff4d+0x8e>
  ea:	e5 bc                	in     $0xbc,%eax
  ec:	ae                   	scas   %es:(%rdi),%al
  ed:	98                   	cwtl
  ee:	28 1a                	sub    %bl,(%rdx)
  f0:	d9 7d 42             	fnstcw 0x42(%rbp)
  f3:	97                   	xchg   %eax,%edi
  f4:	55                   	push   %rbp
  f5:	b7 56                	mov    $0x56,%bh
  f7:	ab                   	stos   %eax,%es:(%rdi)
  f8:	40 b6 95             	mov    $0x95,%sil
  fb:	ad                   	lods   %ds:(%rsi),%eax
  fc:	19 72 dd             	sbb    %esi,-0x23(%rdx)
  ff:	bd a2 e3 98 dd       	mov    $0xdd98e3a2,%ebp
 104:	4b 8d 69 5c          	rex.WXB lea 0x5c(%r9),%rbp
 108:	77 4f                	ja     159 <.gnu.lto_.decls.7c70a44ae594ff4d+0x159>
 10a:	b7 94                	mov    $0x94,%bh
 10c:	56                   	push   %rsi
 10d:	37                   	(bad)
 10e:	b3 ea                	mov    $0xea,%bl
 110:	e7 0c                	out    %eax,$0xc
 112:	95                   	xchg   %eax,%ebp
 113:	b2 1b                	mov    $0x1b,%dl
 115:	99                   	cltd
 116:	f6 0f 32             	testb  $0x32,(%rdi)
 119:	c9                   	leave
 11a:	6c                   	insb   (%dx),%es:(%rdi)
 11b:	39 b9 36 ae 31 95    	cmp    %edi,-0x6ace51ca(%rcx)
 121:	33 c6                	xor    %esi,%eax
 123:	59                   	pop    %rcx
 124:	25 99 7d 6e 61       	and    $0x616e7d99,%eax
 129:	25 bb 4b 6a c5       	and    $0xc56a4bbb,%eax
 12e:	52                   	push   %rdx
 12f:	ee                   	out    %al,(%dx)
 130:	78 d5                	js     107 <.gnu.lto_.decls.7c70a44ae594ff4d+0x107>
 132:	48 e5 72             	rex.W in $0x72,%eax
 135:	db 98 1a 49 5a 1d    	fistpl 0x1d5a491a(%rax)
 13b:	b7 ba                	mov    $0xba,%bh
 13d:	8e 19                	mov    (%rcx),%ds
 13f:	d3 de                	rcr    %cl,%esi
 141:	e6 4e                	out    %al,$0x4e
 143:	9a                   	(bad)
 144:	24 54                	and    $0x54,%al
 146:	61                   	(bad)
 147:	7c ee                	jl     137 <.gnu.lto_.decls.7c70a44ae594ff4d+0x137>
 149:	08 ff                	or     %bh,%bh
 14b:	c6 f8 37             	xabort $0x37
 14e:	84 7f 41             	test   %bh,0x41(%rdi)
 151:	f8                   	clc
 152:	8f                   	(bad)
 153:	a2 6c 8f fe 15 b2 7b 	movabs %al,0xbfcf7bb215fe8f6c
 15a:	cf bf 
 15c:	77 6c                	ja     1ca <.gnu.lto_.decls.7c70a44ae594ff4d+0x1ca>
 15e:	27                   	(bad)
 15f:	f3 1f                	repz (bad)
 161:	f8                   	clc
 162:	2f                   	(bad)
 163:	d9 bf 19 fc 5b f4    	fnstcw -0xba403e7(%rdi)
 169:	6f                   	outsl  %ds:(%rsi),(%dx)
 16a:	8e 7f 2f             	mov    0x2f(%rdi),%?
 16d:	f8                   	clc
 16e:	df 66 6f             	fbld   0x6f(%rsi)
 171:	fc                   	cld
 172:	5b                   	pop    %rbx
 173:	c1 bf 14 fc 3b c1 7f 	sarl   $0x7f,-0x3ec403ec(%rdi)
 17a:	33 ff                	xor    %edi,%edi
 17c:	db 56 82             	fistl  -0x7e(%rsi)
 17f:	ff 60 36             	jmp    *0x36(%rax)
 182:	82                   	(bad)
 183:	ff 6c fe b3          	ljmp   *-0x4d(%rsi,%rdi,8)
 187:	fd                   	std
 188:	6f                   	outsl  %ds:(%rsi),(%dx)
 189:	fa                   	cli
 18a:	af                   	scas   %es:(%rdi),%eax
 18b:	c0 ff 12             	sar    $0x12,%bh
 18e:	fe                   	(bad)
 18f:	93                   	xchg   %eax,%ebx
 190:	f0 1f                	lock (bad)
 192:	84 85 e0 5f 1b ff    	test   %al,-0xe4a020(%rbp)
 198:	3e f0 7f cc          	lock jg,pt 168 <.gnu.lto_.decls.7c70a44ae594ff4d+0x168>
 19c:	ff                   	(bad)
 19d:	bb 34 ff 0f f8       	mov    $0xf80fff34,%ebx
 1a2:	19 80 ff 66 ff cb    	sbb    %eax,-0x34009901(%rax)
 1a8:	fe                   	(bad)
 1a9:	9f                   	lahf
 1aa:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 1ab:	fd                   	std
 1ac:	db c3                	fcmovnb %st(3),%st
 1ae:	bf 43 ff be f8       	mov    $0xf8beff43,%edi
 1b3:	d7                   	xlat   %ds:(%rbx)
 1b4:	c5 bf 2d             	(bad)
 1b7:	fe                   	(bad)
 1b8:	35 e0 df 15 ff       	xor    $0xff15dfe0,%eax
 1bd:	0a f0                	or     %al,%dh
 1bf:	2f                   	(bad)
 1c0:	8a 7f 77             	mov    0x77(%rdi),%bh
 1c3:	fe                   	(bad)
 1c4:	ad                   	lods   %ds:(%rsi),%eax
 1c5:	ff                   	lcall  (bad)
 1c6:	dd fc                	(bad)
 1c8:	3f                   	(bad)
 1c9:	f3 5f                	repz pop %rdi
 1cb:	ed                   	in     (%dx),%eax
 1cc:	bf ce 7f b8 ff       	mov    $0xffb87fce,%edi
 1d1:	be bc bc bc bc       	mov    $0xbcbcbcbc,%esi
 1d6:	7f 7b                	jg     253 <.gnu.lto_.decls.7c70a44ae594ff4d+0x253>
 1d8:	fc                   	cld
 1d9:	3d a1 1f b8 13       	cmp    $0x13b81fa1,%eax
 1de:	5e                   	pop    %rsi
 1df:	79 78                	jns    259 <.gnu.lto_.decls.7c70a44ae594ff4d+0x259>
 1e1:	3f                   	(bad)
 1e2:	ac                   	lods   %ds:(%rsi),%al
 1e3:	ed                   	in     (%dx),%eax
 1e4:	b0 5c                	mov    $0x5c,%al
 1e6:	e2 db                	loop   1c3 <.gnu.lto_.decls.7c70a44ae594ff4d+0x1c3>
 1e8:	06                   	(bad)
 1e9:	4f                   	rex.WRXB
 1ea:	45 b3 c8             	rex.RB mov $0xc8,%r11b
 1ed:	29 f2                	sub    %esi,%edx
 1ef:	05 86 24 f8 5c       	add    $0x5cf82486,%eax
 1f4:	36 8b b7 93 c5 d8 36 	ss mov 0x36d8c593(%rdi),%esi
 1fb:	85 77 87             	test   %esi,-0x79(%rdi)
 1fe:	42 07                	rex.X (bad)
 200:	0e                   	(bad)
 201:	dd 12                	fstl   (%rdx)
 203:	2e 36 1e             	cs ss (bad)
 206:	1e                   	(bad)
 207:	2e 34 d0             	cs xor $0xd0,%al
 20a:	ed                   	in     (%dx),%eax
 20b:	1a 1e                	sbb    (%rsi),%bl
 20d:	1e                   	(bad)
 20e:	9c                   	pushf
 20f:	80 cd f1             	or     $0xf1,%ch
 212:	b9 4a 6c dd ff       	mov    $0xffdd6c4a,%ecx
 217:	b6 76                	mov    $0x76,%dh
 219:	3d aa af b0 ac       	cmp    $0xacb0afaa,%eax
 21e:	b6 fa                	mov    $0xfa,%dh
 220:	42 ff 0d dd 26 b0 a9 	rex.X decl -0x564fd923(%rip)        # ffffffffa9b02904 <utils.cpp.0ab61856+0xffffffffa9b02904>
 227:	95                   	xchg   %eax,%ebp
 228:	6c                   	insb   (%dx),%es:(%rdi)
 229:	c2 e7 aa             	ret    $0xaae7
 22c:	e9 b1 51 a9 6b       	jmp    6ba953e2 <utils.cpp.0ab61856+0x6ba953e2>
 231:	e3 73                	jrcxz  2a6 <.gnu.lto_.decls.7c70a44ae594ff4d+0x2a6>
 233:	93                   	xchg   %eax,%ebx
 234:	60                   	(bad)
 235:	11 43 90             	adc    %eax,-0x70(%rbx)
 238:	22 7c fe 6e          	and    0x6e(%rsi,%rdi,8),%bh
 23c:	91                   	xchg   %eax,%ecx
 23d:	40 e3 b0             	rex jrcxz 1f0 <.gnu.lto_.decls.7c70a44ae594ff4d+0x1f0>
 240:	69 23 c6 e7 ca ad    	imul   $0xadcae7c6,(%rbx),%esp
 246:	11 ff                	adc    %edi,%edi
 248:	da ce                	fcmove %st(6),%st
 24a:	7d 8f                	jge    1db <.gnu.lto_.decls.7c70a44ae594ff4d+0x1db>
 24c:	d8 34 cf             	fdivs  (%rdi,%rcx,8)
 24f:	39 a6 3d c6 39 c0    	cmp    %esp,-0x3fc639c3(%rsi)
 255:	80 84 cf 9f 4d 81 9e 	addb   $0xeb,-0x617eb261(%rdi,%rcx,8)
 25c:	eb 
 25d:	83 9e bf 54 16 7e fb 	sbbl   $0xfffffffb,0x7e1654bf(%rsi)
 264:	35 f4 5c 56 cf       	xor    $0xcf565cf4,%eax
 269:	4d 2a ca             	rex.WRB sub %r10b,%r9b
 26c:	24 8c                	and    $0x8c,%al
 26e:	98                   	cwtl
 26f:	3d 53 d3 16 a2       	cmp    $0xa216d353,%eax
 274:	73 25                	jae    29b <.gnu.lto_.decls.7c70a44ae594ff4d+0x29b>
 276:	65 09 13             	or     %edx,%gs:(%rbx)
 279:	af                   	scas   %es:(%rdi),%eax
 27a:	95                   	xchg   %eax,%ebp
 27b:	cb                   	lret
 27c:	05 80 8e 56 be       	add    $0xbe568e80,%eax
 281:	f0 d7                	lock xlat %ds:(%rbx)
 283:	99                   	cltd
 284:	15 ba b7 af 99       	adc    $0x99afb7ba,%eax
 289:	32 26                	xor    (%rsi),%ah
 28b:	d4                   	(bad)
 28c:	c8 aa 0c c1          	enter  $0xcaa,$0xc1
 290:	e7 c2                	out    %eax,$0xc2
 292:	6d                   	insl   (%dx),%es:(%rdi)
 293:	dc ef                	fsubr  %st,%st(7)
 295:	b6 64                	mov    $0x64,%dh
 297:	8e 2a                	mov    (%rdx),%gs
 299:	97                   	xchg   %eax,%edi
 29a:	29 0f                	sub    %ecx,(%rdi)
 29c:	f0 09 d2             	lock or %edx,%edx
 29f:	ab                   	stos   %eax,%es:(%rdi)
 2a0:	8d 55 fd             	lea    -0x3(%rbp),%edx
 2a3:	0b 7b 37             	or     0x37(%rbx),%edi
 2a6:	f4                   	hlt
 2a7:	77 eb                	ja     294 <.gnu.lto_.decls.7c70a44ae594ff4d+0x294>
 2a9:	66 22 2b             	data16 and (%rbx),%ch
 2ac:	ab                   	stos   %eax,%es:(%rdi)
 2ad:	ae                   	scas   %es:(%rdi),%al
 2ae:	ca ad 6d             	lret   $0x6dad
 2b1:	c7                   	(bad)
 2b2:	0b 16                	or     (%rsi),%edx
 2b4:	53                   	push   %rbx
 2b5:	4d db 18             	rex.WRB fistpl (%r8)
 2b8:	14 26                	adc    $0x26,%al
 2ba:	7a 80                	jp     23c <.gnu.lto_.decls.7c70a44ae594ff4d+0x23c>
 2bc:	23 c3                	and    %ebx,%eax
 2be:	1a b6 13 70 50 ac    	sbb    -0x53af8fed(%rsi),%dh
 2c4:	18 59 bf             	sbb    %bl,-0x41(%rcx)
 2c7:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c8:	ea                   	(bad)
 2c9:	57                   	push   %rdi
 2ca:	4c ad                	rex.WR lods %ds:(%rsi),%rax
 2cc:	5b                   	pop    %rbx
 2cd:	c2 05 5b             	ret    $0x5b05
 2d0:	2a df                	sub    %bh,%bl
 2d2:	b0 2b                	mov    $0x2b,%al
 2d4:	8b 65 d5             	mov    -0x2b(%rbp),%esp
 2d7:	56                   	push   %rsi
 2d8:	d9 8d b6 6c 81 8b    	(bad) -0x747e934a(%rbp)
 2de:	d9 ec                	fldlg2
 2e0:	e5 72                	in     $0x72,%eax
 2e2:	01 1d ac 37 b1 b7    	add    %ebx,-0x484ec854(%rip)        # ffffffffb7b13a94 <utils.cpp.0ab61856+0xffffffffb7b13a94>
 2e8:	21 be 6a 7f 50 8d    	and    %edi,-0x72af8096(%rsi)
 2ee:	f5                   	cmc
 2ef:	a2 a2 9b c5 af 0d 0c 	movabs %al,0x4d530c0dafc59ba2
 2f6:	53 4d 
 2f8:	3e d7                	xlat   %ds:(%rbx)
 2fa:	cb                   	lret
 2fb:	e9 85 17 cc 7e       	jmp    7ecc1a85 <utils.cpp.0ab61856+0x7ecc1a85>
 300:	f9                   	stc
 301:	7a d9                	jp     2dc <.gnu.lto_.decls.7c70a44ae594ff4d+0x2dc>
 303:	34 e0                	xor    $0xe0,%al
 305:	31 dd                	xor    %ebx,%ebp
 307:	a9 75 4c 94 63       	test   $0x63944c75,%eax
 30c:	d0 f3                	shl    $1,%bl
 30e:	fb                   	sti
 30f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 310:	fe                   	(bad)
 311:	ee                   	out    %al,(%dx)
 312:	39 2d d2 94 e1 e2    	cmp    %ebp,-0x1d1e6b2e(%rip)        # ffffffffe2e197ea <utils.cpp.0ab61856+0xffffffffe2e197ea>
 318:	f3 5f                	repz pop %rdi
 31a:	b4 7f                	mov    $0x7f,%ah
 31c:	b3 ac                	mov    $0xac,%bl
 31e:	96                   	xchg   %eax,%esi
 31f:	3d eb 25 ab b4       	cmp    $0xb4ab25eb,%eax
 324:	5a                   	pop    %rdx
 325:	4b 77 ea             	rex.WXB ja 312 <.gnu.lto_.decls.7c70a44ae594ff4d+0x312>
 328:	b3 a3                	mov    $0xa3,%bl
 32a:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 32b:	0d 98 a8 2d e9       	or     $0xe92da898,%eax
 330:	97                   	xchg   %eax,%edi
 331:	4e 0e                	rex.WRX (bad)
 333:	78 52                	js     387 <.gnu.lto_.decls.7c70a44ae594ff4d+0x387>
 335:	ae                   	scas   %es:(%rdi),%al
 336:	f0 b9 65 db e5 6b    	lock mov $0x6be5db65,%ecx
 33c:	b6 5c                	mov    $0x5c,%dh
 33e:	1e                   	(bad)
 33f:	54                   	push   %rsp
 340:	e3 3d                	jrcxz  37f <.gnu.lto_.decls.7c70a44ae594ff4d+0x37f>
 342:	a3 58 7f 99 f1 bc e9 	movabs %eax,0x5a8ee9bcf1997f58
 349:	8e 5a 
 34b:	33 21                	xor    (%rcx),%esp
 34d:	ad                   	lods   %ds:(%rsi),%eax
 34e:	ee                   	out    %al,(%dx)
 34f:	a8 2f                	test   $0x2f,%al
 351:	d9 96 35 e3 d9 6d    	fsts   0x6dd9e335(%rsi)
 357:	b1 db                	mov    $0xdb,%cl
 359:	42 c6                	rex.X (bad)
 35b:	0b 33                	or     (%rbx),%esi
 35d:	55                   	push   %rbp
 35e:	6d                   	insl   (%dx),%es:(%rdi)
 35f:	f5                   	cmc
 360:	fc                   	cld
 361:	9e                   	sahf
 362:	d5 6f 59             	popp   %r9
 365:	7d ba                	jge    321 <.gnu.lto_.decls.7c70a44ae594ff4d+0x321>
 367:	29 d0                	sub    %edx,%eax
 369:	ba 3e e8 77 ac       	mov    $0xac77e83e,%edx
 36e:	32 60 65             	xor    0x65(%rax),%ah
 371:	c7                   	(bad)
 372:	de fc                	fdivrp %st,%st(4)
 374:	4f 77 13             	rex.WRXB ja 38a <.gnu.lto_.decls.7c70a44ae594ff4d+0x38a>
 377:	ed                   	in     (%dx),%eax
 378:	c4                   	(bad)
 379:	9a                   	(bad)
 37a:	9d                   	popf
 37b:	1a 15 9f df b4 1a    	sbb    0x1ab4df9f(%rip),%dl        # 1ab4e320 <utils.cpp.0ab61856+0x1ab4e320>
 381:	20 7c 95 15          	and    %bh,0x15(%rbp,%rdx,4)
 385:	7b 93                	jnp    31a <.gnu.lto_.decls.7c70a44ae594ff4d+0x31a>
 387:	bb fb 06 17 53       	mov    $0x531706fb,%ebx
 38c:	61                   	(bad)
 38d:	84 14 81             	test   %dl,(%rcx,%rax,4)
 390:	d7                   	xlat   %ds:(%rbx)
 391:	9d                   	popf
 392:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 393:	f1                   	int1
 394:	0b 22                	or     (%rdx),%esp
 396:	0b 87 23 9f 6f aa    	or     -0x559060dd(%rdi),%eax
 39c:	40 e1 37             	rex loope 3d6 <.gnu.lto_.decls.7c70a44ae594ff4d+0x3d6>
 39f:	7d 0a                	jge    3ab <.gnu.lto_.decls.7c70a44ae594ff4d+0x3ab>
 3a1:	65 02 fb             	gs add %bl,%bh
 3a4:	02 e5                	add    %ch,%ah
 3a6:	79 81                	jns    329 <.gnu.lto_.decls.7c70a44ae594ff4d+0x329>
 3a8:	fe                   	(bad)
 3a9:	2c b6                	sub    $0xb6,%al
 3ab:	6e                   	outsb  %ds:(%rsi),(%dx)
 3ac:	a2 ca 04 a1 81 ab 70 	movabs %al,0x251a70ab81a104ca
 3b3:	1a 25 
 3b5:	0e                   	(bad)
 3b6:	5c                   	pop    %rsp
 3b7:	ca 61 62             	lret   $0x6261
 3ba:	5d                   	pop    %rbp
 3bb:	68 9a 49 ea cf       	push   $0xffffffffcfea499a
 3c0:	54                   	push   %rsp
 3c1:	f0 2a 59 1c          	lock sub 0x1c(%rcx),%bl
 3c5:	34 2e                	xor    $0x2e,%al
 3c7:	30 24 4e             	xor    %ah,(%rsi,%rcx,2)
 3ca:	b1 37                	mov    $0x37,%cl
 3cc:	53                   	push   %rbx
 3cd:	98                   	cwtl
 3ce:	7c 9d                	jl     36d <.gnu.lto_.decls.7c70a44ae594ff4d+0x36d>
 3d0:	d9 28                	fldcw  (%rax)
 3d2:	69 a4 a8 a6 ac 1a 90 	imul   $0x98661a0c,-0x6fe5535a(%rax,%rbp,4),%esp
 3d9:	0c 1a 66 98 
 3dd:	94                   	xchg   %eax,%esp
 3de:	bf f9 90 cc 19       	mov    $0x19cc90f9,%edi
 3e3:	11 42 08             	adc    %eax,0x8(%rdx)
 3e6:	b3 2a                	mov    $0x2a,%bl
 3e8:	6b ee 8e             	imul   $0xffffff8e,%esi,%ebp
 3eb:	5e                   	pop    %rsi
 3ec:	8f                   	(bad)
 3ed:	4b ab                	rex.WXB stos %rax,%es:(%rdi)
 3ef:	4b 23 e3             	rex.WXB and %r11,%rsp
 3f2:	b3 37                	mov    $0x37,%bl
 3f4:	25 64 ae e5 28       	and    $0x28e5ae64,%eax
 3f9:	57                   	push   %rdi
 3fa:	b8 8b 81 d8 16       	mov    $0x16d8818b,%eax
 3ff:	dd 5a ec             	fstpl  -0x14(%rdx)
 402:	d0 5a 89             	rcrb   $1,-0x77(%rdx)
 405:	05 46 1a 63 49       	add    $0x49631a46,%eax
 40a:	97                   	xchg   %eax,%edi
 40b:	31 fe                	xor    %edi,%esi
 40d:	e1 c4                	loope  3d3 <.gnu.lto_.decls.7c70a44ae594ff4d+0x3d3>
 40f:	1a 30                	sbb    (%rax),%dh
 411:	37                   	(bad)
 412:	2b 3e                	sub    (%rsi),%edi
 414:	8f                   	(bad)
 415:	1e                   	(bad)
 416:	a9 47 a5 ea 99       	test   $0x99eaa547,%eax
 41b:	c9                   	leave
 41c:	5c                   	pop    %rsp
 41d:	3b e4                	cmp    %esp,%esp
 41f:	cc                   	int3
 420:	ab                   	stos   %eax,%es:(%rdi)
 421:	1b b9 31 e8 b8 51    	sbb    0x51b8e831(%rcx),%edi
 427:	79 42                	jns    46b <.gnu.lto_.decls.7c70a44ae594ff4d+0x46b>
 429:	84 0b                	test   %cl,(%rbx)
 42b:	0a 3a                	or     (%rdx),%bh
 42d:	c4                   	(bad)
 42e:	8d 90 2c 7c 32 94    	lea    -0x6bcd83d4(%rax),%edx
 434:	8a f4                	mov    %ah,%dh
 436:	e5 bd                	in     $0xbd,%eax
 438:	58                   	pop    %rax
 439:	b8 2d 2a 33 9c       	mov    $0x9c332a2d,%eax
 43e:	d5 b5 37             	{rex2 0xb5} getsec
 441:	49 34 9f             	rex.WB xor $0x9f,%al
 444:	e7 27                	out    %eax,$0x27
 446:	3f                   	(bad)
 447:	3b e1                	cmp    %ecx,%esp
 449:	1e                   	(bad)
 44a:	d6                   	(bad)
 44b:	cc                   	int3
 44c:	84 64 ab 90          	test   %ah,-0x70(%rbx,%rbp,4)
 450:	00 4e 0a             	add    %cl,0xa(%rsi)
 453:	12 3e                	adc    (%rsi),%bh
 455:	55                   	push   %rbp
 456:	6c                   	insb   (%dx),%es:(%rdi)
 457:	0a b4 b7 3e 28 37 01 	or     0x137283e(%rdi,%rsi,4),%dh
 45e:	3a f3                	cmp    %bl,%dh
 460:	70 9f                	jo     401 <.gnu.lto_.decls.7c70a44ae594ff4d+0x401>
 462:	1f                   	(bad)
 463:	5b                   	pop    %rbx
 464:	95                   	xchg   %eax,%ebp
 465:	38 41 f8             	cmp    %al,-0x8(%rcx)
 468:	e4 f5                	in     $0xf5,%al
 46a:	41 7b 44             	rex.B jnp 4b1 <.gnu.lto_.decls.7c70a44ae594ff4d+0x4b1>
 46d:	74 d8                	je     447 <.gnu.lto_.decls.7c70a44ae594ff4d+0x447>
 46f:	81 af 72 3a f8 45 24 	subl   $0x59abce24,0x45f83a72(%rdi)
 476:	ce ab 59 
 479:	ef                   	out    %eax,(%dx)
 47a:	db 52 4f             	fistl  0x4f(%rdx)
 47d:	35 21 8c 65 25       	xor    $0x25658c21,%eax
 482:	4b 9a                	rex.WXB (bad)
 484:	88 d5                	mov    %dl,%ch
 486:	fb                   	sti
 487:	94                   	xchg   %eax,%esp
 488:	d4                   	(bad)
 489:	73 8c                	jae    417 <.gnu.lto_.decls.7c70a44ae594ff4d+0x417>
 48b:	90                   	nop
 48c:	91                   	xchg   %eax,%ecx
 48d:	2c e3                	sub    $0xe3,%al
 48f:	b0 e5                	mov    $0xe5,%al
 491:	c4 87 a4 de          	(bad)
 495:	77 ac                	ja     443 <.gnu.lto_.decls.7c70a44ae594ff4d+0x443>
 497:	1c 27                	sbb    $0x27,%al
 499:	64 1b 96 b3 8e f0 d5 	sbb    %fs:-0x2a0f714d(%rsi),%edx
 4a0:	57                   	push   %rdi
 4a1:	d9 c7                	fld    %st(7)
 4a3:	27                   	(bad)
 4a4:	79 f5                	jns    49b <.gnu.lto_.decls.7c70a44ae594ff4d+0x49b>
 4a6:	e7 99                	out    %eax,$0x99
 4a8:	7a a2                	jp     44c <.gnu.lto_.decls.7c70a44ae594ff4d+0x44c>
 4aa:	11 72 91             	adc    %esi,-0x6f(%rdx)
 4ad:	65 23 35 30 df ea 4f 	and    %gs:0x4feadf30(%rip),%esi        # 4feae3e4 <utils.cpp.0ab61856+0x4feae3e4>
 4b4:	b1 5a                	mov    $0x5a,%cl
 4b6:	e7 84                	out    %eax,$0x84
 4b8:	2c c3                	sub    $0xc3,%al
 4ba:	32 0d 44 7c 00 ab    	xor    -0x54ff83bc(%rip),%cl        # ffffffffab008104 <utils.cpp.0ab61856+0xffffffffab008104>
 4c0:	3f                   	(bad)
 4c1:	b7 6a                	mov    $0x6a,%bh
 4c3:	8f                   	(bad)
 4c4:	1a 21                	sbb    (%rcx),%ah
 4c6:	0b 59 c6             	or     -0x3a(%rcx),%ebx
 4c9:	1a c2                	sbb    %dl,%al
 4cb:	57                   	push   %rdi
 4cc:	63 5d cc             	movsxd -0x34(%rbp),%ebx
 4cf:	9f                   	lahf
 4d0:	35 d4 f7 de d4       	xor    $0xd4def7d4,%eax
 4d5:	9f                   	lahf
 4d6:	d3 4e c8             	rorl   %cl,-0x38(%rsi)
 4d9:	41 96                	xchg   %eax,%r14d
 4db:	63 f8                	movsxd %eax,%edi
 4dd:	5e                   	pop    %rsi
 4de:	e1 2a                	loope  50a <.gnu.lto_.decls.7c70a44ae594ff4d+0x50a>
 4e0:	be 3a d3 c6 5a       	mov    $0x5ac6d33a,%esi
 4e5:	39 20                	cmp    %esp,(%rax)
 4e7:	a8 74                	test   $0x74,%al
 4e9:	e1 b5                	loope  4a0 <.gnu.lto_.decls.7c70a44ae594ff4d+0x4a0>
 4eb:	12 09                	adc    (%rcx),%cl
 4ed:	83 ad d2 31 a0 54 57 	subl   $0x57,0x54a031d2(%rbp)
 4f4:	9a                   	(bad)
 4f5:	1b 99 fa de 98 fa    	sbb    -0x5672106(%rcx),%ebx
 4fb:	5e                   	pop    %rsi
 4fc:	d8 d7                	fcom   %st(7)
 4fe:	50                   	push   %rax
 4ff:	b4 0c                	mov    $0xc,%ah
 501:	4e 1c 4e             	rex.WRX sbb $0x4e,%al
 504:	ee                   	out    %al,(%dx)
 505:	b2 47                	mov    $0x47,%dl
 507:	c4                   	(bad)
 508:	12 a6 97 8f 87 24    	adc    0x24878f97(%rsi),%ah
 50e:	46 2c be             	rex.RX sub $0xbe,%al
 511:	24 de                	and    $0xde,%al
 513:	94                   	xchg   %eax,%esp
 514:	25 23 cf 54 48       	and    $0x4854cf23,%eax
 519:	ec                   	in     (%dx),%al
 51a:	84 59 a2             	test   %bl,-0x5e(%rcx)
 51d:	64 0d 9f 3c b5 78    	fs or  $0x78b53c9f,%eax
 523:	27                   	(bad)
 524:	d5 11 53             	push   %r27
 527:	74 7c                	je     5a5 <.gnu.lto_.decls.7c70a44ae594ff4d+0x5a5>
 529:	f2 71 db             	bnd jno 507 <.gnu.lto_.decls.7c70a44ae594ff4d+0x507>
 52c:	d8 aa 4b 95 2a 96    	fsubrs -0x69d56ab5(%rdx)
 532:	42 d9 c0             	rex.X fld %st(0)
 535:	4d 91                	rex.WRB xchg %rax,%r9
 537:	b1 14                	mov    $0x14,%cl
 539:	47 fd                	rex.RXB std
 53b:	be c0 a6 a4 7c       	mov    $0x7ca4a6c0,%esi
 540:	72 d4                	jb     516 <.gnu.lto_.decls.7c70a44ae594ff4d+0x516>
 542:	e6 b1                	out    %al,$0xb1
 544:	b1 93                	mov    $0x93,%cl
 546:	04 6c                	add    $0x6c,%al
 548:	5e                   	pop    %rsi
 549:	9c                   	pushf
 54a:	51                   	push   %rcx
 54b:	8b fb                	mov    %ebx,%edi
 54d:	cf                   	iret
 54e:	39 81 a6 a4 19 85    	cmp    %eax,-0x7ae65b5a(%rcx)
 554:	cf                   	iret
 555:	f7 9e d4 f7 b4 ea    	negl   -0x154b082c(%rsi)
 55b:	7b 45                	jnp    5a2 <.gnu.lto_.decls.7c70a44ae594ff4d+0x5a2>
 55d:	ea                   	(bad)
 55e:	f9                   	stc
 55f:	4c 3d e3 10 51 c4    	rex.WR cmp $0xffffffffc45110e3,%rax
 565:	ba a9 dd 54 66       	mov    $0x6654dda9,%edx
 56a:	6c                   	insb   (%dx),%es:(%rdi)
 56b:	4c 60                	rex.WR (bad)
 56d:	5d                   	pop    %rbp
 56e:	5d                   	pop    %rbp
 56f:	c5 61 10             	(bad)
 572:	0d a8 7a 06 2f       	or     $0x2f067aa8,%eax
 577:	30 f2                	xor    %dh,%dl
 579:	80 e8 26             	sub    $0x26,%al
 57c:	74 7a                	je     5f8 <.gnu.lto_.decls.7c70a44ae594ff4d+0x5f8>
 57e:	3b c1                	cmp    %ecx,%eax
 580:	1d 41 1e 22 58       	sbb    $0x58221e41,%eax
 585:	30 0c 62             	xor    %cl,(%rdx,%riz,2)
 588:	40 74 83             	rex je 50e <.gnu.lto_.decls.7c70a44ae594ff4d+0x50e>
 58b:	68 08 64 24 04       	push   $0x4246408
 590:	e4 e2                	in     $0xe2,%al
 592:	17                   	(bad)
 593:	c4                   	(bad)
 594:	71 e3                	jno    579 <.gnu.lto_.decls.7c70a44ae594ff4d+0x579>
 596:	88 03                	mov    %al,(%rbx)
 598:	0f 82 c2 33 a8 23    	jb     23a83960 <utils.cpp.0ab61856+0x23a83960>
 59e:	47 d1 8e 33 b8 e3 03 	rex.RXB rorl $1,0x3e3b833(%r14)
 5a5:	a3 23 5f 30 48 74 e3 	movabs %eax,0xce8e37448305f23
 5ac:	e8 0c 
 5ae:	f2 b8 20 68 24 b4    	repnz mov $0xb4246820,%eax
 5b4:	e2 17                	loop   5cd <.gnu.lto_.decls.7c70a44ae594ff4d+0x5cd>
 5b6:	34 ba                	xor    $0xba,%al
 5b8:	51                   	push   %rcx
 5b9:	44 14 3c             	rex.R adc $0x3c,%al
 5bc:	da f1                	(bad)
 5be:	00 0b                	add    %cl,(%rbx)
 5c0:	01 8a 4d c4 9e 2f    	add    %ecx,0x2f9ec44d(%rdx)
 5c6:	68 64 74 63 83       	push   $0xffffffff83637464
 5cb:	1d 35 8c 0a f8       	sbb    $0xf80a8c35,%eax
 5d0:	21 26                	and    %esp,(%rsi)
 5d2:	21 0d 57 78 6a e1    	and    %ecx,-0x1e9587a9(%rip)        # ffffffffe16a7e2f <utils.cpp.0ab61856+0xffffffffe16a7e2f>
 5d8:	a9 47 a7 a6 80       	test   $0x80a6a747,%eax
 5dd:	54                   	push   %rsp
 5de:	1c 16                	sbb    $0x16,%al
 5e0:	9f                   	lahf
 5e1:	88 4c 43 a4          	mov    %cl,-0x5c(%rbx,%rax,2)
 5e5:	15 86 43 1a 40       	adc    $0x401a4386,%eax
 5ea:	47                   	rex.RXB
 5eb:	4a 1a 1c 29          	rex.WX sbb (%rcx,%r13,1),%bl
 5ef:	1d 05 51 28 36       	sbb    $0x36285105,%eax
 5f4:	11 81 38 3d ad 60    	adc    %eax,0x60ad3d38(%rcx)
 5fa:	23 a8 38 14 1a 2a    	and    0x2a1a1438(%rax),%ebp
 600:	0e                   	(bad)
 601:	83 68 14 9b          	subl   $0xffffff9b,0x14(%rax)
 605:	88 3f                	mov    %bh,(%rdi)
 607:	94                   	xchg   %eax,%esp
 608:	48 24 12             	rex.W and $0x12,%al
 60b:	99                   	cltd
 60c:	94                   	xchg   %eax,%esp
 60d:	8e 82 40 96 92 7c    	mov    0x7c929640(%rdx),%es
 613:	40 35 0d 3d 45 71    	rex xor $0x71453d0d,%eax
 619:	b8 e4 02 f1 09       	mov    $0x9f102e4,%eax
 61e:	2d 0e d1 1c 25       	sub    $0x251cd10e,%eax
 623:	0d 8e 8e 82 c4       	or     $0xc4828e8e,%eax
 628:	1f                   	(bad)
 629:	45 a4                	rex.RB movsb %ds:(%rsi),%es:(%rdi)
 62b:	a1 13 51 85 27 08 5a 	movabs 0xfd305a0827855113,%eax
 632:	30 fd 
 634:	f8                   	clc
 635:	91                   	xchg   %eax,%ecx
 636:	74 02                	je     63a <.gnu.lto_.decls.7c70a44ae594ff4d+0x63a>
 638:	41 ea                	rex.B (bad)
 63a:	a1 74 2a 6d 4d 22 1a 	movabs 0xeef51a224d6d2a74,%eax
 641:	f5 ee 
 643:	e4 d4                	in     $0xd4,%al
 645:	23 46 12             	and    0x12(%rsi),%eax
 648:	91                   	xchg   %eax,%ecx
 649:	09 85 a5 13 4e 80    	or     %eax,-0x7fb1ec5b(%rbp)
 64f:	62 52 6a 22 0e       	(bad)
 654:	f0 a5                	lock movsl %ds:(%rsi),%es:(%rdi)
 656:	26 a2 0f a2 91 03 32 	es movabs %al,0xfc7c96320391a20f
 65d:	96 7c fc 
 660:	e8 21 23 86 89       	call   ffffffff89862986 <utils.cpp.0ab61856+0xffffffff89862986>
 665:	0f d5 b0 01 34 94 84 	pmullw -0x7b6bcbff(%rax),%mm6
 66c:	34 23                	xor    $0x23,%al
 66e:	86 cf                	xchg   %cl,%bh
 670:	87 82 1a 68 80 e8    	xchg   %eax,-0x177f97e6(%rdx)
 676:	e7 03                	out    %eax,$0x3
 678:	1d 39 4c 38 39       	sbb    $0x39384c39,%eax
 67d:	29 c5                	sub    %eax,%ebp
 67f:	78 62                	js     6e3 <.gnu.lto_.decls.7c70a44ae594ff4d+0x6e3>
 681:	22 16                	and    (%rsi),%dl
 683:	a1 64 24 11 99 64 2c 	movabs 0x1292c6499112464,%eax
 68a:	29 01 
 68c:	81 fa f1 14 c0 90    	cmp    $0x90c014f1,%edx
 692:	87 06                	xchg   %eax,(%rsi)
 694:	1e                   	(bad)
 695:	20 e1                	and    %ah,%cl
 697:	08 06                	or     %al,(%rsi)
 699:	95                   	xchg   %eax,%ebp
 69a:	8a 78 14             	mov    0x14(%rax),%bh
 69d:	e5 28                	in     $0x28,%eax
 69f:	c2 31 dc             	ret    $0xdc31
 6a2:	51                   	push   %rcx
 6a3:	64 23 89 68 44 83 28 	and    %fs:0x28834468(%rcx),%ecx
 6aa:	a8 c3                	test   $0xc3,%al
 6ac:	07                   	(bad)
 6ad:	54                   	push   %rsp
 6ae:	b1 09                	mov    $0x9,%cl
 6b0:	09 aa 83 19 40 3a    	or     %ebp,0x3a401983(%rdx)
 6b6:	84 c3                	test   %al,%bl
 6b8:	04 ae                	add    $0xae,%al
 6ba:	44 04 b2             	rex.R add $0xb2,%al
 6bd:	d4                   	(bad)
 6be:	b4 94                	mov    $0x94,%ah
 6c0:	42 bd d0 90 03 43    	rex.X mov $0x430390d0,%ebp
 6c6:	36 58                	ss pop %rax
 6c8:	f8                   	clc
 6c9:	fd                   	std
 6ca:	6c                   	insb   (%dx),%es:(%rdi)
 6cb:	67 09 2e             	or     %ebp,(%esi)
 6ce:	56                   	push   %rsi
 6cf:	9a                   	(bad)
 6d0:	f0 79 1e             	lock jns 6f1 <.gnu.lto_.decls.7c70a44ae594ff4d+0x6f1>
 6d3:	f3 73 13             	repz jae 6e9 <.gnu.lto_.decls.7c70a44ae594ff4d+0x6e9>
 6d6:	66 4b c9             	data16 rex.WXB leave
 6d9:	c4                   	(bad)
 6da:	90                   	nop
 6db:	79 e3                	jns    6c0 <.gnu.lto_.decls.7c70a44ae594ff4d+0x6c0>
 6dd:	b3 07                	mov    $0x7,%bl
 6df:	e8 2c 26 67 88       	call   ffffffff88672d10 <utils.cpp.0ab61856+0xffffffff88672d10>
 6e4:	0c 68                	or     $0x68,%al
 6e6:	92                   	xchg   %eax,%edx
 6e7:	84 e1                	test   %ah,%cl
 6e9:	35 37 30 3b 32       	xor    $0x323b3037,%eax
 6ee:	67 eb 64             	addr32 jmp 755 <.gnu.lto_.decls.7c70a44ae594ff4d+0x755>
 6f1:	2e 4d 0a 9f 67 b5 9f 	cs rex.WRB or -0x40604a99(%r15),%r11b
 6f8:	bf 
 6f9:	30 98 9f 91 ba 23    	xor    %bl,0x23ba919f(%rax)
 6ff:	6f                   	outsl  %ds:(%rsi),(%dx)
 700:	7c f2                	jl     6f4 <.gnu.lto_.decls.7c70a44ae594ff4d+0x6f4>
 702:	0e                   	(bad)
 703:	9b                   	fwait
 704:	02 75 91             	add    -0x6f(%rbp),%dh
 707:	06                   	(bad)
 708:	74 f6                	je     700 <.gnu.lto_.decls.7c70a44ae594ff4d+0x700>
 70a:	72 42                	jb     74e <.gnu.lto_.decls.7c70a44ae594ff4d+0x74e>
 70c:	8b 57 4a             	mov    0x4a(%rdi),%edx
 70f:	c7                   	(bad)
 710:	27                   	(bad)
 711:	02 eb                	add    %bl,%ch
 713:	83 de 71             	sbb    $0x71,%esi
 716:	58                   	pop    %rax
 717:	d6                   	(bad)
 718:	94                   	xchg   %eax,%esp
 719:	18 9f 67 b4 9f cd    	sbb    %bl,-0x32604b99(%rdi)
 71f:	f8                   	clc
 720:	6c                   	insb   (%dx),%es:(%rdi)
 721:	cd 72                	int    $0x72
 723:	c0 96 43 c0 e1 b3 a7 	rclb   $0xa7,-0x4c1e3fbd(%rsi)
 72a:	dc 14 68             	fcoml  (%rax,%rbp,2)
 72d:	50                   	push   %rax
 72e:	17                   	(bad)
 72f:	a0 73 d9 7d b2 8e cd 	movabs 0x4f85cd8eb27dd973,%al
 736:	85 4f 
 738:	a0 f5 e1 02 e6 83 92 	movabs 0xe7379283e602e1f5,%al
 73f:	37 e7 
 741:	b6 85                	mov    $0x85,%dh
 743:	c9                   	leave
 744:	7e 6c                	jle    7b2 <.gnu.lto_.decls.7c70a44ae594ff4d+0x7b2>
 746:	4c ac                	rex.WR lods %ds:(%rsi),%al
 748:	e6 c8                	out    %al,$0xc8
 74a:	76 8d                	jbe    6d9 <.gnu.lto_.decls.7c70a44ae594ff4d+0x6d9>
 74c:	6f                   	outsl  %ds:(%rsi),(%dx)
 74d:	0b 17                	or     (%rdi),%edx
 74f:	58                   	pop    %rax
 750:	10 2d 57 03 44 a2    	adc    %ch,-0x5dbbfca9(%rip)        # ffffffffa2440aad <utils.cpp.0ab61856+0xffffffffa2440aad>
 756:	25 45 4c 16 c6       	and    $0xc6164c45,%eax
 75b:	b2 24                	mov    $0x24,%dl
 75d:	97                   	xchg   %eax,%edi
 75e:	c3                   	ret
 75f:	0f 7c                	(bad)
 761:	b2 15                	mov    $0x15,%dl
 763:	1e                   	(bad)
 764:	fb                   	sti
 765:	0b be 82 0a b1 13    	or     0x13b10a82(%rsi),%edi
 76b:	23 84 93 fa 81 26 a8 	and    -0x57d97e06(%rbx,%rdx,4),%eax
 772:	61                   	(bad)
 773:	34 66                	xor    $0x66,%al
 775:	98                   	cwtl
 776:	53                   	push   %rbx
 777:	68 66 44 64 34       	push   $0x34644466
 77c:	49 92                	xchg   %rax,%r10
 77e:	e1 61                	loope  7e1 <.gnu.lto_.decls.7c70a44ae594ff4d+0x7e1>
 780:	05 04 31 29 65       	add    $0x65293104,%eax
 785:	f1                   	int1
 786:	11 30                	adc    %esi,(%rax)
 788:	ad                   	lods   %ds:(%rsi),%eax
 789:	83 88 6c 24 49 0a 19 	orl    $0x19,0xa49246c(%rax)
 790:	0e                   	(bad)
 791:	44 63 59 e2          	movsxd -0x1e(%rcx),%r11d
 795:	28 08                	sub    %cl,(%rax)
 797:	c1 aa 89 39 8a 04 7e 	shrl   $0x7e,0x48a3989(%rdx)
 79e:	10 cc                	adc    %cl,%ah
 7a0:	57                   	push   %rdi
 7a1:	21 47 98             	and    %eax,-0x68(%rdi)
 7a4:	0c 6b                	or     $0x6b,%al
 7a6:	04 18                	add    $0x18,%al
 7a8:	0b 17                	or     (%rdi),%edx
 7aa:	ab                   	stos   %eax,%es:(%rdi)
 7ab:	89 18                	mov    %ebx,(%rax)
 7ad:	4c 11 0c 4b          	adc    %r9,(%rbx,%rcx,2)
 7b1:	fb                   	sti
 7b2:	82                   	(bad)
 7b3:	65 0a c8             	gs or  %al,%cl
 7b6:	fa                   	cli
 7b7:	41 5e                	pop    %r14
 7b9:	4d 54                	rex.WRB push %r12
 7bb:	02 84 f4 05 63 cf d4 	add    -0x2b309cfb(%rsp,%rsi,8),%al
 7c2:	48 62 f5 5d 80 80    	(bad)
 7c8:	f3 3d b0 86 39 c2    	repz cmp $0xc23986b0,%eax
 7ce:	4f 0a 7f eb          	rex.WRXB or -0x15(%r15),%r15b
 7d2:	72 e9                	jb     7bd <.gnu.lto_.decls.7c70a44ae594ff4d+0x7bd>
 7d4:	63 85 fc 91 92 26    	movsxd 0x269291fc(%rbp),%eax
 7da:	03 f4                	add    %esp,%esi
 7dc:	ec                   	in     (%dx),%al
 7dd:	e5 b1                	in     $0xb1,%eax
 7df:	9c                   	pushf
 7e0:	a1 41 8c 31 43 80 34 	movabs 0x4f5c348043318c41,%eax
 7e7:	5c 4f 
 7e9:	c8 05 99 cd          	enter  $0x9905,$0xcd
 7ed:	16                   	(bad)
 7ee:	e9 71 19 75 ca       	jmp    ffffffffca752164 <utils.cpp.0ab61856+0xffffffffca752164>
 7f3:	84 33                	test   %dh,(%rbx)
 7f5:	60                   	(bad)
 7f6:	e0 8f                	loopne 787 <.gnu.lto_.decls.7c70a44ae594ff4d+0x787>
 7f8:	0e                   	(bad)
 7f9:	30 eb                	xor    %ch,%bl
 7fb:	78 02                	js     7ff <.gnu.lto_.decls.7c70a44ae594ff4d+0x7ff>
 7fd:	7d 56                	jge    855 <.gnu.lto_.decls.7c70a44ae594ff4d+0x855>
 7ff:	ad                   	lods   %ds:(%rsi),%eax
 800:	63 e3                	movsxd %ebx,%esp
 802:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 803:	f9                   	stc
 804:	52                   	push   %rdx
 805:	d4                   	(bad)
 806:	29 46 2d             	sub    %eax,0x2d(%rsi)
 809:	d4                   	(bad)
 80a:	cc                   	int3
 80b:	6c                   	insb   (%dx),%es:(%rdi)
 80c:	e8 d3 68 7b a7       	call   ffffffffa77b70e4 <utils.cpp.0ab61856+0xffffffffa77b70e4>
 811:	95                   	xchg   %eax,%ebp
 812:	46 c0 f8 0f          	rex.RX sar $0xf,%al
 816:	72 93                	jb     7ab <.gnu.lto_.decls.7c70a44ae594ff4d+0x7ab>
 818:	1f                   	(bad)
 819:	75 7e                	jne    899 <.gnu.lto_.decls.7c70a44ae594ff4d+0x899>
 81b:	8b 1b                	mov    (%rbx),%ebx
 81d:	fc                   	cld
 81e:	05 06 cc 9e 86       	add    $0x869ecc06,%eax
 823:	d5 a6 9f 37          	{rex2 0xa6} setg (%rdi)
 827:	04 06                	add    $0x6,%al
 829:	7e 0d                	jle    838 <.gnu.lto_.decls.7c70a44ae594ff4d+0x838>
 82b:	fc                   	cld
 82c:	6d                   	insl   (%dx),%es:(%rdi)
 82d:	8f 04 ea             	pop    (%rdx,%rbp,8)
 830:	6b 5d 00 c4          	imul   $0xffffffc4,0x0(%rbp),%ebx
 834:	61                   	(bad)
 835:	6a d1                	push   $0xffffffffffffffd1
 837:	f1                   	int1
 838:	a0 9e b8 51 73 15 90 	movabs 0x3a2690157351b89e,%al
 83f:	26 3a 
 841:	e0 e0                	loopne 823 <.gnu.lto_.decls.7c70a44ae594ff4d+0x823>
 843:	ac                   	lods   %ds:(%rsi),%al
 844:	b1 74                	mov    $0x74,%cl
 846:	2f                   	(bad)
 847:	58                   	pop    %rax
 848:	5b                   	pop    %rbx
 849:	0b 06                	or     (%rsi),%eax
 84b:	08 c4                	or     %al,%ah
 84d:	19 37                	sbb    %esi,(%rdi)
 84f:	c4                   	(bad)
 850:	1f                   	(bad)
 851:	91                   	xchg   %eax,%ecx
 852:	06                   	(bad)
 853:	0c cc                	or     $0xcc,%al
 855:	70 a4                	jo     7fb <.gnu.lto_.decls.7c70a44ae594ff4d+0x7fb>
 857:	63 3c f7             	movsxd (%rdi,%rsi,8),%edi
 85a:	2f                   	(bad)
 85b:	ac                   	lods   %ds:(%rsi),%al
 85c:	e2 c5                	loop   823 <.gnu.lto_.decls.7c70a44ae594ff4d+0x823>
 85e:	8e a5 2e d7 59 b1    	mov    -0x4ea628d2(%rbp),%fs
 864:	9e                   	sahf
 865:	da 51 3f             	ficoml 0x3f(%rcx)
 868:	82                   	(bad)
 869:	74 d4                	je     83f <.gnu.lto_.decls.7c70a44ae594ff4d+0x83f>
 86b:	de 53 6c             	ficoms 0x6c(%rbx)
 86e:	5d                   	pop    %rbp
 86f:	29 88 e6 0c 40 8b    	sub    %ecx,-0x74bff31a(%rax)
 875:	6a 99                	push   $0xffffffffffffff99
 877:	ac                   	lods   %ds:(%rsi),%al
 878:	a3 be ab 70 b1 6e bc 	movabs %eax,0x8397bc6eb170abbe
 87f:	97 83 
 881:	13 e9                	adc    %ecx,%ebp
 883:	71 a9                	jno    82e <.gnu.lto_.decls.7c70a44ae594ff4d+0x82e>
 885:	77 c1                	ja     848 <.gnu.lto_.decls.7c70a44ae594ff4d+0x848>
 887:	ce                   	(bad)
 888:	5e                   	pop    %rsi
 889:	f3 be c5 e3 01 e5    	repz mov $0xe501e3c5,%esi
 88f:	66 5d                	pop    %bp
 891:	4a                   	rex.WX
 892:	42 2c 87             	rex.X sub $0x87,%al
 895:	24 a7                	and    $0xa7,%al
 897:	98                   	cwtl
 898:	62 43 49 78 8a       	(bad)
 89d:	2d 5b a7 39 b2       	sub    $0xb239a75b,%eax
 8a2:	c0 54 03 5c 35       	rclb   $0x35,0x5c(%rbx,%rax,1)
 8a7:	d5 d7 c2 9b 8c b9 e0 	{rex2 0xd7} cmpps $0x20,-0x4b1f4674(%r27),%xmm11
 8ae:	b4 20 
 8b0:	f1                   	int1
 8b1:	d8 1a                	fcomps (%rdx)
 8b3:	05 89 dd c8 aa       	add    $0xaac8dd89,%eax
 8b8:	8c 09                	mov    %cs,(%rcx)
 8ba:	4d 74 bf             	rex.WRB je 87c <.gnu.lto_.decls.7c70a44ae594ff4d+0x87c>
 8bd:	78 51                	js     910 <.gnu.lto_.decls.7c70a44ae594ff4d+0x910>
 8bf:	df c3                	ffreep %st(3)
 8c1:	64 3c 97             	fs cmp $0x97,%al
 8c4:	af                   	scas   %es:(%rdi),%eax
 8c5:	f3 a1 24 8c 32 7f 33 	repz movabs 0xe319f0337f328c24,%eax
 8cc:	f0 19 e3 
 8cf:	69 42 14 74 4c 92 cb 	imul   $0xcb924c74,0x14(%rdx),%eax
 8d6:	32 db                	xor    %bl,%bl
 8d8:	08 ff                	or     %bh,%bh
 8da:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 8db:	8a 22                	mov    (%rdx),%ah
 8dd:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 8de:	2d 92 86 d8 85       	sub    $0x85d88692,%eax
 8e3:	68 42 d1 b7 6f       	push   $0x6fb7d142
 8e8:	22 b9 b8 88 39 72    	and    0x723988b8(%rcx),%bh
 8ee:	af                   	scas   %es:(%rdi),%eax
 8ef:	be 92 ef 89 c3       	mov    $0xc389ef92,%esi
 8f4:	8b 58 8e             	mov    -0x72(%rax),%ebx
 8f7:	0e                   	(bad)
 8f8:	69 90 09 13 f9 22 ba 	imul   $0xaf979ba,0x22f91309(%rax),%edx
 8ff:	79 f9 0a 
 902:	fb                   	sti
 903:	40                   	rex
 904:	48 63 7a a0          	movslq -0x60(%rdx),%rdi
 908:	bf 45 17 21 b4       	mov    $0xb4211745,%edi
 90d:	6d                   	insl   (%dx),%es:(%rdi)
 90e:	1e                   	(bad)
 90f:	5b                   	pop    %rbx
 910:	11 c0                	adc    %eax,%eax
 912:	6e                   	outsb  %ds:(%rsi),(%dx)
 913:	b2 03                	mov    $0x3,%dl
 915:	3f                   	(bad)
 916:	3d e0 ba 07 56       	cmp    $0x5607bae0,%eax
 91b:	0b 8b 3f dd b5 44    	or     0x44b5dd3f(%rbx),%ecx
 921:	73 4c                	jae    96f <.gnu.lto_.decls.7c70a44ae594ff4d+0x96f>
 923:	4e 6c                	rex.WRX insb (%dx),%es:(%rdi)
 925:	53                   	push   %rbx
 926:	ca dd 1d             	lret   $0x1ddd
 929:	cd 1d                	int    $0x1d
 92b:	12 10                	adc    (%rax),%dl
 92d:	7f 65                	jg     994 <.gnu.lto_.decls.7c70a44ae594ff4d+0x994>
 92f:	07                   	(bad)
 930:	4b a2 68 71 4f 14 54 	rex.WXB movabs %al,0x136fae54144f7168
 937:	ae 6f 13 
 93a:	f9                   	stc
 93b:	d6                   	(bad)
 93c:	b7 4c                	mov    $0x4c,%bh
 93e:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 93f:	54                   	push   %rsp
 940:	e3 37                	jrcxz  979 <.gnu.lto_.decls.7c70a44ae594ff4d+0x979>
 942:	1f                   	(bad)
 943:	2e 3b 4a 32          	cs cmp 0x32(%rdx),%ecx
 947:	9f                   	lahf
 948:	c2 3d 66             	ret    $0x663d
 94b:	7c 88                	jl     8d5 <.gnu.lto_.decls.7c70a44ae594ff4d+0x8d5>
 94d:	ce                   	(bad)
 94e:	a0 99 d4 28 60 ac 11 	movabs 0x49b711ac6028d499,%al
 955:	b7 49 
 957:	25 f5 68 35 b2       	and    $0xb23568f5,%eax
 95c:	41 dc 1e             	fcompl (%r14)
 95f:	54                   	push   %rsp
 960:	32 7e c3             	xor    -0x3d(%rsi),%bh
 963:	62                   	(bad)
 964:	88 41 a2             	mov    %al,-0x5e(%rcx)
 967:	f3 5c                	repz pop %rsp
 969:	4b 15 62 c7 08 77    	rex.WXB adc $0x7708c762,%rax
 96f:	d3 2d de 5e 50 21    	shrl   %cl,0x21505ede(%rip)        # 21506853 <utils.cpp.0ab61856+0x21506853>
 975:	69 0a 63 c5 81 ee    	imul   $0xee81c563,(%rdx),%ecx
 97b:	41 0b cb             	or     %r11d,%ecx
 97e:	6f                   	outsl  %ds:(%rsi),(%dx)
 97f:	46 11 d3             	rex.RX adc %r10d,%ebx
 982:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 983:	df 0c bf             	fisttps (%rdi,%rdi,4)
 986:	d3 cc                	ror    %cl,%esp
 988:	5b                   	pop    %rbx
 989:	17                   	(bad)
 98a:	87 cd                	xchg   %ecx,%ebp
 98c:	dd 7f 65             	fnstsw 0x65(%rdi)
 98f:	70 bb                	jo     94c <.gnu.lto_.decls.7c70a44ae594ff4d+0x94c>
 991:	f9                   	stc
 992:	07                   	(bad)
 993:	0e                   	(bad)
 994:	0b e5                	or     %ebp,%esp
 996:	77 f2                	ja     98a <.gnu.lto_.decls.7c70a44ae594ff4d+0x98a>
 998:	d3 77 fb             	shll   %cl,-0x5(%rdi)
 99b:	39 34 63             	cmp    %esi,(%rbx,%riz,2)
 99e:	c0 0e a1             	rorb   $0xa1,(%rsi)
 9a1:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 9a2:	f1                   	int1
 9a3:	61                   	(bad)
 9a4:	b5 d4                	mov    $0xd4,%ch
 9a6:	61                   	(bad)
 9a7:	8d                   	.byte 0x8d
 9a8:	55                   	push   %rbp

Disassembly of section .gnu.lto_.symtab.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.symtab.7c70a44ae594ff4d>:
   0:	5f                   	pop    %rdi
   1:	5a                   	pop    %rdx
   2:	4e 31 30             	rex.WRX xor %r14,(%rax)
   5:	51                   	push   %rcx
   6:	75 61                	jne    69 <.gnu.lto_.symtab.7c70a44ae594ff4d+0x69>
   8:	6e                   	outsb  %ds:(%rsi),(%dx)
   9:	74 75                	je     80 <.gnu.lto_.symtab.7c70a44ae594ff4d+0x80>
   b:	6d                   	insl   (%dx),%es:(%rdi)
   c:	4e                   	rex.WRX
   d:	45                   	rex.RB
   e:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
  13:	38 49 53             	cmp    %cl,0x53(%rcx)
  16:	5f                   	pop    %rdi
  17:	44                   	rex.R
  18:	49                   	rex.WB
  19:	47                   	rex.RXB
  1a:	49 54                	rex.WB push %r12
  1c:	49 63 45 45          	movslq 0x45(%r13),%rax
  20:	44 61                	rex.R (bad)
  22:	52                   	push   %rdx
  23:	4b 54                	rex.WXB push %r12
  25:	5f                   	pop    %rdi
  26:	00 5f 5a             	add    %bl,0x5a(%rdi)
  29:	4e 31 30             	rex.WRX xor %r14,(%rax)
  2c:	51                   	push   %rcx
  2d:	75 61                	jne    90 <.gnu.lto_.symtab.7c70a44ae594ff4d+0x90>
  2f:	6e                   	outsb  %ds:(%rsi),(%dx)
  30:	74 75                	je     a7 <.gnu.lto_.symtab.7c70a44ae594ff4d+0xa7>
  32:	6d                   	insl   (%dx),%es:(%rdi)
  33:	4e                   	rex.WRX
  34:	45                   	rex.RB
  35:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
  3a:	38 49 53             	cmp    %cl,0x53(%rcx)
  3d:	5f                   	pop    %rdi
  3e:	44                   	rex.R
  3f:	49                   	rex.WB
  40:	47                   	rex.RXB
  41:	49 54                	rex.WB push %r12
  43:	49 63 45 45          	movslq 0x45(%r13),%rax
  47:	44 61                	rex.R (bad)
  49:	52                   	push   %rdx
  4a:	4b 54                	rex.WXB push %r12
  4c:	5f                   	pop    %rdi
  4d:	00 01                	add    %al,(%rcx)
	...
  57:	00 d6                	add    %dl,%dh
  59:	00 00                	add    %al,(%rax)
  5b:	00 5f 5a             	add    %bl,0x5a(%rdi)
  5e:	4e 31 30             	rex.WRX xor %r14,(%rax)
  61:	51                   	push   %rcx
  62:	75 61                	jne    c5 <.gnu.lto_.symtab.7c70a44ae594ff4d+0xc5>
  64:	6e                   	outsb  %ds:(%rsi),(%dx)
  65:	74 75                	je     dc <.gnu.lto_.symtab.7c70a44ae594ff4d+0xdc>
  67:	6d                   	insl   (%dx),%es:(%rdi)
  68:	4e                   	rex.WRX
  69:	45                   	rex.RB
  6a:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
  6f:	39 73 6b             	cmp    %esi,0x6b(%rbx)
  72:	69 70 5f 61 74 6f 69 	imul   $0x696f7461,0x5f(%rax),%esi
  79:	45 50                	rex.RB push %r8
  7b:	50                   	push   %rax
  7c:	4b 63 00             	rex.WXB movslq (%r8),%rax
	...
  87:	00 00                	add    %al,(%rax)
  89:	00 e4                	add    %ah,%ah
  8b:	00 00                	add    %al,(%rax)
  8d:	00 5f 5a             	add    %bl,0x5a(%rdi)
  90:	4e 31 30             	rex.WRX xor %r14,(%rax)
  93:	51                   	push   %rcx
  94:	75 61                	jne    f7 <.gnu.lto_.symtab.7c70a44ae594ff4d+0xf7>
  96:	6e                   	outsb  %ds:(%rsi),(%dx)
  97:	74 75                	je     10e <utils.cpp.0ab61856+0x10e>
  99:	6d                   	insl   (%dx),%es:(%rdi)
  9a:	4e                   	rex.WRX
  9b:	45                   	rex.RB
  9c:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
  a1:	36 6e                	outsb  %ds:(%rsi),(%dx)
  a3:	75 6d                	jne    112 <utils.cpp.0ab61856+0x112>
  a5:	62 65 72 45 50       	(bad)
  aa:	63 6c 69 69          	movsxd 0x69(%rcx,%rbp,2),%ebp
  ae:	69 69 00 00 00 00 00 	imul   $0x0,0x0(%rcx),%ebp
  b5:	00 00                	add    %al,(%rax)
  b7:	00 00                	add    %al,(%rax)
  b9:	00 00                	add    %al,(%rax)
  bb:	00 fb                	add    %bh,%bl
  bd:	00 00                	add    %al,(%rax)
  bf:	00 5f 5a             	add    %bl,0x5a(%rdi)
  c2:	4e 31 30             	rex.WRX xor %r14,(%rax)
  c5:	51                   	push   %rcx
  c6:	75 61                	jne    129 <utils.cpp.0ab61856+0x129>
  c8:	6e                   	outsb  %ds:(%rsi),(%dx)
  c9:	74 75                	je     140 <utils.cpp.0ab61856+0x140>
  cb:	6d                   	insl   (%dx),%es:(%rdi)
  cc:	4e                   	rex.WRX
  cd:	45                   	rex.RB
  ce:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
  d3:	38 76 73             	cmp    %dh,0x73(%rsi)
  d6:	70 72                	jo     14a <utils.cpp.0ab61856+0x14a>
  d8:	69 6e 74 66 45 50 63 	imul   $0x63504566,0x74(%rsi),%ebp
  df:	50                   	push   %rax
  e0:	4b 63 50 31          	rex.WXB movslq 0x31(%r8),%rdx
  e4:	33 5f 5f             	xor    0x5f(%rdi),%ebx
  e7:	76 61                	jbe    14a <utils.cpp.0ab61856+0x14a>
  e9:	5f                   	pop    %rdi
  ea:	6c                   	insb   (%dx),%es:(%rdi)
  eb:	69 73 74 5f 74 61 67 	imul   $0x6761745f,0x74(%rbx),%esi
	...
  fe:	08 01                	or     %al,(%rcx)
	...

Disassembly of section .gnu.lto_.ext_symtab.7c70a44ae594ff4d:

0000000000000000 <.gnu.lto_.ext_symtab.7c70a44ae594ff4d>:
   0:	01 01                	add    %eax,(%rcx)
   2:	00 01                	add    %al,(%rcx)
   4:	00 01                	add    %al,(%rcx)
   6:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .gnu.lto_.opts:

0000000000000000 <.gnu.lto_.opts>:
   0:	27                   	(bad)
   1:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
   6:	6f                   	outsl  %ds:(%rsi),(%dx)
   7:	70 65                	jo     6e <.gnu.lto_.opts+0x6e>
   9:	6e                   	outsb  %ds:(%rsi),(%dx)
   a:	6d                   	insl   (%dx),%es:(%rdi)
   b:	70 27                	jo     34 <.gnu.lto_.opts+0x34>
   d:	20 27                	and    %ah,(%rdi)
   f:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  14:	6f                   	outsl  %ds:(%rsi),(%dx)
  15:	70 65                	jo     7c <.gnu.lto_.opts+0x7c>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	61                   	(bad)
  19:	63 63 27             	movsxd 0x27(%rbx),%esp
  1c:	20 27                	and    %ah,(%rdi)
  1e:	2d 66 63 66 2d       	sub    $0x2d666366,%eax
  23:	70 72                	jo     97 <.gnu.lto_.opts+0x97>
  25:	6f                   	outsl  %ds:(%rsi),(%dx)
  26:	74 65                	je     8d <.gnu.lto_.opts+0x8d>
  28:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  2c:	6e                   	outsb  %ds:(%rsi),(%dx)
  2d:	3d 6e 6f 6e 65       	cmp    $0x656e6f6e,%eax
  32:	27                   	(bad)
  33:	20 27                	and    %ah,(%rdi)
  35:	2d 67 27 20 27       	sub    $0x27202767,%eax
  3a:	2d 6d 63 6d 6f       	sub    $0x6f6d636d,%eax
  3f:	64 65 6c             	fs gs insb (%dx),%es:(%rdi)
  42:	3d 6c 61 72 67       	cmp    $0x6772616c,%eax
  47:	65 27                	gs (bad)
  49:	20 27                	and    %ah,(%rdi)
  4b:	2d 6d 6e 6f 2d       	sub    $0x2d6f6e6d,%eax
  50:	72 65                	jb     b7 <.gnu.lto_.opts+0xb7>
  52:	64 2d 7a 6f 6e 65    	fs sub $0x656e6f7a,%eax
  58:	27                   	(bad)
  59:	20 27                	and    %ah,(%rdi)
  5b:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  60:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  66:	72 69                	jb     d1 <.gnu.lto_.opts+0xd1>
  68:	63 27                	movsxd (%rdi),%esp
  6a:	20 27                	and    %ah,(%rdi)
  6c:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  71:	68 3d 78 38 36       	push   $0x3638783d
  76:	2d 36 34 27 20       	sub    $0x20273436,%eax
  7b:	27                   	(bad)
  7c:	2d 4f 30 27 20       	sub    $0x2027304f,%eax
  81:	27                   	(bad)
  82:	2d 57 65 72 72       	sub    $0x72726557,%eax
  87:	6f                   	outsl  %ds:(%rsi),(%dx)
  88:	72 27                	jb     b1 <.gnu.lto_.opts+0xb1>
  8a:	20 27                	and    %ah,(%rdi)
  8c:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  91:	73 74                	jae    107 <.gnu.lto_.opts+0x107>
  93:	61                   	(bad)
  94:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  97:	70 72                	jo     10b <.gnu.lto_.opts+0x10b>
  99:	6f                   	outsl  %ds:(%rsi),(%dx)
  9a:	74 65                	je     101 <.gnu.lto_.opts+0x101>
  9c:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
  a0:	27                   	(bad)
  a1:	20 27                	and    %ah,(%rdi)
  a3:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  a8:	73 74                	jae    11e <.gnu.lto_.opts+0x11e>
  aa:	72 69                	jb     115 <.gnu.lto_.opts+0x115>
  ac:	63 74 2d 61          	movsxd 0x61(%rbp,%rbp,1),%esi
  b0:	6c                   	insb   (%dx),%es:(%rdi)
  b1:	69 61 73 69 6e 67 27 	imul   $0x27676e69,0x73(%rcx),%esp
  b8:	20 27                	and    %ah,(%rdi)
  ba:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  bf:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
  c2:	6d                   	insl   (%dx),%es:(%rdi)
  c3:	6f                   	outsl  %ds:(%rsi),(%dx)
  c4:	6e                   	outsb  %ds:(%rsi),(%dx)
  c5:	27                   	(bad)
  c6:	20 27                	and    %ah,(%rdi)
  c8:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  cd:	65 78 63             	gs js  133 <utils.cpp.0ab61856+0x133>
  d0:	65 70 74             	gs jo  147 <utils.cpp.0ab61856+0x147>
  d3:	69 6f 6e 73 27 20 27 	imul   $0x27202773,0x6e(%rdi),%ebp
  da:	2d 66 73 74 61       	sub    $0x61747366,%eax
  df:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  e2:	63 68 65             	movsxd 0x65(%rax),%ebp
  e5:	63 6b 3d             	movsxd 0x3d(%rbx),%ebp
  e8:	6e                   	outsb  %ds:(%rsi),(%dx)
  e9:	6f                   	outsl  %ds:(%rsi),(%dx)
  ea:	27                   	(bad)
  eb:	20 27                	and    %ah,(%rdi)
  ed:	2d 66 66 75 6e       	sub    $0x6e756666,%eax
  f2:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  f6:	6e                   	outsb  %ds:(%rsi),(%dx)
  f7:	2d 73 65 63 74       	sub    $0x74636573,%eax
  fc:	69 6f 6e 73 27 20 27 	imul   $0x27202773,0x6e(%rdi),%ebp
 103:	2d 66 64 61 74       	sub    $0x74616466,%eax
 108:	61                   	(bad)
 109:	2d 73 65 63 74       	sub    $0x74636573,%eax
 10e:	69 6f 6e 73 27 20 27 	imul   $0x27202773,0x6e(%rdi),%ebp
 115:	2d 66 50 49 43       	sub    $0x43495066,%eax
 11a:	27                   	(bad)
 11b:	20 27                	and    %ah,(%rdi)
 11d:	2d 66 6c 74 6f       	sub    $0x6f746c66,%eax
 122:	27                   	(bad)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 47 4e             	sub    %al,0x4e(%rdi)
   9:	55                   	push   %rbp
   a:	29 20                	sub    %esp,(%rax)
   c:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
   f:	32 2e                	xor    (%rsi),%ch
  11:	31 20                	xor    %esp,(%rax)
  13:	32 30                	xor    (%rax),%dh
  15:	32 34 30             	xor    (%rax,%rsi,1),%dh
  18:	39 31                	cmp    %esi,(%rcx)
  1a:	30 00                	xor    %al,(%rax)

Disassembly of section .note.gnu.property:

0000000000000000 <.note.gnu.property>:
   0:	04 00                	add    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	20 00                	and    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	05 00 00 00 47       	add    $0x47000000,%eax
   d:	4e 55                	rex.WRX push %rbp
   f:	00 02                	add    %al,(%rdx)
  11:	00 01                	add    %al,(%rcx)
  13:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
	...
  1f:	00 01                	add    %al,(%rcx)
  21:	00 01                	add    %al,(%rcx)
  23:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
  27:	00 01                	add    %al,(%rcx)
  29:	00 00                	add    %al,(%rax)
  2b:	00 00                	add    %al,(%rax)
  2d:	00 00                	add    %al,(%rax)
	...

spin_lock.cpp.o：     文件格式 elf64-x86-64


Disassembly of section .gnu.debuglto_.debug_info:

0000000000000000 <spin_lock.cpp.cc2eb890>:
   0:	07                   	(bad)
   1:	06                   	(bad)
   2:	00 00                	add    %al,(%rax)
   4:	05 00 01 08 00       	add    $0x80100,%eax
   9:	00 00                	add    %al,(%rax)
   b:	00 1a                	add    %bl,(%rdx)
   d:	00 00                	add    %al,(%rax)
   f:	00 00                	add    %al,(%rax)
  11:	21 00                	and    %eax,(%rax)
	...
  1b:	00 00                	add    %al,(%rax)
  1d:	00 1b                	add    %bl,(%rbx)
  1f:	73 74                	jae    95 <spin_lock.cpp.cc2eb890+0x95>
  21:	64 00 04 34          	add    %al,%fs:(%rsp,%rsi,1)
  25:	01 0b                	add    %ecx,(%rbx)
  27:	f4                   	hlt
  28:	02 00                	add    (%rax),%al
  2a:	00 0b                	add    %cl,(%rbx)
  2c:	00 00                	add    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)
  30:	01 05 0b 0d 0b 00    	add    %eax,0xb0d0b(%rip)        # b0d41 <spin_lock.cpp.cc2eb890+0xb0d41>
  36:	00 00                	add    %al,(%rax)
  38:	00 01                	add    %al,(%rcx)
  3a:	5a                   	pop    %rdx
  3b:	0b 0d 1c 00 00 00    	or     0x1c(%rip),%ecx        # 5d <spin_lock.cpp.cc2eb890+0x5d>
  41:	00 05 04 09 03 00    	add    %al,0x30904(%rip)        # 3094b <spin_lock.cpp.cc2eb890+0x3094b>
  47:	00 02                	add    %al,(%rdx)
  49:	40 0e                	rex (bad)
  4b:	74 00                	je     4d <spin_lock.cpp.cc2eb890+0x4d>
  4d:	00 00                	add    %al,(%rax)
  4f:	06                   	(bad)
  50:	00 00                	add    %al,(%rax)
  52:	00 00                	add    %al,(%rax)
  54:	00 06                	add    %al,(%rsi)
  56:	00 00                	add    %al,(%rax)
  58:	00 00                	add    %al,(%rax)
  5a:	01 06                	add    %eax,(%rsi)
  5c:	00 00                	add    %al,(%rax)
  5e:	00 00                	add    %al,(%rax)
  60:	02 06                	add    (%rsi),%al
  62:	00 00                	add    %al,(%rax)
  64:	00 00                	add    %al,(%rax)
  66:	03 06                	add    (%rsi),%eax
  68:	00 00                	add    %al,(%rax)
  6a:	00 00                	add    %al,(%rax)
  6c:	04 06                	add    $0x6,%al
  6e:	00 00                	add    %al,(%rax)
  70:	00 00                	add    %al,(%rax)
  72:	05 00 1d 00 00       	add    $0x1d00,%eax
  77:	00 00                	add    %al,(%rax)
  79:	07                   	(bad)
  7a:	04 2a                	add    $0x2a,%al
  7c:	03 00                	add    (%rax),%eax
  7e:	00 02                	add    %al,(%rdx)
  80:	5d                   	pop    %rbp
  81:	08 a9 00 00 00 1e    	or     %ch,0x1e000000(%rcx)
  87:	00 00                	add    %al,(%rax)
  89:	00 00                	add    %al,(%rax)
  8b:	ff                   	(bad)
  8c:	ff 0c 00             	decl   (%rax,%rax,1)
  8f:	00 00                	add    %al,(%rax)
  91:	00 00                	add    %al,(%rax)
  93:	00 ff                	add    %bh,%bh
  95:	ff 0c 00             	decl   (%rax,%rax,1)
  98:	00 00                	add    %al,(%rax)
  9a:	00 00                	add    %al,(%rax)
  9c:	00 01                	add    %al,(%rcx)
  9e:	00 0c 00             	add    %cl,(%rax,%rax,1)
  a1:	00 00                	add    %al,(%rax)
  a3:	00 00                	add    %al,(%rax)
  a5:	00 02                	add    %al,(%rdx)
  a7:	00 00                	add    %al,(%rax)
  a9:	0e                   	(bad)
  aa:	00 00                	add    %al,(%rax)
  ac:	00 00                	add    %al,(%rax)
  ae:	c6 c1 00             	mov    $0x0,%cl
  b1:	00 00                	add    %al,(%rax)
  b3:	1f                   	(bad)
  b4:	00 00                	add    %al,(%rax)
  b6:	00 00                	add    %al,(%rax)
  b8:	02 c8                	add    %al,%cl
  ba:	1d c1 00 00 00       	sbb    $0xc1,%eax
  bf:	00 00                	add    %al,(%rax)
  c1:	0f 00 00             	sldt   (%rax)
  c4:	00 00                	add    %al,(%rax)
  c6:	02 b3 12 31 03 00    	add    0x33112(%rbx),%dh
  cc:	00 0e                	add    %cl,(%rsi)
  ce:	00 00                	add    %al,(%rax)
  d0:	00 00                	add    %al,(%rax)
  d2:	d2 6b 02             	shrb   %cl,0x2(%rbx)
  d5:	00 00                	add    %al,(%rax)
  d7:	10 a9 00 00 00 00    	adc    %ch,0x0(%rcx)
  dd:	11 00                	adc    %eax,(%rax)
  df:	00 00                	add    %al,(%rax)
  e1:	00 d4                	add    %dl,%ah
  e3:	00 00                	add    %al,(%rax)
  e5:	00 00                	add    %al,(%rax)
  e7:	ef                   	out    %eax,(%dx)
  e8:	00 00                	add    %al,(%rax)
  ea:	00 f5                	add    %dh,%ch
  ec:	00 00                	add    %al,(%rax)
  ee:	00 02                	add    %al,(%rdx)
  f0:	62 03 00 00 00       	(bad)
  f5:	11 00                	adc    %eax,(%rax)
  f7:	00 00                	add    %al,(%rax)
  f9:	00 d5                	add    %dl,%ch
  fb:	00 00                	add    %al,(%rax)
  fd:	00 00                	add    %al,(%rax)
  ff:	07                   	(bad)
 100:	01 00                	add    %eax,(%rax)
 102:	00 12                	add    %dl,(%rdx)
 104:	01 00                	add    %eax,(%rax)
 106:	00 02                	add    %al,(%rdx)
 108:	62 03 00 00 02       	(bad)
 10d:	09 03                	or     %eax,(%rbx)
 10f:	00 00                	add    %al,(%rax)
 111:	00 20                	add    %ah,(%rax)
 113:	00 00                	add    %al,(%rax)
 115:	00 00                	add    %al,(%rax)
 117:	02 d6                	add    %dh,%dl
 119:	05 00 00 00 00       	add    $0x0,%eax
 11e:	26 01 00             	es add %eax,(%rax)
 121:	00 31                	add    %dh,(%rcx)
 123:	01 00                	add    %eax,(%rax)
 125:	00 02                	add    %al,(%rdx)
 127:	62 03 00 00 03       	(bad)
 12c:	6c                   	insb   (%dx),%es:(%rdi)
 12d:	03 00                	add    (%rax),%eax
 12f:	00 00                	add    %al,(%rax)
 131:	12 00                	adc    (%rax),%al
 133:	00 00                	add    %al,(%rax)
 135:	00 d7                	add    %dl,%bh
 137:	00 00                	add    %al,(%rax)
 139:	00 00                	add    %al,(%rax)
 13b:	71 03                	jno    140 <spin_lock.cpp.cc2eb890+0x140>
 13d:	00 00                	add    %al,(%rax)
 13f:	47 01 00             	rex.RXB add %r8d,(%r8)
 142:	00 52 01             	add    %dl,0x1(%rdx)
 145:	00 00                	add    %al,(%rax)
 147:	02 62 03             	add    0x3(%rdx),%ah
 14a:	00 00                	add    %al,(%rax)
 14c:	03 6c 03 00          	add    0x0(%rbx,%rax,1),%ebp
 150:	00 00                	add    %al,(%rax)
 152:	12 00                	adc    (%rax),%al
 154:	00 00                	add    %al,(%rax)
 156:	00 d8                	add    %bl,%al
 158:	00 00                	add    %al,(%rax)
 15a:	00 00                	add    %al,(%rax)
 15c:	71 03                	jno    161 <spin_lock.cpp.cc2eb890+0x161>
 15e:	00 00                	add    %al,(%rax)
 160:	68 01 00 00 73       	push   $0x73000001
 165:	01 00                	add    %eax,(%rax)
 167:	00 02                	add    %al,(%rdx)
 169:	76 03                	jbe    16e <spin_lock.cpp.cc2eb890+0x16e>
 16b:	00 00                	add    %al,(%rax)
 16d:	03 6c 03 00          	add    0x0(%rbx,%rax,1),%ebp
 171:	00 00                	add    %al,(%rax)
 173:	21 00                	and    %eax,(%rax)
 175:	00 00                	add    %al,(%rax)
 177:	00 02                	add    %al,(%rdx)
 179:	db 0f                	fisttpl (%rdi)
 17b:	00 00                	add    %al,(%rax)
 17d:	00 00                	add    %al,(%rax)
 17f:	87 01                	xchg   %eax,(%rcx)
 181:	00 00                	add    %al,(%rax)
 183:	92                   	xchg   %eax,%edx
 184:	01 00                	add    %eax,(%rax)
 186:	00 02                	add    %al,(%rdx)
 188:	62 03 00 00 03       	(bad)
 18d:	31 03                	xor    %eax,(%rbx)
 18f:	00 00                	add    %al,(%rax)
 191:	00 08                	add    %cl,(%rax)
 193:	00 00                	add    %al,(%rax)
 195:	00 00                	add    %al,(%rax)
 197:	e0 00                	loopne 199 <spin_lock.cpp.cc2eb890+0x199>
 199:	00 00                	add    %al,(%rax)
 19b:	00 31                	add    %dh,(%rcx)
 19d:	03 00                	add    (%rax),%eax
 19f:	00 a8 01 00 00 b3    	add    %ch,-0x4cffffff(%rax)
 1a5:	01 00                	add    %eax,(%rax)
 1a7:	00 02                	add    %al,(%rdx)
 1a9:	62 03 00 00 03       	(bad)
 1ae:	3d 00 00 00 00       	cmp    $0x0,%eax
 1b3:	08 00                	or     %al,(%rax)
 1b5:	00 00                	add    %al,(%rax)
 1b7:	00 e6                	add    %ah,%dh
 1b9:	00 00                	add    %al,(%rax)
 1bb:	00 00                	add    %al,(%rax)
 1bd:	31 03                	xor    %eax,(%rbx)
 1bf:	00 00                	add    %al,(%rax)
 1c1:	c9                   	leave
 1c2:	01 00                	add    %eax,(%rax)
 1c4:	00 d4                	add    %dl,%ah
 1c6:	01 00                	add    %eax,(%rax)
 1c8:	00 02                	add    %al,(%rdx)
 1ca:	76 03                	jbe    1cf <spin_lock.cpp.cc2eb890+0x1cf>
 1cc:	00 00                	add    %al,(%rax)
 1ce:	03 3d 00 00 00 00    	add    0x0(%rip),%edi        # 1d4 <spin_lock.cpp.cc2eb890+0x1d4>
 1d4:	08 00                	or     %al,(%rax)
 1d6:	00 00                	add    %al,(%rax)
 1d8:	00 ed                	add    %ch,%ch
 1da:	00 00                	add    %al,(%rax)
 1dc:	00 00                	add    %al,(%rax)
 1de:	31 03                	xor    %eax,(%rbx)
 1e0:	00 00                	add    %al,(%rax)
 1e2:	ea                   	(bad)
 1e3:	01 00                	add    %eax,(%rax)
 1e5:	00 f5                	add    %dh,%ch
 1e7:	01 00                	add    %eax,(%rax)
 1e9:	00 02                	add    %al,(%rdx)
 1eb:	7b 03                	jnp    1f0 <spin_lock.cpp.cc2eb890+0x1f0>
 1ed:	00 00                	add    %al,(%rax)
 1ef:	03 3d 00 00 00 00    	add    0x0(%rip),%edi        # 1f5 <spin_lock.cpp.cc2eb890+0x1f5>
 1f5:	08 00                	or     %al,(%rax)
 1f7:	00 00                	add    %al,(%rax)
 1f9:	00 f5                	add    %dh,%ch
 1fb:	00 00                	add    %al,(%rax)
 1fd:	00 00                	add    %al,(%rax)
 1ff:	31 03                	xor    %eax,(%rbx)
 201:	00 00                	add    %al,(%rax)
 203:	0b 02                	or     (%rdx),%eax
 205:	00 00                	add    %al,(%rax)
 207:	16                   	(bad)
 208:	02 00                	add    (%rax),%al
 20a:	00 02                	add    %al,(%rdx)
 20c:	80 03 00             	addb   $0x0,(%rbx)
 20f:	00 03                	add    %al,(%rbx)
 211:	3d 00 00 00 00       	cmp    $0x0,%eax
 216:	13 00                	adc    (%rax),%eax
 218:	00 00                	add    %al,(%rax)
 21a:	00 19                	add    %bl,(%rcx)
 21c:	01 00                	add    %eax,(%rax)
 21e:	00 00                	add    %al,(%rax)
 220:	00 29                	add    %ch,(%rcx)
 222:	02 00                	add    (%rax),%al
 224:	00 34 02             	add    %dh,(%rdx,%rax,1)
 227:	00 00                	add    %al,(%rax)
 229:	02 62 03             	add    0x3(%rdx),%ah
 22c:	00 00                	add    %al,(%rax)
 22e:	03 3d 00 00 00 00    	add    0x0(%rip),%edi        # 234 <spin_lock.cpp.cc2eb890+0x234>
 234:	13 00                	adc    (%rax),%eax
 236:	00 00                	add    %al,(%rax)
 238:	00 25 01 00 00 00    	add    %ah,0x1(%rip)        # 23f <spin_lock.cpp.cc2eb890+0x23f>
 23e:	00 47 02             	add    %al,0x2(%rdi)
 241:	00 00                	add    %al,(%rax)
 243:	52                   	push   %rdx
 244:	02 00                	add    (%rax),%al
 246:	00 02                	add    %al,(%rdx)
 248:	76 03                	jbe    24d <spin_lock.cpp.cc2eb890+0x24d>
 24a:	00 00                	add    %al,(%rax)
 24c:	03 3d 00 00 00 00    	add    0x0(%rip),%edi        # 252 <spin_lock.cpp.cc2eb890+0x252>
 252:	22 00                	and    (%rax),%al
 254:	00 00                	add    %al,(%rax)
 256:	00 02                	add    %al,(%rdx)
 258:	32 01                	xor    (%rcx),%al
 25a:	05 00 00 00 00       	add    $0x0,%eax
 25f:	c1 00 00             	roll   $0x0,(%rax)
 262:	00 03                	add    %al,(%rbx)
 264:	03 31                	add    (%rcx),%esi
 266:	03 00                	add    (%rax),%eax
 268:	00 00                	add    %al,(%rax)
 26a:	00 04 cd 00 00 00 23 	add    %al,0x23000000(,%rcx,8)
 271:	cd 00                	int    $0x0
 273:	00 00                	add    %al,(%rax)
 275:	04 70                	add    $0x70,%al
 277:	02 00                	add    (%rax),%al
 279:	00 24 00             	add    %ah,(%rax,%rax,1)
 27c:	00 00                	add    %al,(%rax)
 27e:	00 03                	add    %al,(%rbx)
 280:	d8 04 03             	fadds  (%rbx,%rax,1)
 283:	00 00                	add    %al,(%rax)
 285:	00 00                	add    %al,(%rax)
 287:	96                   	xchg   %eax,%esi
 288:	02 00                	add    (%rax),%al
 28a:	00 03                	add    %al,(%rbx)
 28c:	62 03 00 00 03       	(bad)
 291:	3d 00 00 00 00       	cmp    $0x0,%eax
 296:	25 00 00 00 00       	and    $0x0,%eax
 29b:	03 ba 04 03 00 00    	add    0x304(%rdx),%edi
 2a1:	00 00                	add    %al,(%rax)
 2a3:	31 03                	xor    %eax,(%rbx)
 2a5:	00 00                	add    %al,(%rax)
 2a7:	b6 02                	mov    $0x2,%dh
 2a9:	00 00                	add    %al,(%rax)
 2ab:	03 62 03             	add    0x3(%rdx),%esp
 2ae:	00 00                	add    %al,(%rax)
 2b0:	03 3d 00 00 00 00    	add    0x0(%rip),%edi        # 2b6 <spin_lock.cpp.cc2eb890+0x2b6>
 2b6:	26 00 00             	es add %al,(%rax)
 2b9:	00 00                	add    %al,(%rax)
 2bb:	02 6d 03             	add    0x3(%rbp),%ch
 2be:	00 00                	add    %al,(%rax)
 2c0:	00 00                	add    %al,(%rax)
 2c2:	3d 00 00 00 d5       	cmp    $0xd5000000,%eax
 2c7:	02 00                	add    (%rax),%al
 2c9:	00 03                	add    %al,(%rbx)
 2cb:	3d 00 00 00 03       	cmp    $0x3000000,%eax
 2d0:	74 00                	je     2d2 <spin_lock.cpp.cc2eb890+0x2d2>
 2d2:	00 00                	add    %al,(%rax)
 2d4:	00 27                	add    %ah,(%rdi)
 2d6:	00 00                	add    %al,(%rax)
 2d8:	00 00                	add    %al,(%rax)
 2da:	04 5d                	add    $0x5d,%al
 2dc:	02 03                	add    (%rbx),%al
 2de:	00 00                	add    %al,(%rax)
 2e0:	00 00                	add    %al,(%rax)
 2e2:	28 00                	sub    %al,(%rax)
 2e4:	00 00                	add    %al,(%rax)
 2e6:	00 04 1f             	add    %al,(%rdi,%rbx,1)
 2e9:	02 03                	add    (%rbx),%al
 2eb:	00 00                	add    %al,(%rax)
 2ed:	00 00                	add    %al,(%rax)
 2ef:	31 03                	xor    %eax,(%rbx)
 2f1:	00 00                	add    %al,(%rax)
 2f3:	00 01                	add    %al,(%rcx)
 2f5:	08 07                	or     %al,(%rdi)
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	01 01                	add    %eax,(%rcx)
 2fd:	06                   	(bad)
 2fe:	00 00                	add    %al,(%rax)
 300:	00 00                	add    %al,(%rax)
 302:	01 02                	add    %eax,(%rdx)
 304:	05 00 00 00 00       	add    $0x0,%eax
 309:	29 04 05 69 6e 74 00 	sub    %eax,0x746e69(,%rax,1)
 310:	04 09                	add    $0x9,%al
 312:	03 00                	add    (%rax),%eax
 314:	00 01                	add    %al,(%rcx)
 316:	08 05 00 00 00 00    	or     %al,0x0(%rip)        # 31c <spin_lock.cpp.cc2eb890+0x31c>
 31c:	01 01                	add    %eax,(%rcx)
 31e:	08 00                	or     %al,(%rax)
 320:	00 00                	add    %al,(%rax)
 322:	00 01                	add    %al,(%rcx)
 324:	02 07                	add    (%rdi),%al
 326:	00 00                	add    %al,(%rax)
 328:	00 00                	add    %al,(%rax)
 32a:	01 04 07             	add    %eax,(%rdi,%rax,1)
 32d:	00 00                	add    %al,(%rax)
 32f:	00 00                	add    %al,(%rax)
 331:	01 01                	add    %eax,(%rcx)
 333:	02 00                	add    (%rax),%al
 335:	00 00                	add    %al,(%rax)
 337:	00 01                	add    %al,(%rcx)
 339:	08 07                	or     %al,(%rdi)
 33b:	00 00                	add    %al,(%rax)
 33d:	00 00                	add    %al,(%rax)
 33f:	01 08                	add    %ecx,(%rax)
 341:	05 00 00 00 00       	add    $0x0,%eax
 346:	01 04 05 00 00 00 00 	add    %eax,0x0(,%rax,1)
 34d:	01 01                	add    %eax,(%rcx)
 34f:	10 00                	adc    %al,(%rax)
 351:	00 00                	add    %al,(%rax)
 353:	00 01                	add    %al,(%rcx)
 355:	02 10                	add    (%rax),%dl
 357:	00 00                	add    %al,(%rax)
 359:	00 00                	add    %al,(%rax)
 35b:	01 04 10             	add    %eax,(%rax,%rdx,1)
 35e:	00 00                	add    %al,(%rax)
 360:	00 00                	add    %al,(%rax)
 362:	05 cd 00 00 00       	add    $0xcd,%eax
 367:	04 62                	add    $0x62,%al
 369:	03 00                	add    (%rax),%eax
 36b:	00 14 6b             	add    %dl,(%rbx,%rbp,2)
 36e:	02 00                	add    (%rax),%al
 370:	00 14 cd 00 00 00 05 	add    %dl,0x5000000(,%rcx,8)
 377:	70 02                	jo     37b <spin_lock.cpp.cc2eb890+0x37b>
 379:	00 00                	add    %al,(%rax)
 37b:	05 6b 02 00 00       	add    $0x26b,%eax
 380:	05 75 02 00 00       	add    $0x275,%eax
 385:	01 01                	add    %eax,(%rcx)
 387:	06                   	(bad)
 388:	00 00                	add    %al,(%rax)
 38a:	00 00                	add    %al,(%rax)
 38c:	04 85                	add    $0x85,%al
 38e:	03 00                	add    (%rax),%eax
 390:	00 01                	add    %al,(%rcx)
 392:	04 04                	add    $0x4,%al
 394:	00 00                	add    %al,(%rax)
 396:	00 00                	add    %al,(%rax)
 398:	01 08                	add    %ecx,(%rax)
 39a:	04 00                	add    $0x0,%al
 39c:	00 00                	add    %al,(%rax)
 39e:	00 01                	add    %al,(%rcx)
 3a0:	10 04 00             	adc    %al,(%rax,%rax,1)
 3a3:	00 00                	add    %al,(%rax)
 3a5:	00 01                	add    %al,(%rcx)
 3a7:	02 04 00             	add    (%rax,%rax,1),%al
 3aa:	00 00                	add    %al,(%rax)
 3ac:	00 01                	add    %al,(%rcx)
 3ae:	04 04                	add    $0x4,%al
 3b0:	00 00                	add    %al,(%rax)
 3b2:	00 00                	add    %al,(%rax)
 3b4:	01 08                	add    %ecx,(%rax)
 3b6:	04 00                	add    $0x0,%al
 3b8:	00 00                	add    %al,(%rax)
 3ba:	00 01                	add    %al,(%rcx)
 3bc:	10 04 00             	adc    %al,(%rax,%rax,1)
 3bf:	00 00                	add    %al,(%rax)
 3c1:	00 01                	add    %al,(%rcx)
 3c3:	02 04 00             	add    (%rax,%rax,1),%al
 3c6:	00 00                	add    %al,(%rax)
 3c8:	00 0b                	add    %cl,(%rbx)
 3ca:	00 00                	add    %al,(%rax)
 3cc:	00 00                	add    %al,(%rax)
 3ce:	04 59                	add    $0x59,%al
 3d0:	01 0b                	add    %ecx,(%rbx)
 3d2:	2a 00                	sub    (%rax),%al
 3d4:	00 00                	add    %al,(%rax)
 3d6:	00 05 22 11 d6 04    	add    %al,0x4d61122(%rip)        # 4d614fe <spin_lock.cpp.cc2eb890+0x4d614fe>
 3dc:	00 00                	add    %al,(%rax)
 3de:	2b 4c 69 62          	sub    0x62(%rcx,%rbp,2),%ecx
 3e2:	00 05 22 1d c9 04    	add    %al,0x4c91d22(%rip)        # 4c9210a <spin_lock.cpp.cc2eb890+0x4c9210a>
 3e8:	00 00                	add    %al,(%rax)
 3ea:	2c 00                	sub    $0x0,%al
 3ec:	00 00                	add    %al,(%rax)
 3ee:	00 05 27 1a db 04    	add    %al,0x4db1a27(%rip)        # 4db1e1b <spin_lock.cpp.cc2eb890+0x4db1e1b>
 3f4:	00 00                	add    %al,(%rax)
 3f6:	2d 00 00 00 00       	sub    $0x0,%eax
 3fb:	05 2e 1a 10 03       	add    $0x3101a2e,%eax
 400:	00 00                	add    %al,(%rax)
 402:	20 2e                	and    %ch,(%rsi)
 404:	00 00                	add    %al,(%rax)
 406:	00 00                	add    %al,(%rax)
 408:	10 06                	adc    %al,(%rsi)
 40a:	05 0b 03 04 00       	add    $0x4030b,%eax
 40f:	00 10                	add    %dl,(%rax)
 411:	cd 00                	int    $0x0
 413:	00 00                	add    %al,(%rax)
 415:	08 2f                	or     %ch,(%rdi)
 417:	00 00                	add    %al,(%rax)
 419:	00 00                	add    %al,(%rax)
 41b:	fd                   	std
 41c:	04 00                	add    $0x0,%al
 41e:	00 00                	add    %al,(%rax)
 420:	01 15 00 00 00 00    	add    %edx,0x0(%rip)        # 426 <spin_lock.cpp.cc2eb890+0x426>
 426:	08 00                	or     %al,(%rax)
 428:	00 00                	add    %al,(%rax)
 42a:	00 33                	add    %dh,(%rbx)
 42c:	04 00                	add    $0x0,%al
 42e:	00 39                	add    %bh,(%rcx)
 430:	04 00                	add    $0x0,%al
 432:	00 02                	add    %al,(%rdx)
 434:	0c 05                	or     $0x5,%al
 436:	00 00                	add    %al,(%rax)
 438:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 43e <spin_lock.cpp.cc2eb890+0x43e>
 43e:	0a 00                	or     (%rax),%al
 440:	00 00                	add    %al,(%rax)
 442:	00 4b 04             	add    %cl,0x4(%rbx)
 445:	00 00                	add    %al,(%rax)
 447:	56                   	push   %rsi
 448:	04 00                	add    $0x0,%al
 44a:	00 02                	add    %al,(%rdx)
 44c:	0c 05                	or     $0x5,%al
 44e:	00 00                	add    %al,(%rax)
 450:	03 c9                	add    %ecx,%ecx
 452:	04 00                	add    $0x0,%al
 454:	00 00                	add    %al,(%rax)
 456:	30 00                	xor    %al,(%rax)
 458:	00 00                	add    %al,(%rax)
 45a:	00 06                	add    %al,(%rsi)
 45c:	0d 11 00 00 00       	or     $0x11,%eax
 461:	00 01                	add    %al,(%rcx)
 463:	03 04 00             	add    (%rax,%rax,1),%eax
 466:	00 01                	add    %al,(%rcx)
 468:	01 71 04             	add    %esi,0x4(%rcx)
 46b:	00 00                	add    %al,(%rax)
 46d:	7c 04                	jl     473 <spin_lock.cpp.cc2eb890+0x473>
 46f:	00 00                	add    %al,(%rax)
 471:	02 0c 05 00 00 02 09 	add    0x9020000(,%rax,1),%cl
 478:	03 00                	add    (%rax),%eax
 47a:	00 00                	add    %al,(%rax)
 47c:	16                   	(bad)
 47d:	00 00                	add    %al,(%rax)
 47f:	00 00                	add    %al,(%rax)
 481:	05 00 00 00 00       	add    $0x0,%eax
 486:	8e 04 00             	mov    (%rax,%rax,1),%es
 489:	00 94 04 00 00 02 0c 	add    %dl,0xc020000(%rsp,%rax,1)
 490:	05 00 00 00 16       	add    $0x16000000,%eax
 495:	00 00                	add    %al,(%rax)
 497:	00 00                	add    %al,(%rax)
 499:	08 00                	or     %al,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	00 a6 04 00 00 ac    	add    %ah,-0x53fffffc(%rsi)
 4a3:	04 00                	add    $0x0,%al
 4a5:	00 02                	add    %al,(%rdx)
 4a7:	0c 05                	or     $0x5,%al
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 31                	add    %dh,(%rcx)
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 00                	add    %al,(%rax)
 4b1:	06                   	(bad)
 4b2:	18 0e                	sbb    %cl,(%rsi)
 4b4:	00 00                	add    %al,(%rax)
 4b6:	00 00                	add    %al,(%rax)
 4b8:	31 03                	xor    %eax,(%rbx)
 4ba:	00 00                	add    %al,(%rax)
 4bc:	01 c1                	add    %eax,%ecx
 4be:	04 00                	add    $0x0,%al
 4c0:	00 02                	add    %al,(%rdx)
 4c2:	0c 05                	or     $0x5,%al
 4c4:	00 00                	add    %al,(%rax)
 4c6:	00 00                	add    %al,(%rax)
 4c8:	00 0f                	add    %cl,(%rdi)
 4ca:	00 00                	add    %al,(%rax)
 4cc:	00 00                	add    %al,(%rax)
 4ce:	08 1c 07             	or     %bl,(%rdi,%rax,1)
 4d1:	31 03                	xor    %eax,(%rbx)
 4d3:	00 00                	add    %al,(%rax)
 4d5:	00 05 8c 03 00 00    	add    %al,0x38c(%rip)        # 867 <spin_lock.cpp.cc2eb890+0x867>
 4db:	04 d6                	add    $0xd6,%al
 4dd:	04 00                	add    $0x0,%al
 4df:	00 17                	add    %dl,(%rdi)
 4e1:	ea                   	(bad)
 4e2:	03 00                	add    (%rax),%eax
 4e4:	00 17                	add    %dl,(%rdi)
 4e6:	f6 03 00             	testb  $0x0,(%rbx)
 4e9:	00 32                	add    %dh,(%rdx)
 4eb:	07                   	(bad)
 4ec:	03 1d de 03 00 00    	add    0x3de(%rip),%ebx        # 8d0 <spin_lock.cpp.cc2eb890+0x8d0>
 4f2:	33 09                	xor    (%rcx),%ecx
 4f4:	03 00                	add    (%rax),%eax
 4f6:	00 fd                	add    %bh,%ch
 4f8:	04 00                	add    $0x0,%al
 4fa:	00 34 00             	add    %dh,(%rax,%rax,1)
 4fd:	05 02 05 00 00       	add    $0x502,%eax
 502:	35 08 00 00 00       	xor    $0x8,%eax
 507:	00 f2                	add    %dh,%dl
 509:	04 00                	add    $0x0,%al
 50b:	00 05 03 04 00 00    	add    %al,0x403(%rip)        # 914 <spin_lock.cpp.cc2eb890+0x914>
 511:	04 0c                	add    $0xc,%al
 513:	05 00 00 09 94       	add    $0x94090000,%eax
 518:	04 00                	add    $0x0,%al
 51a:	00 23                	add    %ah,(%rbx)
 51c:	05 00 00 2d 05       	add    $0x52d0000,%eax
 521:	00 00                	add    %al,(%rax)
 523:	0a 00                	or     (%rax),%al
 525:	00 00                	add    %al,(%rax)
 527:	00 11                	add    %dl,(%rcx)
 529:	05 00 00 00 09       	add    $0x9000000,%eax
 52e:	7c 04                	jl     534 <spin_lock.cpp.cc2eb890+0x534>
 530:	00 00                	add    %al,(%rax)
 532:	3a 05 00 00 44 05    	cmp    0x5440000(%rip),%al        # 5440538 <spin_lock.cpp.cc2eb890+0x5440538>
 538:	00 00                	add    %al,(%rax)
 53a:	0a 00                	or     (%rax),%al
 53c:	00 00                	add    %al,(%rax)
 53e:	00 11                	add    %dl,(%rcx)
 540:	05 00 00 00 0d       	add    $0xd000000,%eax
 545:	7a 02                	jp     549 <spin_lock.cpp.cc2eb890+0x549>
 547:	00 00                	add    %al,(%rax)
 549:	68 05 00 00 07       	push   $0x7000005
 54e:	5f                   	pop    %rdi
 54f:	5f                   	pop    %rdi
 550:	61                   	(bad)
 551:	00 03                	add    %al,(%rbx)
 553:	d8 04 2b             	fadds  (%rbx,%rbp,1)
 556:	62 03 00 00 07       	(bad)
 55b:	5f                   	pop    %rdi
 55c:	5f                   	pop    %rdi
 55d:	6d                   	insl   (%dx),%es:(%rdi)
 55e:	00 03                	add    %al,(%rbx)
 560:	d8 04 3d 3d 00 00 00 	fadds  0x3d(,%rdi,1)
 567:	00 0d 96 02 00 00    	add    %cl,0x296(%rip)        # 803 <spin_lock.cpp.cc2eb890+0x803>
 56d:	8c 05 00 00 07 5f    	mov    %es,0x5f070000(%rip)        # 5f070573 <spin_lock.cpp.cc2eb890+0x5f070573>
 573:	5f                   	pop    %rdi
 574:	61                   	(bad)
 575:	00 03                	add    %al,(%rbx)
 577:	ba 04 32 62 03       	mov    $0x3623204,%edx
 57c:	00 00                	add    %al,(%rax)
 57e:	07                   	(bad)
 57f:	5f                   	pop    %rdi
 580:	5f                   	pop    %rdi
 581:	6d                   	insl   (%dx),%es:(%rdi)
 582:	00 03                	add    %al,(%rbx)
 584:	bb 04 16 3d 00       	mov    $0x3d1604,%ebx
 589:	00 00                	add    %al,(%rax)
 58b:	00 09                	add    %cl,(%rcx)
 58d:	16                   	(bad)
 58e:	02 00                	add    (%rax),%al
 590:	00 99 05 00 00 bd    	add    %bl,-0x42fffffb(%rcx)
 596:	05 00 00 0a 00       	add    $0xa0000,%eax
 59b:	00 00                	add    %al,(%rax)
 59d:	00 67 03             	add    %ah,0x3(%rdi)
 5a0:	00 00                	add    %al,(%rax)
 5a2:	07                   	(bad)
 5a3:	5f                   	pop    %rdi
 5a4:	5f                   	pop    %rdi
 5a5:	6d                   	insl   (%dx),%es:(%rdi)
 5a6:	00 02                	add    %al,(%rdx)
 5a8:	19 01                	sbb    %eax,(%rcx)
 5aa:	18 3d 00 00 00 36    	sbb    %bh,0x36000000(%rip)        # 360005b0 <spin_lock.cpp.cc2eb890+0x360005b0>
 5b0:	5f                   	pop    %rdi
 5b1:	5f                   	pop    %rdi
 5b2:	62                   	(bad)
 5b3:	00 02                	add    %al,(%rdx)
 5b5:	1b 01                	sbb    (%rcx),%eax
 5b7:	14 3d                	adc    $0x3d,%al
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 00                	add    %al,(%rax)
 5bd:	09 92 01 00 00 ca    	or     %edx,-0x35ffffff(%rdx)
 5c3:	05 00 00 df 05       	add    $0x5df0000,%eax
 5c8:	00 00                	add    %al,(%rax)
 5ca:	0a 00                	or     (%rax),%al
 5cc:	00 00                	add    %al,(%rax)
 5ce:	00 67 03             	add    %ah,0x3(%rdi)
 5d1:	00 00                	add    %al,(%rax)
 5d3:	18 5f 5f             	sbb    %bl,0x5f(%rdi)
 5d6:	6d                   	insl   (%dx),%es:(%rdi)
 5d7:	00 e0                	add    %ah,%al
 5d9:	1f                   	(bad)
 5da:	3d 00 00 00 00       	cmp    $0x0,%eax
 5df:	0d b6 02 00 00       	or     $0x2b6,%eax
 5e4:	00 06                	add    %al,(%rsi)
 5e6:	00 00                	add    %al,(%rax)
 5e8:	18 5f 5f             	sbb    %bl,0x5f(%rdi)
 5eb:	6d                   	insl   (%dx),%es:(%rdi)
 5ec:	00 6d 1a             	add    %ch,0x1a(%rbp)
 5ef:	3d 00 00 00 37       	cmp    $0x37000000,%eax
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	02 6d 37             	add    0x37(%rbp),%ch
 5fb:	74 00                	je     5fd <spin_lock.cpp.cc2eb890+0x5fd>
 5fd:	00 00                	add    %al,(%rax)
 5ff:	00 19                	add    %bl,(%rcx)
 601:	d5 02 00 00          	{rex2 0x2} add %al,(%rax)
 605:	19 e2                	sbb    %esp,%edx
 607:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.debuglto_.debug_abbrev:

0000000000000000 <.gnu.debuglto_.debug_abbrev>:
   0:	01 24 00             	add    %esp,(%rax,%rax,1)
   3:	0b 0b                	or     (%rbx),%ecx
   5:	3e 0b 03             	ds or  (%rbx),%eax
   8:	0e                   	(bad)
   9:	00 00                	add    %al,(%rax)
   b:	02 05 00 49 13 34    	add    0x34134900(%rip),%al        # 34134911 <spin_lock.cpp.cc2eb890+0x34134911>
  11:	19 00                	sbb    %eax,(%rax)
  13:	00 03                	add    %al,(%rbx)
  15:	05 00 49 13 00       	add    $0x134900,%eax
  1a:	00 04 26             	add    %al,(%rsi,%riz,1)
  1d:	00 49 13             	add    %cl,0x13(%rcx)
  20:	00 00                	add    %al,(%rax)
  22:	05 0f 00 0b 21       	add    $0x210b000f,%eax
  27:	08 49 13             	or     %cl,0x13(%rcx)
  2a:	00 00                	add    %al,(%rax)
  2c:	06                   	(bad)
  2d:	28 00                	sub    %al,(%rax)
  2f:	03 0e                	add    (%rsi),%ecx
  31:	1c 0b                	sbb    $0xb,%al
  33:	00 00                	add    %al,(%rax)
  35:	07                   	(bad)
  36:	05 00 03 08 3a       	add    $0x3a080300,%eax
  3b:	0b 3b                	or     (%rbx),%edi
  3d:	05 39 0b 49 13       	add    $0x13490b39,%eax
  42:	00 00                	add    %al,(%rax)
  44:	08 2e                	or     %ch,(%rsi)
  46:	01 3f                	add    %edi,(%rdi)
  48:	19 03                	sbb    %eax,(%rbx)
  4a:	0e                   	(bad)
  4b:	3a 21                	cmp    (%rcx),%ah
  4d:	02 3b                	add    (%rbx),%bh
  4f:	0b 39                	or     (%rcx),%edi
  51:	21 05 6e 0e 49 13    	and    %eax,0x13490e6e(%rip)        # 13490ec5 <spin_lock.cpp.cc2eb890+0x13490ec5>
  57:	3c 19                	cmp    $0x19,%al
  59:	64 13 01             	adc    %fs:(%rcx),%eax
  5c:	13 00                	adc    (%rax),%eax
  5e:	00 09                	add    %cl,(%rcx)
  60:	2e 01 47 13          	cs add %eax,0x13(%rdi)
  64:	64 13 01             	adc    %fs:(%rcx),%eax
  67:	13 00                	adc    (%rax),%eax
  69:	00 0a                	add    %cl,(%rdx)
  6b:	05 00 03 0e 49       	add    $0x490e0300,%eax
  70:	13 34 19             	adc    (%rcx,%rbx,1),%esi
  73:	00 00                	add    %al,(%rax)
  75:	0b 39                	or     (%rcx),%edi
  77:	00 03                	add    %al,(%rbx)
  79:	0e                   	(bad)
  7a:	3a 0b                	cmp    (%rbx),%cl
  7c:	3b 05 39 0b 00 00    	cmp    0xb39(%rip),%eax        # bbb <spin_lock.cpp.cc2eb890+0xbbb>
  82:	0c 28                	or     $0x28,%al
  84:	00 03                	add    %al,(%rbx)
  86:	0e                   	(bad)
  87:	1c 06                	sbb    $0x6,%al
  89:	00 00                	add    %al,(%rax)
  8b:	0d 2e 01 47 13       	or     $0x1347012e,%eax
  90:	01 13                	add    %edx,(%rbx)
  92:	00 00                	add    %al,(%rax)
  94:	0e                   	(bad)
  95:	13 01                	adc    (%rcx),%eax
  97:	03 0e                	add    (%rsi),%ecx
  99:	0b 21                	or     (%rcx),%esp
  9b:	01 3a                	add    %edi,(%rdx)
  9d:	21 02                	and    %eax,(%rdx)
  9f:	3b 0b                	cmp    (%rbx),%ecx
  a1:	39 21                	cmp    %esp,(%rcx)
  a3:	0a 01                	or     (%rcx),%al
  a5:	13 00                	adc    (%rax),%eax
  a7:	00 0f                	add    %cl,(%rdi)
  a9:	16                   	(bad)
  aa:	00 03                	add    %al,(%rbx)
  ac:	0e                   	(bad)
  ad:	3a 0b                	cmp    (%rbx),%cl
  af:	3b 0b                	cmp    (%rbx),%ecx
  b1:	39 0b                	cmp    %ecx,(%rbx)
  b3:	49 13 00             	adc    (%r8),%rax
  b6:	00 10                	add    %dl,(%rax)
  b8:	1c 00                	sbb    $0x0,%al
  ba:	49 13 38             	adc    (%r8),%rdi
  bd:	0b 00                	or     (%rax),%eax
  bf:	00 11                	add    %dl,(%rcx)
  c1:	2e 01 3f             	cs add %edi,(%rdi)
  c4:	19 03                	sbb    %eax,(%rbx)
  c6:	0e                   	(bad)
  c7:	3a 21                	cmp    (%rcx),%ah
  c9:	02 3b                	add    (%rbx),%bh
  cb:	0b 39                	or     (%rcx),%edi
  cd:	21 05 6e 0e 3c 19    	and    %eax,0x193c0e6e(%rip)        # 193c0f41 <spin_lock.cpp.cc2eb890+0x193c0f41>
  d3:	8b 01                	mov    (%rcx),%eax
  d5:	21 01                	and    %eax,(%rcx)
  d7:	64 13 01             	adc    %fs:(%rcx),%eax
  da:	13 00                	adc    (%rax),%eax
  dc:	00 12                	add    %dl,(%rdx)
  de:	2e 01 3f             	cs add %edi,(%rdi)
  e1:	19 03                	sbb    %eax,(%rbx)
  e3:	0e                   	(bad)
  e4:	3a 21                	cmp    (%rcx),%ah
  e6:	02 3b                	add    (%rbx),%bh
  e8:	0b 39                	or     (%rcx),%edi
  ea:	21 12                	and    %edx,(%rdx)
  ec:	6e                   	outsb  %ds:(%rsi),(%dx)
  ed:	0e                   	(bad)
  ee:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
  f2:	8a 01                	mov    (%rcx),%al
  f4:	19 64 13 01          	sbb    %esp,0x1(%rbx,%rdx,1)
  f8:	13 00                	adc    (%rax),%eax
  fa:	00 13                	add    %dl,(%rbx)
  fc:	2e 01 3f             	cs add %edi,(%rdi)
  ff:	19 03                	sbb    %eax,(%rbx)
 101:	0e                   	(bad)
 102:	3a 21                	cmp    (%rcx),%ah
 104:	02 3b                	add    (%rbx),%bh
 106:	05 39 21 05 6e       	add    $0x6e052139,%eax
 10b:	0e                   	(bad)
 10c:	3c 19                	cmp    $0x19,%al
 10e:	64 13 01             	adc    %fs:(%rcx),%eax
 111:	13 00                	adc    (%rax),%eax
 113:	00 14 10             	add    %dl,(%rax,%rdx,1)
 116:	00 0b                	add    %cl,(%rbx)
 118:	21 08                	and    %ecx,(%rax)
 11a:	49 13 00             	adc    (%r8),%rax
 11d:	00 15 2e 01 3f 19    	add    %dl,0x193f012e(%rip)        # 193f0251 <spin_lock.cpp.cc2eb890+0x193f0251>
 123:	03 0e                	add    (%rsi),%ecx
 125:	3a 21                	cmp    (%rcx),%ah
 127:	06                   	(bad)
 128:	3b 0b                	cmp    (%rbx),%ecx
 12a:	39 21                	cmp    %esp,(%rcx)
 12c:	12 6e 0e             	adc    0xe(%rsi),%ch
 12f:	32 21                	xor    (%rcx),%ah
 131:	01 3c 19             	add    %edi,(%rcx,%rbx,1)
 134:	63 19                	movsxd (%rcx),%ebx
 136:	64 13 01             	adc    %fs:(%rcx),%eax
 139:	13 00                	adc    (%rax),%eax
 13b:	00 16                	add    %dl,(%rsi)
 13d:	2e 01 3f             	cs add %edi,(%rdi)
 140:	19 03                	sbb    %eax,(%rbx)
 142:	0e                   	(bad)
 143:	3a 21                	cmp    (%rcx),%ah
 145:	07                   	(bad)
 146:	3b 0b                	cmp    (%rbx),%ecx
 148:	39 21                	cmp    %esp,(%rcx)
 14a:	06                   	(bad)
 14b:	6e                   	outsb  %ds:(%rsi),(%dx)
 14c:	0e                   	(bad)
 14d:	32 21                	xor    (%rcx),%ah
 14f:	01 3c 19             	add    %edi,(%rcx,%rbx,1)
 152:	64 13 01             	adc    %fs:(%rcx),%eax
 155:	13 00                	adc    (%rax),%eax
 157:	00 17                	add    %dl,(%rdi)
 159:	34 00                	xor    $0x0,%al
 15b:	47 13 00             	rex.RXB adc (%r8),%r8d
 15e:	00 18                	add    %bl,(%rax)
 160:	05 00 03 08 3a       	add    $0x3a080300,%eax
 165:	21 02                	and    %eax,(%rdx)
 167:	3b 0b                	cmp    (%rbx),%ecx
 169:	39 0b                	cmp    %ecx,(%rbx)
 16b:	49 13 00             	adc    (%r8),%rax
 16e:	00 19                	add    %bl,(%rcx)
 170:	2e 00 47 13          	cs add %al,0x13(%rdi)
 174:	00 00                	add    %al,(%rax)
 176:	1a 11                	sbb    (%rcx),%dl
 178:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b148c <spin_lock.cpp.cc2eb890+0x30b148c>
 17e:	1f                   	(bad)
 17f:	1b 1f                	sbb    (%rdi),%ebx
 181:	10 17                	adc    %dl,(%rdi)
 183:	00 00                	add    %al,(%rax)
 185:	1b 39                	sbb    (%rcx),%edi
 187:	01 03                	add    %eax,(%rbx)
 189:	08 3a                	or     %bh,(%rdx)
 18b:	0b 3b                	or     (%rbx),%edi
 18d:	05 39 0b 01 13       	add    $0x13010b39,%eax
 192:	00 00                	add    %al,(%rax)
 194:	1c 04                	sbb    $0x4,%al
 196:	01 03                	add    %eax,(%rbx)
 198:	0e                   	(bad)
 199:	6d                   	insl   (%dx),%es:(%rdi)
 19a:	19 3e                	sbb    %edi,(%rsi)
 19c:	0b 0b                	or     (%rbx),%ecx
 19e:	0b 49 13             	or     0x13(%rcx),%ecx
 1a1:	3a 0b                	cmp    (%rbx),%cl
 1a3:	3b 0b                	cmp    (%rbx),%ecx
 1a5:	39 0b                	cmp    %ecx,(%rbx)
 1a7:	01 13                	add    %edx,(%rbx)
 1a9:	00 00                	add    %al,(%rax)
 1ab:	1d 04 01 03 0e       	sbb    $0xe030104,%eax
 1b0:	3e 0b 0b             	ds or  (%rbx),%ecx
 1b3:	0b 49 13             	or     0x13(%rcx),%ecx
 1b6:	3a 0b                	cmp    (%rbx),%cl
 1b8:	3b 0b                	cmp    (%rbx),%ecx
 1ba:	39 0b                	cmp    %ecx,(%rbx)
 1bc:	01 13                	add    %edx,(%rbx)
 1be:	00 00                	add    %al,(%rax)
 1c0:	1e                   	(bad)
 1c1:	28 00                	sub    %al,(%rax)
 1c3:	03 0e                	add    (%rsi),%ecx
 1c5:	1c 05                	sbb    $0x5,%al
 1c7:	00 00                	add    %al,(%rax)
 1c9:	1f                   	(bad)
 1ca:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
 1cf:	0b 3b                	or     (%rbx),%edi
 1d1:	0b 39                	or     (%rcx),%edi
 1d3:	0b 49 13             	or     0x13(%rcx),%ecx
 1d6:	38 0b                	cmp    %cl,(%rbx)
 1d8:	00 00                	add    %al,(%rax)
 1da:	20 2e                	and    %ch,(%rsi)
 1dc:	01 3f                	add    %edi,(%rdi)
 1de:	19 03                	sbb    %eax,(%rbx)
 1e0:	0e                   	(bad)
 1e1:	3a 0b                	cmp    (%rbx),%cl
 1e3:	3b 0b                	cmp    (%rbx),%ecx
 1e5:	39 0b                	cmp    %ecx,(%rbx)
 1e7:	6e                   	outsb  %ds:(%rsi),(%dx)
 1e8:	0e                   	(bad)
 1e9:	3c 19                	cmp    $0x19,%al
 1eb:	8a 01                	mov    (%rcx),%al
 1ed:	19 64 13 01          	sbb    %esp,0x1(%rbx,%rdx,1)
 1f1:	13 00                	adc    (%rax),%eax
 1f3:	00 21                	add    %ah,(%rcx)
 1f5:	2e 01 3f             	cs add %edi,(%rdi)
 1f8:	19 03                	sbb    %eax,(%rbx)
 1fa:	0e                   	(bad)
 1fb:	3a 0b                	cmp    (%rbx),%cl
 1fd:	3b 0b                	cmp    (%rbx),%ecx
 1ff:	39 0b                	cmp    %ecx,(%rbx)
 201:	6e                   	outsb  %ds:(%rsi),(%dx)
 202:	0e                   	(bad)
 203:	3c 19                	cmp    $0x19,%al
 205:	64 13 01             	adc    %fs:(%rcx),%eax
 208:	13 00                	adc    (%rax),%eax
 20a:	00 22                	add    %ah,(%rdx)
 20c:	2e 01 3f             	cs add %edi,(%rdi)
 20f:	19 03                	sbb    %eax,(%rbx)
 211:	0e                   	(bad)
 212:	3a 0b                	cmp    (%rbx),%cl
 214:	3b 05 39 0b 6e 0e    	cmp    0xe6e0b39(%rip),%eax        # e6e0d53 <spin_lock.cpp.cc2eb890+0xe6e0d53>
 21a:	49 13 32             	adc    (%r10),%rsi
 21d:	0b 3c 19             	or     (%rcx,%rbx,1),%edi
 220:	00 00                	add    %al,(%rax)
 222:	23 35 00 49 13 00    	and    0x134900(%rip),%esi        # 134b28 <spin_lock.cpp.cc2eb890+0x134b28>
 228:	00 24 2e             	add    %ah,(%rsi,%rbp,1)
 22b:	01 3f                	add    %edi,(%rdi)
 22d:	19 03                	sbb    %eax,(%rbx)
 22f:	0e                   	(bad)
 230:	3a 0b                	cmp    (%rbx),%cl
 232:	3b 05 39 0b 6e 0e    	cmp    0xe6e0b39(%rip),%eax        # e6e0d71 <spin_lock.cpp.cc2eb890+0xe6e0d71>
 238:	3c 19                	cmp    $0x19,%al
 23a:	01 13                	add    %edx,(%rbx)
 23c:	00 00                	add    %al,(%rax)
 23e:	25 2e 01 3f 19       	and    $0x193f012e,%eax
 243:	03 0e                	add    (%rsi),%ecx
 245:	3a 0b                	cmp    (%rbx),%cl
 247:	3b 05 39 0b 6e 0e    	cmp    0xe6e0b39(%rip),%eax        # e6e0d86 <spin_lock.cpp.cc2eb890+0xe6e0d86>
 24d:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 251:	01 13                	add    %edx,(%rbx)
 253:	00 00                	add    %al,(%rax)
 255:	26 2e 01 3f          	es cs add %edi,(%rdi)
 259:	19 03                	sbb    %eax,(%rbx)
 25b:	0e                   	(bad)
 25c:	3a 0b                	cmp    (%rbx),%cl
 25e:	3b 0b                	cmp    (%rbx),%ecx
 260:	39 0b                	cmp    %ecx,(%rbx)
 262:	6e                   	outsb  %ds:(%rsi),(%dx)
 263:	0e                   	(bad)
 264:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 268:	01 13                	add    %edx,(%rbx)
 26a:	00 00                	add    %al,(%rax)
 26c:	27                   	(bad)
 26d:	2e 00 3f             	cs add %bh,(%rdi)
 270:	19 03                	sbb    %eax,(%rbx)
 272:	0e                   	(bad)
 273:	3a 0b                	cmp    (%rbx),%cl
 275:	3b 05 39 0b 6e 0e    	cmp    0xe6e0b39(%rip),%eax        # e6e0db4 <spin_lock.cpp.cc2eb890+0xe6e0db4>
 27b:	3c 19                	cmp    $0x19,%al
 27d:	00 00                	add    %al,(%rax)
 27f:	28 2e                	sub    %ch,(%rsi)
 281:	00 3f                	add    %bh,(%rdi)
 283:	19 03                	sbb    %eax,(%rbx)
 285:	0e                   	(bad)
 286:	3a 0b                	cmp    (%rbx),%cl
 288:	3b 05 39 0b 6e 0e    	cmp    0xe6e0b39(%rip),%eax        # e6e0dc7 <spin_lock.cpp.cc2eb890+0xe6e0dc7>
 28e:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 292:	00 00                	add    %al,(%rax)
 294:	29 24 00             	sub    %esp,(%rax,%rax,1)
 297:	0b 0b                	or     (%rbx),%ecx
 299:	3e 0b 03             	ds or  (%rbx),%eax
 29c:	08 00                	or     %al,(%rax)
 29e:	00 2a                	add    %ch,(%rdx)
 2a0:	39 01                	cmp    %eax,(%rcx)
 2a2:	03 0e                	add    (%rsi),%ecx
 2a4:	3a 0b                	cmp    (%rbx),%cl
 2a6:	3b 0b                	cmp    (%rbx),%ecx
 2a8:	39 0b                	cmp    %ecx,(%rbx)
 2aa:	01 13                	add    %edx,(%rbx)
 2ac:	00 00                	add    %al,(%rax)
 2ae:	2b 39                	sub    (%rcx),%edi
 2b0:	01 03                	add    %eax,(%rbx)
 2b2:	08 3a                	or     %bh,(%rdx)
 2b4:	0b 3b                	or     (%rbx),%edi
 2b6:	0b 39                	or     (%rcx),%edi
 2b8:	0b 01                	or     (%rcx),%eax
 2ba:	13 00                	adc    (%rax),%eax
 2bc:	00 2c 34             	add    %ch,(%rsp,%rsi,1)
 2bf:	00 03                	add    %al,(%rbx)
 2c1:	0e                   	(bad)
 2c2:	3a 0b                	cmp    (%rbx),%cl
 2c4:	3b 0b                	cmp    (%rbx),%ecx
 2c6:	39 0b                	cmp    %ecx,(%rbx)
 2c8:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 2cc:	6c                   	insb   (%dx),%es:(%rdi)
 2cd:	19 00                	sbb    %eax,(%rax)
 2cf:	00 2d 34 00 03 0e    	add    %ch,0xe030034(%rip)        # e030309 <spin_lock.cpp.cc2eb890+0xe030309>
 2d5:	3a 0b                	cmp    (%rbx),%cl
 2d7:	3b 0b                	cmp    (%rbx),%ecx
 2d9:	39 0b                	cmp    %ecx,(%rbx)
 2db:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 2df:	1c 0b                	sbb    $0xb,%al
 2e1:	6c                   	insb   (%dx),%es:(%rdi)
 2e2:	19 00                	sbb    %eax,(%rax)
 2e4:	00 2e                	add    %ch,(%rsi)
 2e6:	02 01                	add    (%rcx),%al
 2e8:	03 0e                	add    (%rsi),%ecx
 2ea:	0b 0b                	or     (%rbx),%ecx
 2ec:	3a 0b                	cmp    (%rbx),%cl
 2ee:	3b 0b                	cmp    (%rbx),%ecx
 2f0:	39 0b                	cmp    %ecx,(%rbx)
 2f2:	1d 13 00 00 2f       	sbb    $0x2f000013,%eax
 2f7:	0d 00 03 0e 49       	or     $0x490e0300,%eax
 2fc:	13 38                	adc    (%rax),%edi
 2fe:	0b 34 19             	or     (%rcx,%rbx,1),%esi
 301:	32 0b                	xor    (%rbx),%cl
 303:	00 00                	add    %al,(%rax)
 305:	30 2e                	xor    %ch,(%rsi)
 307:	01 3f                	add    %edi,(%rdi)
 309:	19 03                	sbb    %eax,(%rbx)
 30b:	0e                   	(bad)
 30c:	3a 0b                	cmp    (%rbx),%cl
 30e:	3b 0b                	cmp    (%rbx),%ecx
 310:	39 0b                	cmp    %ecx,(%rbx)
 312:	6e                   	outsb  %ds:(%rsi),(%dx)
 313:	0e                   	(bad)
 314:	4c 0b 1d 13 32 0b 3c 	or     0x3c0b3213(%rip),%r11        # 3c0b352e <spin_lock.cpp.cc2eb890+0x3c0b352e>
 31b:	19 8b 01 0b 64 13    	sbb    %ecx,0x13640b01(%rbx)
 321:	01 13                	add    %edx,(%rbx)
 323:	00 00                	add    %al,(%rax)
 325:	31 2e                	xor    %ebp,(%rsi)
 327:	01 3f                	add    %edi,(%rdi)
 329:	19 03                	sbb    %eax,(%rbx)
 32b:	0e                   	(bad)
 32c:	3a 0b                	cmp    (%rbx),%cl
 32e:	3b 0b                	cmp    (%rbx),%ecx
 330:	39 0b                	cmp    %ecx,(%rbx)
 332:	6e                   	outsb  %ds:(%rsi),(%dx)
 333:	0e                   	(bad)
 334:	49 13 32             	adc    (%r10),%rsi
 337:	0b 3c 19             	or     (%rcx,%rbx,1),%edi
 33a:	64 13 00             	adc    %fs:(%rax),%eax
 33d:	00 32                	add    %dh,(%rdx)
 33f:	3a 00                	cmp    (%rax),%al
 341:	3a 0b                	cmp    (%rbx),%cl
 343:	3b 0b                	cmp    (%rbx),%ecx
 345:	39 0b                	cmp    %ecx,(%rbx)
 347:	18 13                	sbb    %dl,(%rbx)
 349:	00 00                	add    %al,(%rax)
 34b:	33 15 01 49 13 01    	xor    0x1134901(%rip),%edx        # 1134c52 <spin_lock.cpp.cc2eb890+0x1134c52>
 351:	13 00                	adc    (%rax),%eax
 353:	00 34 18             	add    %dh,(%rax,%rbx,1)
 356:	00 00                	add    %al,(%rax)
 358:	00 35 0f 00 0b 0b    	add    %dh,0xb0b000f(%rip)        # b0b036d <spin_lock.cpp.cc2eb890+0xb0b036d>
 35e:	03 0e                	add    (%rsi),%ecx
 360:	49 13 00             	adc    (%r8),%rax
 363:	00 36                	add    %dh,(%rsi)
 365:	34 00                	xor    $0x0,%al
 367:	03 08                	add    (%rax),%ecx
 369:	3a 0b                	cmp    (%rbx),%cl
 36b:	3b 05 39 0b 49 13    	cmp    0x13490b39(%rip),%eax        # 13490eaa <spin_lock.cpp.cc2eb890+0x13490eaa>
 371:	00 00                	add    %al,(%rax)
 373:	37                   	(bad)
 374:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 379:	0b 3b                	or     (%rbx),%edi
 37b:	0b 39                	or     (%rcx),%edi
 37d:	0b 49 13             	or     0x13(%rcx),%ecx
 380:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.debuglto_.debug_line:

0000000000000000 <.gnu.debuglto_.debug_line>:
   0:	69 00 00 00 05 00    	imul   $0x50000,(%rax),%eax
   6:	08 00                	or     %al,(%rax)
   8:	61                   	(bad)
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	f6 f2                	div    %dl
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)
  21:	06                   	(bad)
	...
  3a:	02 01                	add    (%rcx),%al
  3c:	1f                   	(bad)
  3d:	02 0b                	add    (%rbx),%cl
  3f:	09 00                	or     %eax,(%rax)
	...
  49:	05 00 00 00 00       	add    $0x0,%eax
  4e:	03 00                	add    (%rax),%eax
  50:	00 00                	add    %al,(%rax)
  52:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 58 <.gnu.debuglto_.debug_line+0x58>
  58:	04 00                	add    $0x0,%al
  5a:	00 00                	add    %al,(%rax)
  5c:	00 01                	add    %al,(%rcx)
  5e:	00 00                	add    %al,(%rax)
  60:	00 00                	add    %al,(%rax)
  62:	01 00                	add    %eax,(%rax)
  64:	00 00                	add    %al,(%rax)
  66:	00 02                	add    %al,(%rdx)
  68:	00 00                	add    %al,(%rax)
  6a:	00 00                	add    %al,(%rax)
  6c:	01                   	.byte 0x1

Disassembly of section .gnu.debuglto_.debug_str:

0000000000000000 <.gnu.debuglto_.debug_str>:
   0:	5f                   	pop    %rdi
   1:	46 6c                	rex.RX insb (%dx),%es:(%rdi)
   3:	6f                   	outsl  %ds:(%rsi),(%dx)
   4:	61                   	(bad)
   5:	74 31                	je     38 <.gnu.debuglto_.debug_str+0x38>
   7:	36 00 6d 65          	ss add %ch,0x65(%rbp)
   b:	6d                   	insl   (%dx),%es:(%rdi)
   c:	6f                   	outsl  %ds:(%rsi),(%dx)
   d:	72 79                	jb     88 <.gnu.debuglto_.debug_str+0x88>
   f:	5f                   	pop    %rdi
  10:	6f                   	outsl  %ds:(%rsi),(%dx)
  11:	72 64                	jb     77 <.gnu.debuglto_.debug_str+0x77>
  13:	65 72 00             	gs jb  16 <.gnu.debuglto_.debug_str+0x16>
  16:	63 6f 6e             	movsxd 0x6e(%rdi),%ebp
  19:	73 75                	jae    90 <.gnu.debuglto_.debug_str+0x90>
  1b:	6d                   	insl   (%dx),%es:(%rdi)
  1c:	65 00 42 4f          	add    %al,%gs:0x4f(%rdx)
  20:	4f                   	rex.WRXB
  21:	4c 00 5f 5a          	rex.WR add %r11b,0x5a(%rdi)
  25:	53                   	push   %rbx
  26:	74 32                	je     5a <.gnu.debuglto_.debug_str+0x5a>
  28:	36 61                	ss (bad)
  2a:	74 6f                	je     9b <.gnu.debuglto_.debug_str+0x9b>
  2c:	6d                   	insl   (%dx),%es:(%rdi)
  2d:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
  34:	5f                   	pop    %rdi
  35:	63 6c 65 61          	movsxd 0x61(%rbp,%riz,2),%ebp
  39:	72 5f                	jb     9a <.gnu.debuglto_.debug_str+0x9a>
  3b:	65 78 70             	gs js  ae <.gnu.debuglto_.debug_str+0xae>
  3e:	6c                   	insb   (%dx),%es:(%rdi)
  3f:	69 63 69 74 50 53 74 	imul   $0x74535074,0x69(%rbx),%esp
  46:	31 31                	xor    %esi,(%rcx)
  48:	61                   	(bad)
  49:	74 6f                	je     ba <.gnu.debuglto_.debug_str+0xba>
  4b:	6d                   	insl   (%dx),%es:(%rdi)
  4c:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
  53:	53                   	push   %rbx
  54:	74 31                	je     87 <.gnu.debuglto_.debug_str+0x87>
  56:	32 6d 65             	xor    0x65(%rbp),%ch
  59:	6d                   	insl   (%dx),%es:(%rdi)
  5a:	6f                   	outsl  %ds:(%rsi),(%dx)
  5b:	72 79                	jb     d6 <.gnu.debuglto_.debug_str+0xd6>
  5d:	5f                   	pop    %rdi
  5e:	6f                   	outsl  %ds:(%rsi),(%dx)
  5f:	72 64                	jb     c5 <.gnu.debuglto_.debug_str+0xc5>
  61:	65 72 00             	gs jb  64 <.gnu.debuglto_.debug_str+0x64>
  64:	5f                   	pop    %rdi
  65:	5f                   	pop    %rdi
  66:	67 6c                	insb   (%dx),%es:(%edi)
  68:	69 62 63 78 78 5f 61 	imul   $0x615f7878,0x63(%rdx),%esp
  6f:	73 73                	jae    e4 <.gnu.debuglto_.debug_str+0xe4>
  71:	65 72 74             	gs jb  e8 <.gnu.debuglto_.debug_str+0xe8>
  74:	5f                   	pop    %rdi
  75:	66 61                	data16 (bad)
  77:	69 6c 00 5f 5f 73 77 	imul   $0x6177735f,0x5f(%rax,%rax,1),%ebp
  7e:	61 
  7f:	70 70                	jo     f1 <.gnu.debuglto_.debug_str+0xf1>
  81:	61                   	(bad)
  82:	62 6c 65 5f 77       	(bad)
  87:	69 74 68 5f 64 65 74 	imul   $0x61746564,0x5f(%rax,%rbp,2),%esi
  8e:	61 
  8f:	69 6c 73 00 72 65 6c 	imul   $0x656c6572,0x0(%rbx,%rsi,2),%ebp
  96:	65 
  97:	61                   	(bad)
  98:	73 65                	jae    ff <.gnu.debuglto_.debug_str+0xff>
  9a:	00 5f 5a             	add    %bl,0x5a(%rdi)
  9d:	4e 53                	rex.WRX push %rbx
  9f:	74 31                	je     d2 <.gnu.debuglto_.debug_str+0xd2>
  a1:	31 61 74             	xor    %esp,0x74(%rcx)
  a4:	6f                   	outsl  %ds:(%rsi),(%dx)
  a5:	6d                   	insl   (%dx),%es:(%rdi)
  a6:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
  ad:	31 32                	xor    %esi,(%rdx)
  af:	74 65                	je     116 <.gnu.debuglto_.debug_str+0x116>
  b1:	73 74                	jae    127 <.gnu.debuglto_.debug_str+0x127>
  b3:	5f                   	pop    %rdi
  b4:	61                   	(bad)
  b5:	6e                   	outsb  %ds:(%rsi),(%dx)
  b6:	64 5f                	fs pop %rdi
  b8:	73 65                	jae    11f <.gnu.debuglto_.debug_str+0x11f>
  ba:	74 45                	je     101 <.gnu.debuglto_.debug_str+0x101>
  bc:	53                   	push   %rbx
  bd:	74 31                	je     f0 <.gnu.debuglto_.debug_str+0xf0>
  bf:	32 6d 65             	xor    0x65(%rbp),%ch
  c2:	6d                   	insl   (%dx),%es:(%rdi)
  c3:	6f                   	outsl  %ds:(%rsi),(%dx)
  c4:	72 79                	jb     13f <.gnu.debuglto_.debug_str+0x13f>
  c6:	5f                   	pop    %rdi
  c7:	6f                   	outsl  %ds:(%rsi),(%dx)
  c8:	72 64                	jb     12e <.gnu.debuglto_.debug_str+0x12e>
  ca:	65 72 00             	gs jb  cd <.gnu.debuglto_.debug_str+0xcd>
  cd:	43 52                	rex.XB push %r10
  cf:	4c                   	rex.WR
  d0:	46 00 5f 4d          	rex.RX add %r11b,0x4d(%rdi)
  d4:	5f                   	pop    %rdi
  d5:	69 00 6c 6f 6e 67    	imul   $0x676e6f6c,(%rax),%eax
  db:	20 6c 6f 6e          	and    %ch,0x6e(%rdi,%rbp,2)
  df:	67 20 69 6e          	and    %ch,0x6e(%ecx)
  e3:	74 00                	je     e5 <.gnu.debuglto_.debug_str+0xe5>
  e5:	4c 31 5f 43          	xor    %r11,0x43(%rdi)
  e9:	41                   	rex.B
  ea:	43                   	rex.XB
  eb:	48                   	rex.W
  ec:	45 5f                	rex.RB pop %r15
  ee:	42 59                	rex.X pop %rcx
  f0:	54                   	push   %rsp
  f1:	45 53                	rex.RB push %r11
  f3:	00 5f 5a             	add    %bl,0x5a(%rdi)
  f6:	4e 53                	rex.WRX push %rbx
  f8:	74 31                	je     12b <.gnu.debuglto_.debug_str+0x12b>
  fa:	31 61 74             	xor    %esp,0x74(%rcx)
  fd:	6f                   	outsl  %ds:(%rsi),(%dx)
  fe:	6d                   	insl   (%dx),%es:(%rdi)
  ff:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 106:	43 34 45             	rex.XB xor $0x45,%al
 109:	52                   	push   %rdx
 10a:	4b 53                	rex.WXB push %r11
 10c:	5f                   	pop    %rdi
 10d:	00 63 68             	add    %ah,0x68(%rbx)
 110:	61                   	(bad)
 111:	72 33                	jb     146 <.gnu.debuglto_.debug_str+0x146>
 113:	32 5f 74             	xor    0x74(%rdi),%bl
 116:	00 73 68             	add    %dh,0x68(%rbx)
 119:	6f                   	outsl  %ds:(%rsi),(%dx)
 11a:	72 74                	jb     190 <.gnu.debuglto_.debug_str+0x190>
 11c:	20 69 6e             	and    %ch,0x6e(%rcx)
 11f:	74 00                	je     121 <.gnu.debuglto_.debug_str+0x121>
 121:	63 68 61             	movsxd 0x61(%rax),%ebp
 124:	72 31                	jb     157 <.gnu.debuglto_.debug_str+0x157>
 126:	36 5f                	ss pop %rdi
 128:	74 00                	je     12a <.gnu.debuglto_.debug_str+0x12a>
 12a:	5f                   	pop    %rdi
 12b:	5a                   	pop    %rdx
 12c:	4e 31 30             	rex.WRX xor %r14,(%rax)
 12f:	51                   	push   %rcx
 130:	75 61                	jne    193 <.gnu.debuglto_.debug_str+0x193>
 132:	6e                   	outsb  %ds:(%rsi),(%dx)
 133:	74 75                	je     1aa <.gnu.debuglto_.debug_str+0x1aa>
 135:	6d                   	insl   (%dx),%es:(%rdi)
 136:	4e                   	rex.WRX
 137:	45                   	rex.RB
 138:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 13d:	38 53 70             	cmp    %dl,0x70(%rbx)
 140:	69 6e 4c 6f 63 6b 37 	imul   $0x376b636f,0x4c(%rsi),%ebp
 147:	72 65                	jb     1ae <.gnu.debuglto_.debug_str+0x1ae>
 149:	6c                   	insb   (%dx),%es:(%rdi)
 14a:	65 61                	gs (bad)
 14c:	73 65                	jae    1b3 <.gnu.debuglto_.debug_str+0x1b3>
 14e:	45 76 00             	rex.RB jbe 151 <.gnu.debuglto_.debug_str+0x151>
 151:	63 6c 65 61          	movsxd 0x61(%rbp,%riz,2),%ebp
 155:	72 00                	jb     157 <.gnu.debuglto_.debug_str+0x157>
 157:	5f                   	pop    %rdi
 158:	5a                   	pop    %rdx
 159:	4e 53                	rex.WRX push %rbx
 15b:	74 31                	je     18e <.gnu.debuglto_.debug_str+0x18e>
 15d:	31 61 74             	xor    %esp,0x74(%rcx)
 160:	6f                   	outsl  %ds:(%rsi),(%dx)
 161:	6d                   	insl   (%dx),%es:(%rdi)
 162:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 169:	44 34 45             	rex.R xor $0x45,%al
 16c:	76 00                	jbe    16e <.gnu.debuglto_.debug_str+0x16e>
 16e:	5f                   	pop    %rdi
 16f:	5a                   	pop    %rdx
 170:	4e 56                	rex.WRX push %rsi
 172:	53                   	push   %rbx
 173:	74 31                	je     1a6 <.gnu.debuglto_.debug_str+0x1a6>
 175:	31 61 74             	xor    %esp,0x74(%rcx)
 178:	6f                   	outsl  %ds:(%rsi),(%dx)
 179:	6d                   	insl   (%dx),%es:(%rdi)
 17a:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 181:	31 32                	xor    %esi,(%rdx)
 183:	74 65                	je     1ea <.gnu.debuglto_.debug_str+0x1ea>
 185:	73 74                	jae    1fb <.gnu.debuglto_.debug_str+0x1fb>
 187:	5f                   	pop    %rdi
 188:	61                   	(bad)
 189:	6e                   	outsb  %ds:(%rsi),(%dx)
 18a:	64 5f                	fs pop %rdi
 18c:	73 65                	jae    1f3 <.gnu.debuglto_.debug_str+0x1f3>
 18e:	74 45                	je     1d5 <.gnu.debuglto_.debug_str+0x1d5>
 190:	53                   	push   %rbx
 191:	74 31                	je     1c4 <.gnu.debuglto_.debug_str+0x1c4>
 193:	32 6d 65             	xor    0x65(%rbp),%ch
 196:	6d                   	insl   (%dx),%es:(%rdi)
 197:	6f                   	outsl  %ds:(%rsi),(%dx)
 198:	72 79                	jb     213 <.gnu.debuglto_.debug_str+0x213>
 19a:	5f                   	pop    %rdi
 19b:	6f                   	outsl  %ds:(%rsi),(%dx)
 19c:	72 64                	jb     202 <.gnu.debuglto_.debug_str+0x202>
 19e:	65 72 00             	gs jb  1a1 <.gnu.debuglto_.debug_str+0x1a1>
 1a1:	62 6f 6f 6c 00       	(bad)
 1a6:	73 69                	jae    211 <.gnu.debuglto_.debug_str+0x211>
 1a8:	67 6e                	outsb  %ds:(%esi),(%dx)
 1aa:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 1af:	61                   	(bad)
 1b0:	72 00                	jb     1b2 <.gnu.debuglto_.debug_str+0x1b2>
 1b2:	5f                   	pop    %rdi
 1b3:	5a                   	pop    %rdx
 1b4:	4e                   	rex.WRX
 1b5:	4b 53                	rex.WXB push %r11
 1b7:	74 31                	je     1ea <.gnu.debuglto_.debug_str+0x1ea>
 1b9:	31 61 74             	xor    %esp,0x74(%rcx)
 1bc:	6f                   	outsl  %ds:(%rsi),(%dx)
 1bd:	6d                   	insl   (%dx),%es:(%rdi)
 1be:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 1c5:	34 74                	xor    $0x74,%al
 1c7:	65 73 74             	gs jae 23e <.gnu.debuglto_.debug_str+0x23e>
 1ca:	45 53                	rex.RB push %r11
 1cc:	74 31                	je     1ff <.gnu.debuglto_.debug_str+0x1ff>
 1ce:	32 6d 65             	xor    0x65(%rbp),%ch
 1d1:	6d                   	insl   (%dx),%es:(%rdi)
 1d2:	6f                   	outsl  %ds:(%rsi),(%dx)
 1d3:	72 79                	jb     24e <.gnu.debuglto_.debug_str+0x24e>
 1d5:	5f                   	pop    %rdi
 1d6:	6f                   	outsl  %ds:(%rsi),(%dx)
 1d7:	72 64                	jb     23d <.gnu.debuglto_.debug_str+0x23d>
 1d9:	65 72 00             	gs jb  1dc <.gnu.debuglto_.debug_str+0x1dc>
 1dc:	66 6c                	data16 insb (%dx),%es:(%rdi)
 1de:	6f                   	outsl  %ds:(%rsi),(%dx)
 1df:	61                   	(bad)
 1e0:	74 00                	je     1e2 <.gnu.debuglto_.debug_str+0x1e2>
 1e2:	5f                   	pop    %rdi
 1e3:	46 6c                	rex.RX insb (%dx),%es:(%rdi)
 1e5:	6f                   	outsl  %ds:(%rsi),(%dx)
 1e6:	61                   	(bad)
 1e7:	74 36                	je     21f <.gnu.debuglto_.debug_str+0x21f>
 1e9:	34 00                	xor    $0x0,%al
 1eb:	5f                   	pop    %rdi
 1ec:	5a                   	pop    %rdx
 1ed:	4e 56                	rex.WRX push %rsi
 1ef:	53                   	push   %rbx
 1f0:	74 31                	je     223 <.gnu.debuglto_.debug_str+0x223>
 1f2:	31 61 74             	xor    %esp,0x74(%rcx)
 1f5:	6f                   	outsl  %ds:(%rsi),(%dx)
 1f6:	6d                   	insl   (%dx),%es:(%rdi)
 1f7:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 1fe:	35 63 6c 65 61       	xor    $0x61656c63,%eax
 203:	72 45                	jb     24a <.gnu.debuglto_.debug_str+0x24a>
 205:	53                   	push   %rbx
 206:	74 31                	je     239 <.gnu.debuglto_.debug_str+0x239>
 208:	32 6d 65             	xor    0x65(%rbp),%ch
 20b:	6d                   	insl   (%dx),%es:(%rdi)
 20c:	6f                   	outsl  %ds:(%rsi),(%dx)
 20d:	72 79                	jb     288 <.gnu.debuglto_.debug_str+0x288>
 20f:	5f                   	pop    %rdi
 210:	6f                   	outsl  %ds:(%rsi),(%dx)
 211:	72 64                	jb     277 <.gnu.debuglto_.debug_str+0x277>
 213:	65 72 00             	gs jb  216 <.gnu.debuglto_.debug_str+0x216>
 216:	5f                   	pop    %rdi
 217:	5a                   	pop    %rdx
 218:	53                   	push   %rbx
 219:	74 32                	je     24d <.gnu.debuglto_.debug_str+0x24d>
 21b:	31 5f 5f             	xor    %ebx,0x5f(%rdi)
 21e:	67 6c                	insb   (%dx),%es:(%edi)
 220:	69 62 63 78 78 5f 61 	imul   $0x615f7878,0x63(%rdx),%esp
 227:	73 73                	jae    29c <.gnu.debuglto_.debug_str+0x29c>
 229:	65 72 74             	gs jb  2a0 <.gnu.debuglto_.debug_str+0x2a0>
 22c:	5f                   	pop    %rdi
 22d:	66 61                	data16 (bad)
 22f:	69 6c 76 00 6c 6f 6e 	imul   $0x676e6f6c,0x0(%rsi,%rsi,2),%ebp
 236:	67 
 237:	20 69 6e             	and    %ch,0x6e(%rcx)
 23a:	74 00                	je     23c <.gnu.debuglto_.debug_str+0x23c>
 23c:	5f                   	pop    %rdi
 23d:	5f                   	pop    %rdi
 23e:	6d                   	insl   (%dx),%es:(%rdi)
 23f:	65 6d                	gs insl (%dx),%es:(%rdi)
 241:	6f                   	outsl  %ds:(%rsi),(%dx)
 242:	72 79                	jb     2bd <.gnu.debuglto_.debug_str+0x2bd>
 244:	5f                   	pop    %rdi
 245:	6f                   	outsl  %ds:(%rsi),(%dx)
 246:	72 64                	jb     2ac <.gnu.debuglto_.debug_str+0x2ac>
 248:	65 72 5f             	gs jb  2aa <.gnu.debuglto_.debug_str+0x2aa>
 24b:	6d                   	insl   (%dx),%es:(%rdi)
 24c:	6f                   	outsl  %ds:(%rsi),(%dx)
 24d:	64 69 66 69 65 72 5f 	imul   $0x6d5f7265,%fs:0x69(%rsi),%esp
 254:	6d 
 255:	61                   	(bad)
 256:	73 6b                	jae    2c3 <.gnu.debuglto_.debug_str+0x2c3>
 258:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 25c:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 260:	73 69                	jae    2cb <.gnu.debuglto_.debug_str+0x2cb>
 262:	67 6e                	outsb  %ds:(%esi),(%dx)
 264:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 269:	74 00                	je     26b <.gnu.debuglto_.debug_str+0x26b>
 26b:	5f                   	pop    %rdi
 26c:	5f                   	pop    %rdi
 26d:	6d                   	insl   (%dx),%es:(%rdi)
 26e:	6f                   	outsl  %ds:(%rsi),(%dx)
 26f:	64 00 5f 5a          	add    %bl,%fs:0x5a(%rdi)
 273:	4e 56                	rex.WRX push %rsi
 275:	53                   	push   %rbx
 276:	74 31                	je     2a9 <.gnu.debuglto_.debug_str+0x2a9>
 278:	31 61 74             	xor    %esp,0x74(%rcx)
 27b:	6f                   	outsl  %ds:(%rsi),(%dx)
 27c:	6d                   	insl   (%dx),%es:(%rdi)
 27d:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 284:	61                   	(bad)
 285:	53                   	push   %rbx
 286:	45 52                	rex.RB push %r10
 288:	4b 53                	rex.WXB push %r11
 28a:	5f                   	pop    %rdi
 28b:	00 63 68             	add    %ah,0x68(%rbx)
 28e:	61                   	(bad)
 28f:	72 38                	jb     2c9 <.gnu.debuglto_.debug_str+0x2c9>
 291:	5f                   	pop    %rdi
 292:	74 00                	je     294 <.gnu.debuglto_.debug_str+0x294>
 294:	61                   	(bad)
 295:	63 71 5f             	movsxd 0x5f(%rcx),%esi
 298:	72 65                	jb     2ff <.gnu.debuglto_.debug_str+0x2ff>
 29a:	6c                   	insb   (%dx),%es:(%rdi)
 29b:	00 6f 70             	add    %ch,0x70(%rdi)
 29e:	65 72 61             	gs jb  302 <.gnu.debuglto_.debug_str+0x302>
 2a1:	74 6f                	je     312 <.gnu.debuglto_.debug_str+0x312>
 2a3:	72 26                	jb     2cb <.gnu.debuglto_.debug_str+0x2cb>
 2a5:	00 5f 46             	add    %bl,0x46(%rdi)
 2a8:	6c                   	insb   (%dx),%es:(%rdi)
 2a9:	6f                   	outsl  %ds:(%rsi),(%dx)
 2aa:	61                   	(bad)
 2ab:	74 33                	je     2e0 <.gnu.debuglto_.debug_str+0x2e0>
 2ad:	32 00                	xor    (%rax),%al
 2af:	5f                   	pop    %rdi
 2b0:	5f                   	pop    %rdi
 2b1:	6d                   	insl   (%dx),%es:(%rdi)
 2b2:	65 6d                	gs insl (%dx),%es:(%rdi)
 2b4:	6f                   	outsl  %ds:(%rsi),(%dx)
 2b5:	72 79                	jb     330 <.gnu.debuglto_.debug_str+0x330>
 2b7:	5f                   	pop    %rdi
 2b8:	6f                   	outsl  %ds:(%rsi),(%dx)
 2b9:	72 64                	jb     31f <.gnu.debuglto_.debug_str+0x31f>
 2bb:	65 72 5f             	gs jb  31d <.gnu.debuglto_.debug_str+0x31d>
 2be:	6d                   	insl   (%dx),%es:(%rdi)
 2bf:	61                   	(bad)
 2c0:	73 6b                	jae    32d <.gnu.debuglto_.debug_str+0x32d>
 2c2:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 2c6:	67 20 64 6f 75       	and    %ah,0x75(%edi,%ebp,2)
 2cb:	62 6c 65 00 47       	(bad)
 2d0:	4e 55                	rex.WRX push %rbp
 2d2:	20 43 2b             	and    %al,0x2b(%rbx)
 2d5:	2b 32                	sub    (%rdx),%esi
 2d7:	36 20 31             	ss and %dh,(%rcx)
 2da:	34 2e                	xor    $0x2e,%al
 2dc:	32 2e                	xor    (%rsi),%ch
 2de:	31 20                	xor    %esp,(%rax)
 2e0:	32 30                	xor    (%rax),%dh
 2e2:	32 34 30             	xor    (%rax,%rsi,1),%dh
 2e5:	39 31                	cmp    %esi,(%rcx)
 2e7:	30 20                	xor    %ah,(%rax)
 2e9:	2d 6d 63 6d 6f       	sub    $0x6f6d636d,%eax
 2ee:	64 65 6c             	fs gs insb (%dx),%es:(%rdi)
 2f1:	3d 6c 61 72 67       	cmp    $0x6772616c,%eax
 2f6:	65 20 2d 6d 6e 6f 2d 	and    %ch,%gs:0x2d6f6e6d(%rip)        # 2d6f716a <spin_lock.cpp.cc2eb890+0x2d6f716a>
 2fd:	72 65                	jb     364 <.gnu.debuglto_.debug_str+0x364>
 2ff:	64 2d 7a 6f 6e 65    	fs sub $0x656e6f7a,%eax
 305:	20 2d 6d 74 75 6e    	and    %ch,0x6e75746d(%rip)        # 6e757778 <spin_lock.cpp.cc2eb890+0x6e757778>
 30b:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 311:	72 69                	jb     37c <.gnu.debuglto_.debug_str+0x37c>
 313:	63 20                	movsxd (%rax),%esp
 315:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 31a:	68 3d 78 38 36       	push   $0x3638783d
 31f:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 324:	67 20 2d 4f 30 20 2d 	and    %ch,0x2d20304f(%eip)        # 2d20337a <spin_lock.cpp.cc2eb890+0x2d20337a>
 32b:	73 74                	jae    3a1 <.gnu.debuglto_.debug_str+0x3a1>
 32d:	64 3d 63 2b 2b 32    	fs cmp $0x322b2b63,%eax
 333:	36 20 2d 66 6e 6f 2d 	ss and %ch,0x2d6f6e66(%rip)        # 2d6f71a0 <spin_lock.cpp.cc2eb890+0x2d6f71a0>
 33a:	62 75 69 6c 74       	(bad)
 33f:	69 6e 20 2d 66 66 72 	imul   $0x7266662d,0x20(%rsi),%ebp
 346:	65 65 73 74          	gs gs jae 3be <.gnu.debuglto_.debug_str+0x3be>
 34a:	61                   	(bad)
 34b:	6e                   	outsb  %ds:(%rsi),(%dx)
 34c:	64 69 6e 67 20 2d 66 	imul   $0x6e662d20,%fs:0x67(%rsi),%ebp
 353:	6e 
 354:	6f                   	outsl  %ds:(%rsi),(%dx)
 355:	2d 73 74 61 63       	sub    $0x63617473,%eax
 35a:	6b 2d 70 72 6f 74 65 	imul   $0x65,0x746f7270(%rip),%ebp        # 746f75d1 <spin_lock.cpp.cc2eb890+0x746f75d1>
 361:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
 365:	20 2d 66 6e 6f 2d    	and    %ch,0x2d6f6e66(%rip)        # 2d6f71d1 <spin_lock.cpp.cc2eb890+0x2d6f71d1>
 36b:	73 74                	jae    3e1 <.gnu.debuglto_.debug_str+0x3e1>
 36d:	72 69                	jb     3d8 <.gnu.debuglto_.debug_str+0x3d8>
 36f:	63 74 2d 61          	movsxd 0x61(%rbp,%rbp,1),%esi
 373:	6c                   	insb   (%dx),%es:(%rdi)
 374:	69 61 73 69 6e 67 20 	imul   $0x20676e69,0x73(%rcx),%esp
 37b:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
 380:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
 383:	6d                   	insl   (%dx),%es:(%rdi)
 384:	6f                   	outsl  %ds:(%rsi),(%dx)
 385:	6e                   	outsb  %ds:(%rsi),(%dx)
 386:	20 2d 66 6e 6f 2d    	and    %ch,0x2d6f6e66(%rip)        # 2d6f71f2 <spin_lock.cpp.cc2eb890+0x2d6f71f2>
 38c:	72 74                	jb     402 <.gnu.debuglto_.debug_str+0x402>
 38e:	74 69                	je     3f9 <.gnu.debuglto_.debug_str+0x3f9>
 390:	20 2d 66 6e 6f 2d    	and    %ch,0x2d6f6e66(%rip)        # 2d6f71fc <spin_lock.cpp.cc2eb890+0x2d6f71fc>
 396:	65 78 63             	gs js  3fc <.gnu.debuglto_.debug_str+0x3fc>
 399:	65 70 74             	gs jo  410 <.gnu.debuglto_.debug_str+0x410>
 39c:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%rdi),%ebp
 3a3:	73 74                	jae    419 <.gnu.debuglto_.debug_str+0x419>
 3a5:	61                   	(bad)
 3a6:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
 3a9:	63 68 65             	movsxd 0x65(%rax),%ebp
 3ac:	63 6b 3d             	movsxd 0x3d(%rbx),%ebp
 3af:	6e                   	outsb  %ds:(%rsi),(%dx)
 3b0:	6f                   	outsl  %ds:(%rsi),(%dx)
 3b1:	20 2d 66 66 75 6e    	and    %ch,0x6e756666(%rip)        # 6e756a1d <spin_lock.cpp.cc2eb890+0x6e756a1d>
 3b7:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
 3bb:	6e                   	outsb  %ds:(%rsi),(%dx)
 3bc:	2d 73 65 63 74       	sub    $0x74636573,%eax
 3c1:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%rdi),%ebp
 3c8:	64 61                	fs (bad)
 3ca:	74 61                	je     42d <.gnu.debuglto_.debug_str+0x42d>
 3cc:	2d 73 65 63 74       	sub    $0x74636573,%eax
 3d1:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%rdi),%ebp
 3d8:	50                   	push   %rax
 3d9:	49                   	rex.WB
 3da:	43 20 2d 66 6c 74 6f 	rex.XB and %bpl,0x6f746c66(%rip)        # 6f747047 <spin_lock.cpp.cc2eb890+0x6f747047>
 3e1:	00 75 6e             	add    %dh,0x6e(%rbp)
 3e4:	73 69                	jae    44f <.gnu.debuglto_.debug_str+0x44f>
 3e6:	67 6e                	outsb  %ds:(%esi),(%dx)
 3e8:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 3ed:	61                   	(bad)
 3ee:	72 00                	jb     3f0 <.gnu.debuglto_.debug_str+0x3f0>
 3f0:	5f                   	pop    %rdi
 3f1:	5f                   	pop    %rdi
 3f2:	67 6e                	outsb  %ds:(%esi),(%dx)
 3f4:	75 5f                	jne    455 <.gnu.debuglto_.debug_str+0x455>
 3f6:	63 78 78             	movsxd 0x78(%rax),%edi
 3f9:	00 6f 70             	add    %ch,0x70(%rdi)
 3fc:	65 72 61             	gs jb  460 <.gnu.debuglto_.debug_str+0x460>
 3ff:	74 6f                	je     470 <.gnu.debuglto_.debug_str+0x470>
 401:	72 3d                	jb     440 <.gnu.debuglto_.debug_str+0x440>
 403:	00 53 70             	add    %dl,0x70(%rbx)
 406:	69 6e 4c 6f 63 6b 00 	imul   $0x6b636f,0x4c(%rsi),%ebp
 40d:	6c                   	insb   (%dx),%es:(%rdi)
 40e:	6f                   	outsl  %ds:(%rsi),(%dx)
 40f:	6e                   	outsb  %ds:(%rsi),(%dx)
 410:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 415:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 419:	73 69                	jae    484 <.gnu.debuglto_.debug_str+0x484>
 41b:	67 6e                	outsb  %ds:(%esi),(%dx)
 41d:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 422:	74 00                	je     424 <.gnu.debuglto_.debug_str+0x424>
 424:	75 6e                	jne    494 <.gnu.debuglto_.debug_str+0x494>
 426:	73 69                	jae    491 <.gnu.debuglto_.debug_str+0x491>
 428:	67 6e                	outsb  %ds:(%esi),(%dx)
 42a:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 42f:	74 00                	je     431 <.gnu.debuglto_.debug_str+0x431>
 431:	5f                   	pop    %rdi
 432:	5a                   	pop    %rdx
 433:	4e 31 30             	rex.WRX xor %r14,(%rax)
 436:	51                   	push   %rcx
 437:	75 61                	jne    49a <.gnu.debuglto_.debug_str+0x49a>
 439:	6e                   	outsb  %ds:(%rsi),(%dx)
 43a:	74 75                	je     4b1 <.gnu.debuglto_.debug_str+0x4b1>
 43c:	6d                   	insl   (%dx),%es:(%rdi)
 43d:	4e                   	rex.WRX
 43e:	45                   	rex.RB
 43f:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 444:	38 53 70             	cmp    %dl,0x70(%rbx)
 447:	69 6e 4c 6f 63 6b 43 	imul   $0x436b636f,0x4c(%rsi),%ebp
 44e:	34 45                	xor    $0x45,%al
 450:	62                   	(bad)
 451:	00 5f 5a             	add    %bl,0x5a(%rdi)
 454:	4e 31 30             	rex.WRX xor %r14,(%rax)
 457:	51                   	push   %rcx
 458:	75 61                	jne    4bb <.gnu.debuglto_.debug_str+0x4bb>
 45a:	6e                   	outsb  %ds:(%rsi),(%dx)
 45b:	74 75                	je     4d2 <.gnu.debuglto_.debug_str+0x4d2>
 45d:	6d                   	insl   (%dx),%es:(%rdi)
 45e:	4e                   	rex.WRX
 45f:	45                   	rex.RB
 460:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 465:	38 53 70             	cmp    %dl,0x70(%rbx)
 468:	69 6e 4c 6f 63 6b 37 	imul   $0x376b636f,0x4c(%rsi),%ebp
 46f:	61                   	(bad)
 470:	63 71 75             	movsxd 0x75(%rcx),%esi
 473:	69 72 65 45 76 00 61 	imul   $0x61007645,0x65(%rdx),%esi
 47a:	63 71 75             	movsxd 0x75(%rcx),%esi
 47d:	69 72 65 00 5f 5a 4e 	imul   $0x4e5a5f00,0x65(%rdx),%esi
 484:	31 30                	xor    %esi,(%rax)
 486:	51                   	push   %rcx
 487:	75 61                	jne    4ea <.gnu.debuglto_.debug_str+0x4ea>
 489:	6e                   	outsb  %ds:(%rsi),(%dx)
 48a:	74 75                	je     501 <.gnu.debuglto_.debug_str+0x501>
 48c:	6d                   	insl   (%dx),%es:(%rdi)
 48d:	4e                   	rex.WRX
 48e:	45                   	rex.RB
 48f:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 494:	38 53 70             	cmp    %dl,0x70(%rbx)
 497:	69 6e 4c 6f 63 6b 36 	imul   $0x366b636f,0x4c(%rsi),%ebp
 49e:	6c                   	insb   (%dx),%es:(%rdi)
 49f:	6f                   	outsl  %ds:(%rsi),(%dx)
 4a0:	63 6b 65             	movsxd 0x65(%rbx),%ebp
 4a3:	64 45 76 00          	fs rex.RB jbe 4a7 <.gnu.debuglto_.debug_str+0x4a7>
 4a7:	7e 61                	jle    50a <.gnu.debuglto_.debug_str+0x50a>
 4a9:	74 6f                	je     51a <.gnu.debuglto_.debug_str+0x51a>
 4ab:	6d                   	insl   (%dx),%es:(%rdi)
 4ac:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 4b3:	00 73 68             	add    %dh,0x68(%rbx)
 4b6:	6f                   	outsl  %ds:(%rsi),(%dx)
 4b7:	72 74                	jb     52d <.gnu.debuglto_.debug_str+0x52d>
 4b9:	20 75 6e             	and    %dh,0x6e(%rbp)
 4bc:	73 69                	jae    527 <.gnu.debuglto_.debug_str+0x527>
 4be:	67 6e                	outsb  %ds:(%esi),(%dx)
 4c0:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 4c5:	74 00                	je     4c7 <.gnu.debuglto_.debug_str+0x4c7>
 4c7:	5f                   	pop    %rdi
 4c8:	5f                   	pop    %rdi
 4c9:	6d                   	insl   (%dx),%es:(%rdi)
 4ca:	65 6d                	gs insl (%dx),%es:(%rdi)
 4cc:	6f                   	outsl  %ds:(%rsi),(%dx)
 4cd:	72 79                	jb     548 <.gnu.debuglto_.debug_str+0x548>
 4cf:	5f                   	pop    %rdi
 4d0:	6f                   	outsl  %ds:(%rsi),(%dx)
 4d1:	72 64                	jb     537 <.gnu.debuglto_.debug_str+0x537>
 4d3:	65 72 5f             	gs jb  535 <.gnu.debuglto_.debug_str+0x535>
 4d6:	68 6c 65 5f 72       	push   $0x725f656c
 4db:	65 6c                	gs insb (%dx),%es:(%rdi)
 4dd:	65 61                	gs (bad)
 4df:	73 65                	jae    546 <.gnu.debuglto_.debug_str+0x546>
 4e1:	00 51 75             	add    %dl,0x75(%rcx)
 4e4:	61                   	(bad)
 4e5:	6e                   	outsb  %ds:(%rsi),(%dx)
 4e6:	74 75                	je     55d <.gnu.debuglto_.debug_str+0x55d>
 4e8:	6d                   	insl   (%dx),%es:(%rdi)
 4e9:	4e                   	rex.WRX
 4ea:	45                   	rex.RB
 4eb:	43 00 5f 5a          	rex.XB add %bl,0x5a(%r15)
 4ef:	4e 31 30             	rex.WRX xor %r14,(%rax)
 4f2:	51                   	push   %rcx
 4f3:	75 61                	jne    556 <.gnu.debuglto_.debug_str+0x556>
 4f5:	6e                   	outsb  %ds:(%rsi),(%dx)
 4f6:	74 75                	je     56d <.gnu.debuglto_.debug_str+0x56d>
 4f8:	6d                   	insl   (%dx),%es:(%rdi)
 4f9:	4e                   	rex.WRX
 4fa:	45                   	rex.RB
 4fb:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 500:	38 53 70             	cmp    %dl,0x70(%rbx)
 503:	69 6e 4c 6f 63 6b 43 	imul   $0x436b636f,0x4c(%rsi),%ebp
 50a:	34 45                	xor    $0x45,%al
 50c:	76 00                	jbe    50e <.gnu.debuglto_.debug_str+0x50e>
 50e:	63 68 61             	movsxd 0x61(%rax),%ebp
 511:	72 00                	jb     513 <.gnu.debuglto_.debug_str+0x513>
 513:	6c                   	insb   (%dx),%es:(%rdi)
 514:	6f                   	outsl  %ds:(%rsi),(%dx)
 515:	63 6b 65             	movsxd 0x65(%rbx),%ebp
 518:	64 00 5f 5a          	add    %bl,%fs:0x5a(%rdi)
 51c:	4e 53                	rex.WRX push %rbx
 51e:	74 31                	je     551 <.gnu.debuglto_.debug_str+0x551>
 520:	31 61 74             	xor    %esp,0x74(%rcx)
 523:	6f                   	outsl  %ds:(%rsi),(%dx)
 524:	6d                   	insl   (%dx),%es:(%rdi)
 525:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 52c:	61                   	(bad)
 52d:	53                   	push   %rbx
 52e:	45 52                	rex.RB push %r10
 530:	4b 53                	rex.WXB push %r11
 532:	5f                   	pop    %rdi
 533:	00 5f 5f             	add    %bl,0x5f(%rdi)
 536:	73 77                	jae    5af <.gnu.debuglto_.debug_str+0x5af>
 538:	61                   	(bad)
 539:	70 70                	jo     5ab <.gnu.debuglto_.debug_str+0x5ab>
 53b:	61                   	(bad)
 53c:	62 6c 65 5f 64       	(bad)
 541:	65 74 61             	gs je  5a5 <.gnu.debuglto_.debug_str+0x5a5>
 544:	69 6c 73 00 5f 76 70 	imul   $0x7470765f,0x0(%rbx,%rsi,2),%ebp
 54b:	74 
 54c:	72 2e                	jb     57c <.gnu.debuglto_.debug_str+0x57c>
 54e:	53                   	push   %rbx
 54f:	70 69                	jo     5ba <.gnu.debuglto_.debug_str+0x5ba>
 551:	6e                   	outsb  %ds:(%rsi),(%dx)
 552:	4c 6f                	rex.WR outsl %ds:(%rsi),(%dx)
 554:	63 6b 00             	movsxd 0x0(%rbx),%ebp
 557:	61                   	(bad)
 558:	74 6f                	je     5c9 <.gnu.debuglto_.debug_str+0x5c9>
 55a:	6d                   	insl   (%dx),%es:(%rdi)
 55b:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 562:	00 73 65             	add    %dh,0x65(%rbx)
 565:	71 5f                	jno    5c6 <.gnu.debuglto_.debug_str+0x5c6>
 567:	63 73 74             	movsxd 0x74(%rbx),%esi
 56a:	00 74 65 73          	add    %dh,0x73(%rbp,%riz,2)
 56e:	74 5f                	je     5cf <.gnu.debuglto_.debug_str+0x5cf>
 570:	61                   	(bad)
 571:	6e                   	outsb  %ds:(%rsi),(%dx)
 572:	64 5f                	fs pop %rdi
 574:	73 65                	jae    5db <.gnu.debuglto_.debug_str+0x5db>
 576:	74 00                	je     578 <.gnu.debuglto_.debug_str+0x578>
 578:	74 68                	je     5e2 <.gnu.debuglto_.debug_str+0x5e2>
 57a:	69 73 00 5f 5f 69 73 	imul   $0x73695f5f,0x0(%rbx),%esi
 581:	5f                   	pop    %rdi
 582:	63 6f 6e             	movsxd 0x6e(%rdi),%ebp
 585:	73 74                	jae    5fb <.gnu.debuglto_.debug_str+0x5fb>
 587:	61                   	(bad)
 588:	6e                   	outsb  %ds:(%rsi),(%dx)
 589:	74 5f                	je     5ea <.gnu.debuglto_.debug_str+0x5ea>
 58b:	65 76 61             	gs jbe 5ef <.gnu.debuglto_.debug_str+0x5ef>
 58e:	6c                   	insb   (%dx),%es:(%rdi)
 58f:	75 61                	jne    5f2 <.gnu.debuglto_.debug_str+0x5f2>
 591:	74 65                	je     5f8 <.gnu.debuglto_.debug_str+0x5f8>
 593:	64 00 74 65 73       	add    %dh,%fs:0x73(%rbp,%riz,2)
 598:	74 00                	je     59a <.gnu.debuglto_.debug_str+0x59a>
 59a:	5f                   	pop    %rdi
 59b:	5a                   	pop    %rdx
 59c:	53                   	push   %rbx
 59d:	74 33                	je     5d2 <.gnu.debuglto_.debug_str+0x5d2>
 59f:	33 61 74             	xor    0x74(%rcx),%esp
 5a2:	6f                   	outsl  %ds:(%rsi),(%dx)
 5a3:	6d                   	insl   (%dx),%es:(%rdi)
 5a4:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 5ab:	5f                   	pop    %rdi
 5ac:	74 65                	je     613 <.gnu.debuglto_.debug_str+0x613>
 5ae:	73 74                	jae    624 <.gnu.debuglto_.debug_str+0x624>
 5b0:	5f                   	pop    %rdi
 5b1:	61                   	(bad)
 5b2:	6e                   	outsb  %ds:(%rsi),(%dx)
 5b3:	64 5f                	fs pop %rdi
 5b5:	73 65                	jae    61c <.gnu.debuglto_.debug_str+0x61c>
 5b7:	74 5f                	je     618 <.gnu.debuglto_.debug_str+0x618>
 5b9:	65 78 70             	gs js  62c <.gnu.debuglto_.debug_str+0x62c>
 5bc:	6c                   	insb   (%dx),%es:(%rdi)
 5bd:	69 63 69 74 50 53 74 	imul   $0x74535074,0x69(%rbx),%esp
 5c4:	31 31                	xor    %esi,(%rcx)
 5c6:	61                   	(bad)
 5c7:	74 6f                	je     638 <.gnu.debuglto_.debug_str+0x638>
 5c9:	6d                   	insl   (%dx),%es:(%rdi)
 5ca:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 5d1:	53                   	push   %rbx
 5d2:	74 31                	je     605 <.gnu.debuglto_.debug_str+0x605>
 5d4:	32 6d 65             	xor    0x65(%rbp),%ch
 5d7:	6d                   	insl   (%dx),%es:(%rdi)
 5d8:	6f                   	outsl  %ds:(%rsi),(%dx)
 5d9:	72 79                	jb     654 <.gnu.debuglto_.debug_str+0x654>
 5db:	5f                   	pop    %rdi
 5dc:	6f                   	outsl  %ds:(%rsi),(%dx)
 5dd:	72 64                	jb     643 <.gnu.debuglto_.debug_str+0x643>
 5df:	65 72 00             	gs jb  5e2 <.gnu.debuglto_.debug_str+0x5e2>
 5e2:	5f                   	pop    %rdi
 5e3:	5a                   	pop    %rdx
 5e4:	53                   	push   %rbx
 5e5:	74 61                	je     648 <.gnu.debuglto_.debug_str+0x648>
 5e7:	6e                   	outsb  %ds:(%rsi),(%dx)
 5e8:	53                   	push   %rbx
 5e9:	74 31                	je     61c <.gnu.debuglto_.debug_str+0x61c>
 5eb:	32 6d 65             	xor    0x65(%rbp),%ch
 5ee:	6d                   	insl   (%dx),%es:(%rdi)
 5ef:	6f                   	outsl  %ds:(%rsi),(%dx)
 5f0:	72 79                	jb     66b <.gnu.debuglto_.debug_str+0x66b>
 5f2:	5f                   	pop    %rdi
 5f3:	6f                   	outsl  %ds:(%rsi),(%dx)
 5f4:	72 64                	jb     65a <.gnu.debuglto_.debug_str+0x65a>
 5f6:	65 72 53             	gs jb  64c <.gnu.debuglto_.debug_str+0x64c>
 5f9:	74 32                	je     62d <.gnu.debuglto_.debug_str+0x62d>
 5fb:	33 5f 5f             	xor    0x5f(%rdi),%ebx
 5fe:	6d                   	insl   (%dx),%es:(%rdi)
 5ff:	65 6d                	gs insl (%dx),%es:(%rdi)
 601:	6f                   	outsl  %ds:(%rsi),(%dx)
 602:	72 79                	jb     67d <.gnu.debuglto_.debug_str+0x67d>
 604:	5f                   	pop    %rdi
 605:	6f                   	outsl  %ds:(%rsi),(%dx)
 606:	72 64                	jb     66c <.gnu.debuglto_.debug_str+0x66c>
 608:	65 72 5f             	gs jb  66a <.gnu.debuglto_.debug_str+0x66a>
 60b:	6d                   	insl   (%dx),%es:(%rdi)
 60c:	6f                   	outsl  %ds:(%rsi),(%dx)
 60d:	64 69 66 69 65 72 00 	imul   $0x72007265,%fs:0x69(%rsi),%esp
 614:	72 
 615:	65 6c                	gs insb (%dx),%es:(%rdi)
 617:	61                   	(bad)
 618:	78 65                	js     67f <.gnu.debuglto_.debug_str+0x67f>
 61a:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 61e:	76 74                	jbe    694 <.gnu.debuglto_.debug_str+0x694>
 620:	62 6c 5f 70 74       	(bad)
 625:	72 5f                	jb     686 <.gnu.debuglto_.debug_str+0x686>
 627:	74 79                	je     6a2 <.gnu.debuglto_.debug_str+0x6a2>
 629:	70 65                	jo     690 <.gnu.debuglto_.debug_str+0x690>
 62b:	00 5f 5a             	add    %bl,0x5a(%rdi)
 62e:	4e 53                	rex.WRX push %rbx
 630:	74 31                	je     663 <.gnu.debuglto_.debug_str+0x663>
 632:	31 61 74             	xor    %esp,0x74(%rcx)
 635:	6f                   	outsl  %ds:(%rsi),(%dx)
 636:	6d                   	insl   (%dx),%es:(%rdi)
 637:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 63e:	35 63 6c 65 61       	xor    $0x61656c63,%eax
 643:	72 45                	jb     68a <.gnu.debuglto_.debug_str+0x68a>
 645:	53                   	push   %rbx
 646:	74 31                	je     679 <.gnu.debuglto_.debug_str+0x679>
 648:	32 6d 65             	xor    0x65(%rbp),%ch
 64b:	6d                   	insl   (%dx),%es:(%rdi)
 64c:	6f                   	outsl  %ds:(%rsi),(%dx)
 64d:	72 79                	jb     6c8 <.gnu.debuglto_.debug_str+0x6c8>
 64f:	5f                   	pop    %rdi
 650:	6f                   	outsl  %ds:(%rsi),(%dx)
 651:	72 64                	jb     6b7 <.gnu.debuglto_.debug_str+0x6b7>
 653:	65 72 00             	gs jb  656 <.gnu.debuglto_.debug_str+0x656>
 656:	64 6f                	outsl  %fs:(%rsi),(%dx)
 658:	75 62                	jne    6bc <.gnu.debuglto_.debug_str+0x6bc>
 65a:	6c                   	insb   (%dx),%es:(%rdi)
 65b:	65 00 5f 53          	add    %bl,%gs:0x53(%rdi)
 65f:	5f                   	pop    %rdi
 660:	69 6e 69 74 00 5f 5f 	imul   $0x5f5f0074,0x69(%rsi),%ebp
 667:	6d                   	insl   (%dx),%es:(%rdi)
 668:	65 6d                	gs insl (%dx),%es:(%rdi)
 66a:	6f                   	outsl  %ds:(%rsi),(%dx)
 66b:	72 79                	jb     6e6 <.gnu.debuglto_.debug_str+0x6e6>
 66d:	5f                   	pop    %rdi
 66e:	6f                   	outsl  %ds:(%rsi),(%dx)
 66f:	72 64                	jb     6d5 <.gnu.debuglto_.debug_str+0x6d5>
 671:	65 72 5f             	gs jb  6d3 <.gnu.debuglto_.debug_str+0x6d3>
 674:	6d                   	insl   (%dx),%es:(%rdi)
 675:	6f                   	outsl  %ds:(%rsi),(%dx)
 676:	64 69 66 69 65 72 00 	imul   $0x61007265,%fs:0x69(%rsi),%esp
 67d:	61 
 67e:	74 6f                	je     6ef <.gnu.debuglto_.debug_str+0x6ef>
 680:	6d                   	insl   (%dx),%es:(%rdi)
 681:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 688:	5f                   	pop    %rdi
 689:	74 65                	je     6f0 <.gnu.debuglto_.debug_str+0x6f0>
 68b:	73 74                	jae    701 <.gnu.debuglto_.debug_str+0x701>
 68d:	5f                   	pop    %rdi
 68e:	61                   	(bad)
 68f:	6e                   	outsb  %ds:(%rsi),(%dx)
 690:	64 5f                	fs pop %rdi
 692:	73 65                	jae    6f9 <.gnu.debuglto_.debug_str+0x6f9>
 694:	74 5f                	je     6f5 <.gnu.debuglto_.debug_str+0x6f5>
 696:	65 78 70             	gs js  709 <.gnu.debuglto_.debug_str+0x709>
 699:	6c                   	insb   (%dx),%es:(%rdi)
 69a:	69 63 69 74 00 5f 5f 	imul   $0x5f5f0074,0x69(%rbx),%esp
 6a1:	62 66 31 36 00       	(bad)
 6a6:	77 63                	ja     70b <.gnu.debuglto_.debug_str+0x70b>
 6a8:	68 61 72 5f 74       	push   $0x745f7261
 6ad:	00 5f 5f             	add    %bl,0x5f(%rdi)
 6b0:	61                   	(bad)
 6b1:	74 6f                	je     722 <.gnu.debuglto_.debug_str+0x722>
 6b3:	6d                   	insl   (%dx),%es:(%rdi)
 6b4:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 6bb:	5f                   	pop    %rdi
 6bc:	64 61                	fs (bad)
 6be:	74 61                	je     721 <.gnu.debuglto_.debug_str+0x721>
 6c0:	5f                   	pop    %rdi
 6c1:	74 79                	je     73c <.gnu.debuglto_.debug_str+0x73c>
 6c3:	70 65                	jo     72a <.gnu.debuglto_.debug_str+0x72a>
 6c5:	00 61 74             	add    %ah,0x74(%rcx)
 6c8:	6f                   	outsl  %ds:(%rsi),(%dx)
 6c9:	6d                   	insl   (%dx),%es:(%rdi)
 6ca:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 6d1:	5f                   	pop    %rdi
 6d2:	63 6c 65 61          	movsxd 0x61(%rbp,%riz,2),%ebp
 6d6:	72 5f                	jb     737 <.gnu.debuglto_.debug_str+0x737>
 6d8:	65 78 70             	gs js  74b <.gnu.debuglto_.debug_str+0x74b>
 6db:	6c                   	insb   (%dx),%es:(%rdi)
 6dc:	69 63 69 74 00 5f 5a 	imul   $0x5a5f0074,0x69(%rbx),%esp
 6e3:	4e 56                	rex.WRX push %rsi
 6e5:	4b 53                	rex.WXB push %r11
 6e7:	74 31                	je     71a <.gnu.debuglto_.debug_str+0x71a>
 6e9:	31 61 74             	xor    %esp,0x74(%rcx)
 6ec:	6f                   	outsl  %ds:(%rsi),(%dx)
 6ed:	6d                   	insl   (%dx),%es:(%rdi)
 6ee:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 6f5:	34 74                	xor    $0x74,%al
 6f7:	65 73 74             	gs jae 76e <.gnu.debuglto_.debug_str+0x76e>
 6fa:	45 53                	rex.RB push %r11
 6fc:	74 31                	je     72f <.gnu.debuglto_.debug_str+0x72f>
 6fe:	32 6d 65             	xor    0x65(%rbp),%ch
 701:	6d                   	insl   (%dx),%es:(%rdi)
 702:	6f                   	outsl  %ds:(%rsi),(%dx)
 703:	72 79                	jb     77e <.gnu.debuglto_.debug_str+0x77e>
 705:	5f                   	pop    %rdi
 706:	6f                   	outsl  %ds:(%rsi),(%dx)
 707:	72 64                	jb     76d <.gnu.debuglto_.debug_str+0x76d>
 709:	65 72 00             	gs jb  70c <.gnu.debuglto_.debug_str+0x70c>
 70c:	5f                   	pop    %rdi
 70d:	46 6c                	rex.RX insb (%dx),%es:(%rdi)
 70f:	6f                   	outsl  %ds:(%rsi),(%dx)
 710:	61                   	(bad)
 711:	74 31                	je     744 <.gnu.debuglto_.debug_str+0x744>
 713:	32 38                	xor    (%rax),%bh
 715:	00 5f 5a             	add    %bl,0x5a(%rdi)
 718:	4e 31 30             	rex.WRX xor %r14,(%rax)
 71b:	51                   	push   %rcx
 71c:	75 61                	jne    77f <.gnu.debuglto_.debug_str+0x77f>
 71e:	6e                   	outsb  %ds:(%rsi),(%dx)
 71f:	74 75                	je     796 <.gnu.debuglto_.debug_str+0x796>
 721:	6d                   	insl   (%dx),%es:(%rdi)
 722:	4e                   	rex.WRX
 723:	45                   	rex.RB
 724:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 729:	38 53 70             	cmp    %dl,0x70(%rbx)
 72c:	69 6e 4c 6f 63 6b 44 	imul   $0x446b636f,0x4c(%rsi),%ebp
 733:	34 45                	xor    $0x45,%al
 735:	76 00                	jbe    737 <.gnu.debuglto_.debug_str+0x737>
 737:	5f                   	pop    %rdi
 738:	5a                   	pop    %rdx
 739:	4e 53                	rex.WRX push %rbx
 73b:	74 31                	je     76e <.gnu.debuglto_.debug_str+0x76e>
 73d:	31 61 74             	xor    %esp,0x74(%rcx)
 740:	6f                   	outsl  %ds:(%rsi),(%dx)
 741:	6d                   	insl   (%dx),%es:(%rdi)
 742:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 749:	43 34 45             	rex.XB xor $0x45,%al
 74c:	62                   	(bad)
 74d:	00 5f 5f             	add    %bl,0x5f(%rdi)
 750:	61                   	(bad)
 751:	74 6f                	je     7c2 <.gnu.debuglto_.debug_str+0x7c2>
 753:	6d                   	insl   (%dx),%es:(%rdi)
 754:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 75b:	5f                   	pop    %rdi
 75c:	62 61 73 65 00       	(bad)
 761:	5f                   	pop    %rdi
 762:	5a                   	pop    %rdx
 763:	4e 53                	rex.WRX push %rbx
 765:	74 31                	je     798 <.gnu.debuglto_.debug_str+0x798>
 767:	31 61 74             	xor    %esp,0x74(%rcx)
 76a:	6f                   	outsl  %ds:(%rsi),(%dx)
 76b:	6d                   	insl   (%dx),%es:(%rdi)
 76c:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 773:	37                   	(bad)
 774:	5f                   	pop    %rdi
 775:	53                   	push   %rbx
 776:	5f                   	pop    %rdi
 777:	69 6e 69 74 45 62 00 	imul   $0x624574,0x69(%rsi),%ebp
 77e:	5f                   	pop    %rdi
 77f:	5a                   	pop    %rdx
 780:	53                   	push   %rbx
 781:	74 32                	je     7b5 <.gnu.debuglto_.debug_str+0x7b5>
 783:	33 5f 5f             	xor    0x5f(%rdi),%ebx
 786:	69 73 5f 63 6f 6e 73 	imul   $0x736e6f63,0x5f(%rbx),%esi
 78d:	74 61                	je     7f0 <spin_lock.cpp.cc2eb890+0x7f0>
 78f:	6e                   	outsb  %ds:(%rsi),(%dx)
 790:	74 5f                	je     7f1 <spin_lock.cpp.cc2eb890+0x7f1>
 792:	65 76 61             	gs jbe 7f6 <spin_lock.cpp.cc2eb890+0x7f6>
 795:	6c                   	insb   (%dx),%es:(%rdi)
 796:	75 61                	jne    7f9 <spin_lock.cpp.cc2eb890+0x7f9>
 798:	74 65                	je     7ff <spin_lock.cpp.cc2eb890+0x7ff>
 79a:	64 76 00             	fs jbe 79d <.gnu.debuglto_.debug_str+0x79d>
 79d:	5f                   	pop    %rdi
 79e:	5f                   	pop    %rdi
 79f:	6d                   	insl   (%dx),%es:(%rdi)
 7a0:	65 6d                	gs insl (%dx),%es:(%rdi)
 7a2:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a3:	72 79                	jb     81e <spin_lock.cpp.cc2eb890+0x81e>
 7a5:	5f                   	pop    %rdi
 7a6:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a7:	72 64                	jb     80d <spin_lock.cpp.cc2eb890+0x80d>
 7a9:	65 72 5f             	gs jb  80b <spin_lock.cpp.cc2eb890+0x80b>
 7ac:	68 6c 65 5f 61       	push   $0x615f656c
 7b1:	63 71 75             	movsxd 0x75(%rcx),%esi
 7b4:	69 72 65 00 5f 5a 4e 	imul   $0x4e5a5f00,0x65(%rdx),%esi
 7bb:	53                   	push   %rbx
 7bc:	74 31                	je     7ef <spin_lock.cpp.cc2eb890+0x7ef>
 7be:	31 61 74             	xor    %esp,0x74(%rcx)
 7c1:	6f                   	outsl  %ds:(%rsi),(%dx)
 7c2:	6d                   	insl   (%dx),%es:(%rdi)
 7c3:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 7ca:	43 34 45             	rex.XB xor $0x45,%al
 7cd:	76 00                	jbe    7cf <.gnu.debuglto_.debug_str+0x7cf>
 7cf:	7e 53                	jle    824 <spin_lock.cpp.cc2eb890+0x824>
 7d1:	70 69                	jo     83c <spin_lock.cpp.cc2eb890+0x83c>
 7d3:	6e                   	outsb  %ds:(%rsi),(%dx)
 7d4:	4c 6f                	rex.WR outsl %ds:(%rsi),(%dx)
 7d6:	63 6b 00             	movsxd 0x0(%rbx),%ebp

Disassembly of section .gnu.debuglto_.debug_line_str:

0000000000000000 <.gnu.debuglto_.debug_line_str>:
   0:	63 2b                	movsxd (%rbx),%ebp
   2:	2b 63 6f             	sub    0x6f(%rbx),%esp
   5:	6e                   	outsb  %ds:(%rsi),(%dx)
   6:	66 69 67 2e 68 00    	imul   $0x68,0x2e(%rdi),%sp
   c:	2f                   	(bad)
   d:	75 73                	jne    82 <.gnu.debuglto_.debug_line_str+0x82>
   f:	72 2f                	jb     40 <.gnu.debuglto_.debug_line_str+0x40>
  11:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  18:	2f                   	(bad)
  19:	63 2b                	movsxd (%rbx),%ebp
  1b:	2b 2f                	sub    (%rdi),%ebp
  1d:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
  20:	32 2e                	xor    (%rsi),%ch
  22:	31 2f                	xor    %ebp,(%rdi)
  24:	78 38                	js     5e <.gnu.debuglto_.debug_line_str+0x5e>
  26:	36 5f                	ss pop %rdi
  28:	36 34 2d             	ss xor $0x2d,%al
  2b:	70 63                	jo     90 <.gnu.debuglto_.debug_line_str+0x90>
  2d:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  32:	78 2d                	js     61 <.gnu.debuglto_.debug_line_str+0x61>
  34:	67 6e                	outsb  %ds:(%esi),(%dx)
  36:	75 2f                	jne    67 <.gnu.debuglto_.debug_line_str+0x67>
  38:	62 69 74 73 00       	(bad)
  3d:	73 70                	jae    af <.gnu.debuglto_.debug_line_str+0xaf>
  3f:	69 6e 5f 6c 6f 63 6b 	imul   $0x6b636f6c,0x5f(%rsi),%ebp
  46:	2e 63 70 70          	cs movsxd 0x70(%rax),%esi
  4a:	00 61 74             	add    %ah,0x74(%rcx)
  4d:	6f                   	outsl  %ds:(%rsi),(%dx)
  4e:	6d                   	insl   (%dx),%es:(%rdi)
  4f:	69 63 00 2f 75 73 72 	imul   $0x7273752f,0x0(%rbx),%esp
  56:	2f                   	(bad)
  57:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  5e:	2f                   	(bad)
  5f:	63 2b                	movsxd (%rbx),%ebp
  61:	2b 2f                	sub    (%rdi),%ebp
  63:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
  66:	32 2e                	xor    (%rsi),%ch
  68:	31 2f                	xor    %ebp,(%rdi)
  6a:	62 69 74 73 00       	(bad)
  6f:	73 6f                	jae    e0 <.gnu.debuglto_.debug_line_str+0xe0>
  71:	75 72                	jne    e5 <.gnu.debuglto_.debug_line_str+0xe5>
  73:	63 65 2f             	movsxd 0x2f(%rbp),%esp
  76:	6c                   	insb   (%dx),%es:(%rdi)
  77:	69 62 2f 73 70 69 6e 	imul   $0x6e697073,0x2f(%rdx),%esp
  7e:	5f                   	pop    %rdi
  7f:	6c                   	insb   (%dx),%es:(%rdi)
  80:	6f                   	outsl  %ds:(%rsi),(%dx)
  81:	63 6b 2e             	movsxd 0x2e(%rbx),%ebp
  84:	63 70 70             	movsxd 0x70(%rax),%esi
  87:	00 55 65             	add    %dl,0x65(%rbp)
  8a:	66 69 2e 68 70       	imul   $0x7068,(%rsi),%bp
  8f:	70 00                	jo     91 <.gnu.debuglto_.debug_line_str+0x91>
  91:	61                   	(bad)
  92:	74 6f                	je     103 <.gnu.debuglto_.debug_line_str+0x103>
  94:	6d                   	insl   (%dx),%es:(%rdi)
  95:	69 63 5f 62 61 73 65 	imul   $0x65736162,0x5f(%rbx),%esp
  9c:	2e 68 00 2f 75 73    	cs push $0x73752f00
  a2:	72 2f                	jb     d3 <.gnu.debuglto_.debug_line_str+0xd3>
  a4:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  ab:	2f                   	(bad)
  ac:	63 2b                	movsxd (%rbx),%ebp
  ae:	2b 2f                	sub    (%rdi),%ebp
  b0:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
  b3:	32 2e                	xor    (%rsi),%ch
  b5:	31 00                	xor    %eax,(%rax)
  b7:	73 70                	jae    129 <spin_lock.cpp.cc2eb890+0x129>
  b9:	69 6e 5f 6c 6f 63 6b 	imul   $0x6b636f6c,0x5f(%rsi),%ebp
  c0:	2e 68 70 70 00 74    	cs push $0x74007070
  c6:	79 70                	jns    138 <spin_lock.cpp.cc2eb890+0x138>
  c8:	65 5f                	gs pop %rdi
  ca:	74 72                	je     13e <spin_lock.cpp.cc2eb890+0x13e>
  cc:	61                   	(bad)
  cd:	69 74 73 00 2f 68 6f 	imul   $0x6d6f682f,0x0(%rbx,%rsi,2),%esi
  d4:	6d 
  d5:	65 2f                	gs (bad)
  d7:	51                   	push   %rcx
  d8:	75 61                	jne    13b <spin_lock.cpp.cc2eb890+0x13b>
  da:	6e                   	outsb  %ds:(%rsi),(%dx)
  db:	74 75                	je     152 <spin_lock.cpp.cc2eb890+0x152>
  dd:	6d                   	insl   (%dx),%es:(%rdi)
  de:	4e                   	rex.WRX
  df:	45                   	rex.RB
  e0:	43 2f                	rex.XB (bad)
  e2:	51                   	push   %rcx
  e3:	75 61                	jne    146 <spin_lock.cpp.cc2eb890+0x146>
  e5:	6e                   	outsb  %ds:(%rsi),(%dx)
  e6:	74 75                	je     15d <spin_lock.cpp.cc2eb890+0x15d>
  e8:	6d                   	insl   (%dx),%es:(%rdi)
  e9:	4e                   	rex.WRX
  ea:	45                   	rex.RB
  eb:	43 2f                	rex.XB (bad)
  ed:	51                   	push   %rcx
  ee:	75 61                	jne    151 <spin_lock.cpp.cc2eb890+0x151>
  f0:	6e                   	outsb  %ds:(%rsi),(%dx)
  f1:	74 75                	je     168 <spin_lock.cpp.cc2eb890+0x168>
  f3:	6d                   	insl   (%dx),%es:(%rdi)
  f4:	4e                   	rex.WRX
  f5:	45                   	rex.RB
  f6:	43 2d 4c 69 6d 69    	rex.XB sub $0x696d694c,%eax
  fc:	6e                   	outsb  %ds:(%rsi),(%dx)
  fd:	65 00 69 6e          	add    %ch,%gs:0x6e(%rcx)
 101:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
 105:	65 2f                	gs (bad)
 107:	6c                   	insb   (%dx),%es:(%rdi)
 108:	69 62 00 73 6f 75 72 	imul   $0x72756f73,0x0(%rdx),%esp
 10f:	63 65 2f             	movsxd 0x2f(%rbp),%esp
 112:	6c                   	insb   (%dx),%es:(%rdi)
 113:	69 62 00 64 65 66 6c 	imul   $0x6c666564,0x0(%rdx),%esp
 11a:	69 62 2e 68 70 70 00 	imul   $0x707068,0x2e(%rdx),%esp

Disassembly of section .gnu.lto_.odr_types.bad037c419750572:

0000000000000000 <.gnu.lto_.odr_types.bad037c419750572>:
   0:	28 b5 2f fd 60 67    	sub    %dh,0x6760fd2f(%rbp)
   6:	00 1d 08 00 82 8e    	add    %bl,-0x717dfff8(%rip)        # ffffffff8e820014 <spin_lock.cpp.cc2eb890+0xffffffff8e820014>
   c:	37                   	(bad)
   d:	35 60 6d 73 48       	xor    $0x48736d60,%eax
  12:	e1 04                	loope  18 <.gnu.lto_.odr_types.bad037c419750572+0x18>
  14:	e6 db                	out    %al,$0xdb
  16:	a1 6e 0d 79 af 78 a5 	movabs 0xbd62a578af790d6e,%eax
  1d:	62 bd 
  1f:	eb 57                	jmp    78 <.gnu.lto_.odr_types.bad037c419750572+0x78>
  21:	e7 d8                	out    %eax,$0xd8
  23:	29 63 d7             	sub    %esp,-0x29(%rbx)
  26:	de 62 6d             	fisubs 0x6d(%rdx)
  29:	37                   	(bad)
  2a:	41 a6                	rex.B cmpsb %es:(%rdi),%ds:(%rsi)
  2c:	a2 49 24 4b 1f 20 0a 	movabs %al,0x348c0a201f4b2449
  33:	8c 34 
  35:	e2 66                	loop   9d <.gnu.lto_.odr_types.bad037c419750572+0x9d>
  37:	56                   	push   %rsi
  38:	89 d1                	mov    %edx,%ecx
  3a:	72 5a                	jb     96 <.gnu.lto_.odr_types.bad037c419750572+0x96>
  3c:	d3 2e                	shrl   %cl,(%rsi)
  3e:	40 a3 dd 52 0a fd 79 	rex movabs %eax,0x2c7dbe79fd0a52dd
  45:	be 7d 2c 
  48:	df 6a 0a             	fildll 0xa(%rdx)
  4b:	0c da                	or     $0xda,%al
  4d:	21 4f 82             	and    %ecx,-0x7e(%rdi)
  50:	c6                   	(bad)
  51:	5f                   	pop    %rdi
  52:	19 ea                	sbb    %ebp,%edx
  54:	85 5d 29             	test   %ebx,0x29(%rbp)
  57:	25 82 a5 61 2e       	and    $0x2e61a582,%eax
  5c:	ad                   	lods   %ds:(%rsi),%eax
  5d:	a1 3e cf 8c a4 f5 62 	movabs 0x8cda62f5a48ccf3e,%eax
  64:	da 8c 
  66:	59                   	pop    %rcx
  67:	ab                   	stos   %eax,%es:(%rdi)
  68:	99                   	cltd
  69:	58                   	pop    %rax
  6a:	51                   	push   %rcx
  6b:	16                   	(bad)
  6c:	95                   	xchg   %eax,%ebp
  6d:	50                   	push   %rax
  6e:	c5 69 a2             	(bad)
  71:	f1                   	int1
  72:	af                   	scas   %es:(%rdi),%eax
  73:	cd d2                	int    $0xd2
  75:	4d 8d 38             	lea    (%r8),%r15
  78:	6f                   	outsl  %ds:(%rsi),(%dx)
  79:	71 6a                	jno    e5 <.gnu.lto_.odr_types.bad037c419750572+0xe5>
  7b:	2d 53 99 7d 7e       	sub    $0x7e7d9953,%eax
  80:	6d                   	insl   (%dx),%es:(%rdi)
  81:	1f                   	(bad)
  82:	cb                   	lret
  83:	3c ff                	cmp    $0xff,%al
  85:	71 dd                	jno    64 <.gnu.lto_.odr_types.bad037c419750572+0x64>
  87:	32 3a                	xor    (%rdx),%bh
  89:	5f                   	pop    %rdi
  8a:	ff                   	lcall  (bad)
  8b:	dd f2                	(bad)
  8d:	06                   	(bad)
  8e:	a3 af af 7f 98 f6 f1 	movabs %eax,0xfc6bf1f6987fafaf
  95:	6b fc 
  97:	17                   	(bad)
  98:	c6                   	(bad)
  99:	24 04                	and    $0x4,%al
  9b:	c6                   	(bad)
  9c:	ee                   	out    %al,(%dx)
  9d:	5f                   	pop    %rdi
  9e:	ab                   	stos   %eax,%es:(%rdi)
  9f:	d2 30                	shlb   %cl,(%rax)
  a1:	02 51 08             	add    0x8(%rcx),%dl
  a4:	e7 a1                	out    %eax,$0xa1
  a6:	41 71 d1             	rex.B jno 7a <.gnu.lto_.odr_types.bad037c419750572+0x7a>
  a9:	50                   	push   %rax
  aa:	91                   	xchg   %eax,%ecx
  ab:	d2 81 98 74 3e 22    	rolb   %cl,0x223e7498(%rcx)
  b1:	af                   	scas   %es:(%rdi),%eax
  b2:	93                   	xchg   %eax,%ebx
  b3:	3c 11                	cmp    $0x11,%al
  b5:	1c 8e                	sbb    $0x8e,%al
  b7:	43 e7 88             	rex.XB out %eax,$0x88
  ba:	42 21 87 9e 21 6d 01 	rex.X and %eax,0x16d219e(%rdi)
  c1:	1f                   	(bad)
  c2:	9d                   	popf
  c3:	5b                   	pop    %rbx
  c4:	70 9d                	jo     63 <.gnu.lto_.odr_types.bad037c419750572+0x63>
  c6:	91                   	xchg   %eax,%ecx
  c7:	09 ae 03 54 92 79    	or     %ebp,0x79925403(%rsi)
  cd:	36 24 4e             	ss and $0x4e,%al
  d0:	40 18 1f             	rex sbb %bl,(%rdi)
  d3:	12 8b c3 05 c9 a1    	adc    -0x5e36fa3d(%rbx),%cl
  d9:	42 e4 90             	rex.X in $0x90,%al
  dc:	aa                   	stos   %al,%es:(%rdi)
  dd:	38 3c 70             	cmp    %bh,(%rax,%rsi,2)
  e0:	87 97 76 38 00 e0    	xchg   %edx,-0x1fffc78a(%rdi)
  e6:	95                   	xchg   %eax,%ebp
  e7:	46 e9 6e 19 0d 00    	rex.RX jmp d1a5b <spin_lock.cpp.cc2eb890+0xd1a5b>
  ed:	3f                   	(bad)
  ee:	14 d8                	adc    $0xd8,%al
  f0:	de 4b a0             	fimuls -0x60(%rbx)
  f3:	5f                   	pop    %rdi
  f4:	50                   	push   %rax
  f5:	23 a2 ca 00 4e 44    	and    0x444e00ca(%rdx),%esp
  fb:	f3 20 1e             	repz and %bl,(%rsi)
  fe:	e4 98                	in     $0x98,%al
 100:	9f                   	lahf
 101:	9a                   	(bad)
 102:	e3 da                	jrcxz  de <.gnu.lto_.odr_types.bad037c419750572+0xde>
 104:	e7 6d                	out    %eax,$0x6d
 106:	d0 9a a0 22 e2 00    	rcrb   $1,0xe222a0(%rdx)
 10c:	8a                   	.byte 0x8a

Disassembly of section .gnu.lto_.inline.bad037c419750572:

0000000000000000 <.gnu.lto_.inline.bad037c419750572>:
   0:	28 b5 2f fd 60 1c    	sub    %dh,0x1c60fd2f(%rbp)
   6:	00 0d 04 00 42 c5    	add    %cl,-0x3abdfffc(%rip)        # ffffffffc5420010 <spin_lock.cpp.cc2eb890+0xffffffffc5420010>
   c:	11 1d 90 29 e9 ff    	adc    %ebx,-0x16d670(%rip)        # ffffffffffe929a2 <spin_lock.cpp.cc2eb890+0xffffffffffe929a2>
  12:	8f                   	(bad)
  13:	bd 55 ff 5c ef       	mov    $0xef5cff55,%ebp
  18:	4c 7e a4             	rex.WR jle ffffffffffffffbf <spin_lock.cpp.cc2eb890+0xffffffffffffffbf>
  1b:	01 f3                	add    %esi,%ebx
  1d:	83 ba bb f3 1a 97 22 	cmpl   $0x22,-0x68e50c45(%rdx)
  24:	9c                   	pushf
  25:	ec                   	in     (%dx),%al
  26:	23 b2 e5 4e 01 2a    	and    0x2a014ee5(%rdx),%esi
  2c:	1d a3 18 30 06       	sbb    $0x63018a3,%eax
  31:	f9                   	stc
  32:	09 01                	or     %eax,(%rcx)
  34:	4b c9                	rex.WXB leave
  36:	42                   	rex.X
  37:	49 7e 44             	rex.WB jle 7e <.gnu.lto_.inline.bad037c419750572+0x7e>
  3a:	63 91 ff e0 54 16    	movsxd 0x1654e0ff(%rcx),%edx
  40:	95                   	xchg   %eax,%ebp
  41:	e5 98                	in     $0x98,%eax
  43:	6d                   	insl   (%dx),%es:(%rdi)
  44:	51                   	push   %rcx
  45:	93                   	xchg   %eax,%ebx
  46:	5f                   	pop    %rdi
  47:	20 cd                	and    %cl,%ch
  49:	39 fe                	cmp    %edi,%esi
  4b:	87 66 6a             	xchg   %esp,0x6a(%rsi)
  4e:	a2 fe 8d 02 24 43 17 	movabs %al,0x3000174324028dfe
  55:	00 30 
  57:	8c c3                	mov    %es,%ebx
  59:	f0 da e6             	lock (bad)
  5c:	58                   	pop    %rax
  5d:	8d 2d 8e 36 3e 2c    	lea    0x2c3e368e(%rip),%ebp        # 2c3e36f1 <spin_lock.cpp.cc2eb890+0x2c3e36f1>
  63:	e0 f1                	loopne 56 <.gnu.lto_.inline.bad037c419750572+0x56>
  65:	0b 50 41             	or     0x41(%rax),%edx
  68:	14 0c                	adc    $0xc,%al
  6a:	45 70 51             	rex.RB jo be <spin_lock.cpp.cc2eb890+0xbe>
  6d:	fc                   	cld
  6e:	2a 02                	sub    (%rdx),%al
  70:	77 c1                	ja     33 <.gnu.lto_.inline.bad037c419750572+0x33>
  72:	d4                   	(bad)
  73:	0d af 20 c1 2b       	or     $0x2bc120af,%eax
  78:	d6                   	(bad)
  79:	6c                   	insb   (%dx),%es:(%rdi)
  7a:	6e                   	outsb  %ds:(%rsi),(%dx)
  7b:	05 6a 6d 60 04       	add    $0x4606d6a,%eax
  80:	f0 3d 6a 0f 53 0b    	lock cmp $0xb530f6a,%eax
  86:	71 d1                	jno    59 <.gnu.lto_.inline.bad037c419750572+0x59>
  88:	aa                   	stos   %al,%es:(%rdi)
  89:	00                   	.byte 0
  8a:	43                   	rex.XB

Disassembly of section .gnu.lto_.jmpfuncs.bad037c419750572:

0000000000000000 <.gnu.lto_.jmpfuncs.bad037c419750572>:
   0:	28 b5 2f fd 20 0e    	sub    %dh,0xe20fd2f(%rbp)
   6:	45 00 00             	add    %r8b,(%r8)
   9:	10 02                	adc    %al,(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	00 1c c0             	add    %bl,(%rax,%rax,8)
  10:	02                   	.byte 0x2

Disassembly of section .gnu.lto_.ipa_modref.bad037c419750572:

0000000000000000 <.gnu.lto_.ipa_modref.bad037c419750572>:
   0:	28 b5 2f fd 20 0e    	sub    %dh,0xe20fd2f(%rbp)
   6:	45 00 00             	add    %r8b,(%r8)
   9:	10 02                	adc    %al,(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	00 1c c0             	add    %bl,(%rax,%rax,8)
  10:	02                   	.byte 0x2

Disassembly of section .gnu.lto_.lto.bad037c419750572:

0000000000000000 <.gnu.lto_.lto.bad037c419750572>:
   0:	0e                   	(bad)
   1:	00 00                	add    %al,(%rax)
   3:	00 01                	add    %al,(%rcx)
   5:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572:

0000000000000000 <.gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572>:
   0:	28 b5 2f fd 60 c2    	sub    %dh,-0x3d9f02d1(%rbp)
   6:	00 95 0b 00 d6 d5    	add    %dl,-0x2a29fff5(%rbp)
   c:	51                   	push   %rcx
   d:	42 10 6f 9c          	rex.X adc %bpl,-0x64(%rdi)
  11:	0e                   	(bad)
  12:	05 f8 07 75 b9       	add    $0xb97507f8,%eax
  17:	20 48 11             	and    %cl,0x11(%rax)
  1a:	58                   	pop    %rax
  1b:	14 70                	adc    $0x70,%al
  1d:	0a 62 e3             	or     -0x1d(%rdx),%ah
  20:	33 c8                	xor    %eax,%ecx
  22:	91                   	xchg   %eax,%ecx
  23:	8e cc                	mov    %esp,%cs
  25:	17                   	(bad)
  26:	8c 85 18 76 10 ed    	mov    %es,-0x12ef89e8(%rbp)
  2c:	c5 88 d0             	(bad)
  2f:	7c 8c                	jl     ffffffffffffffbd <spin_lock.cpp.cc2eb890+0xffffffffffffffbd>
  31:	b1 86                	mov    $0x86,%cl
  33:	7f 94                	jg     ffffffffffffffc9 <spin_lock.cpp.cc2eb890+0xffffffffffffffc9>
  35:	ed                   	in     (%dx),%eax
  36:	ff f5                	push   %rbp
  38:	4e 00 05 04 52 c8 13 	rex.WRX add %r8b,0x13c85204(%rip)        # 13c85243 <spin_lock.cpp.cc2eb890+0x13c85243>
  3f:	e8 e2 37 0d 9f       	call   ffffffff9f0d3826 <spin_lock.cpp.cc2eb890+0xffffffff9f0d3826>
  44:	1c 49                	sbb    $0x49,%al
  46:	30 9f 5d 1c a0 df    	xor    %bl,-0x205fe3a3(%rdi)
  4c:	9a                   	(bad)
  4d:	dc 29                	fsubrl (%rcx)
  4f:	05 3d 00 42 00       	add    $0x42003d,%eax
  54:	3c 00                	cmp    $0x0,%al
  56:	94                   	xchg   %eax,%esp
  57:	5b                   	pop    %rbx
  58:	47 f1                	rex.RXB int1
  5a:	8f                   	(bad)
  5b:	0d 7b 95 78 0a       	or     $0xa78957b,%eax
  60:	35 46 b4 50 91       	xor    $0x9150b446,%eax
  65:	da dd                	fcmovu %st(5),%st
  67:	0b 82 1b 98 dc aa    	or     -0x552367e5(%rdx),%eax
  6d:	5e                   	pop    %rsi
  6e:	60                   	(bad)
  6f:	72 4b                	jb     bc <.gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572+0xbc>
  71:	49 dc bb 4a cf 07 c3 	rex.WB fdivrl -0x3cf830b6(%r11)
  78:	ef                   	out    %eax,(%dx)
  79:	fa                   	cli
  7a:	90                   	nop
  7b:	07                   	(bad)
  7c:	48 9d                	rex.W popf
  7e:	90                   	nop
  7f:	01 86 1f 2e 2b 6f    	add    %eax,0x6f2b2e1f(%rsi)
  85:	1c 47                	sbb    $0x47,%al
  87:	4b 30 f4             	rex.WXB xor %sil,%r12b
  8a:	70 57                	jo     e3 <.gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572+0xe3>
  8c:	b6 9d                	mov    $0x9d,%dh
  8e:	d9 9e 60 df 41 9f    	fstps  -0x60be20a0(%rsi)
  94:	3c c6                	cmp    $0xc6,%al
  96:	86 12                	xchg   %dl,(%rdx)
  98:	0f 56 ec             	orps   %xmm4,%xmm5
  9b:	8a 18                	mov    (%rax),%bl
  9d:	53                   	push   %rbx
  9e:	5b                   	pop    %rbx
  9f:	62 b1 f0 b0 80       	(bad)
  a4:	12 87 82 d0 c3 f4    	adc    -0xb3c2f7e(%rdi),%al
  aa:	81 5a 0d cb e0 f6 6d 	sbbl   $0x6df6e0cb,0xd(%rdx)
  b1:	6f                   	outsl  %ds:(%rsi),(%dx)
  b2:	d8 97 7d c1 c8 24    	fcoms  0x24c8c17d(%rdi)
  b8:	c8 05 13 d8          	enter  $0x1305,$0xd8
  bc:	15 21 19 d9 15       	adc    $0x15d91921,%eax
  c1:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  c2:	25 50 6e 5d 2f       	and    $0x2f5d6e50,%eax
  c7:	32 cb                	xor    %bl,%cl
  c9:	8b 9e e4 18 10 c2    	mov    -0x3defe71c(%rsi),%ebx
  cf:	64 02 b5 bb d3 33 1d 	add    %fs:0x1d33d3bb(%rbp),%dh
  d6:	95                   	xchg   %eax,%ebp
  d7:	3e e4 09             	ds in  $0x9,%al
  da:	48 38 8c 25 25 cd 80 	rex.W cmp %cl,0x7a80cd25(%rbp,%riz,1)
  e1:	7a 
  e2:	e6 4b                	out    %al,$0x4b
  e4:	31 b2 c0 99 4f ce    	xor    %esi,-0x31b06640(%rdx)
  ea:	50                   	push   %rax
  eb:	3d a9 6a a5 97       	cmp    $0x97a56aa9,%eax
  f0:	0b 13                	or     (%rbx),%edx
  f2:	08 0c ba             	or     %cl,(%rdx,%rdi,4)
  f5:	96                   	xchg   %eax,%esi
  f6:	7a 05                	jp     fd <.gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572+0xfd>
  f8:	20 02                	and    %al,(%rdx)
  fa:	76 28                	jbe    124 <.gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572+0x124>
  fc:	e9 5a fc 5e 19       	jmp    195efd5b <spin_lock.cpp.cc2eb890+0x195efd5b>
 101:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 102:	9e                   	sahf
 103:	fc                   	cld
 104:	ca 68 ed             	lret   $0xed68
 107:	b0 2d                	mov    $0x2d,%al
 109:	5d                   	pop    %rbp
 10a:	5d                   	pop    %rbp
 10b:	fc                   	cld
 10c:	f5                   	cmc
 10d:	20 bf 54 e9 9c d0    	and    %bh,-0x2f6316ac(%rdi)
 113:	47 d3 2c 5f          	rex.RXB shrl %cl,(%r15,%r11,2)
 117:	22 40 d8             	and    -0x28(%rax),%al
 11a:	74 b2                	je     ce <.gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572+0xce>
 11c:	6d                   	insl   (%dx),%es:(%rdi)
 11d:	9b                   	fwait
 11e:	22 d1                	and    %cl,%dl
 120:	36 2b 6c 21 8f       	ss sub -0x71(%rcx,%riz,1),%ebp
 125:	06                   	(bad)
 126:	e2 44                	loop   16c <.gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572+0x16c>
 128:	dd 81 8f a6 a9 29    	fldl   0x29a9a68f(%rcx)
 12e:	cc                   	int3
 12f:	4e a7                	rex.WRX cmpsq %es:(%rdi),%ds:(%rsi)
 131:	d9 68 1b             	fldcw  0x1b(%rax)
 134:	f7 09 8d 34 58 37    	testl  $0x3758348d,(%rcx)
 13a:	e2 36                	loop   172 <.gnu.lto__ZStanSt12memory_orderSt23__memory_order_modifier.35.bad037c419750572+0x172>
 13c:	18 66 66             	sbb    %ah,0x66(%rsi)
 13f:	b3 01                	mov    $0x1,%bl
 141:	06                   	(bad)
 142:	b3 58                	mov    $0x58,%bl
 144:	36 ac                	lods   %ds:(%rsi),%al
 146:	c3                   	ret
 147:	21 79 36             	and    %edi,0x36(%rcx)
 14a:	10 87 59 e8 48 98    	adc    %al,-0x67b717a7(%rdi)
 150:	c5 b6 b8             	(bad)
 153:	d7                   	xlat   %ds:(%rbx)
 154:	0f 00 5e ed          	ltr    -0x13(%rsi)
 158:	40 d3 1e             	rex rcrl %cl,(%rsi)
 15b:	b7 a1                	mov    $0xa1,%bh
 15d:	64 53                	fs push %rbx
 15f:	ac                   	lods   %ds:(%rsi),%al
 160:	26 28 4f 6f          	es sub %cl,0x6f(%rdi)
 164:	74 34                	je     19a <spin_lock.cpp.cc2eb890+0x19a>
 166:	c1 81 6c 84 e7 a2 19 	roll   $0x19,-0x5d187b94(%rcx)
 16d:	4c                   	rex.WR
 16e:	2e 54                	cs push %rsp
 170:	11 7f d2             	adc    %edi,-0x2e(%rdi)
 173:	4a c3                	rex.WX ret
 175:	56                   	push   %rsi
 176:	bb cc 33 5d 93       	mov    $0x935d33cc,%ebx
 17b:	0c                   	.byte 0xc

Disassembly of section .gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572:

0000000000000000 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572>:
   0:	28 b5 2f fd 60 fe    	sub    %dh,-0x19f02d1(%rbp)
   6:	02 fd                	add    %ch,%bh
   8:	16                   	(bad)
   9:	00 06                	add    %al,(%rsi)
   b:	ea                   	(bad)
   c:	93                   	xchg   %eax,%ebx
   d:	48 d0 54 55 63       	rex.W rclb $1,0x63(%rbp,%rdx,2)
  12:	59                   	pop    %rcx
  13:	f2 9d                	repnz popf
  15:	e8 82 23 04 ab       	call   ffffffffab04239c <spin_lock.cpp.cc2eb890+0xffffffffab04239c>
  1a:	1f                   	(bad)
  1b:	76 7f                	jbe    9c <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x9c>
  1d:	56                   	push   %rsi
  1e:	7c b6                	jl     ffffffffffffffd6 <spin_lock.cpp.cc2eb890+0xffffffffffffffd6>
  20:	08 72 90             	or     %dh,-0x70(%rdx)
  23:	72 69                	jb     8e <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x8e>
  25:	46 0e                	rex.RX (bad)
  27:	8e c0                	mov    %eax,%es
  29:	80 7e 32 ef          	cmpb   $0xef,0x32(%rsi)
  2d:	75 46                	jne    75 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x75>
  2f:	17                   	(bad)
  30:	85 ad 95 79 9e 05    	test   %ebp,0x59e7995(%rbp)
  36:	c2 30 3b             	ret    $0x3b30
  39:	09 43 d7             	or     %eax,-0x29(%rbx)
  3c:	c5 63 3f             	(bad)
  3f:	c3                   	ret
  40:	17                   	(bad)
  41:	0f 29 15 69 0c 54 0d 	movaps %xmm2,0xd540c69(%rip)        # d540cb1 <spin_lock.cpp.cc2eb890+0xd540cb1>
  48:	ad                   	lods   %ds:(%rsi),%eax
  49:	81 28 44 45 00 4c    	subl   $0x4c004544,(%rax)
  4f:	ba ed 96 5b ca       	mov    $0xca5b96ed,%edx
  54:	94                   	xchg   %eax,%esp
  55:	02 7e 00             	add    0x0(%rsi),%bh
  58:	7e 00                	jle    5a <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x5a>
  5a:	79 00                	jns    5c <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x5c>
  5c:	76 e8                	jbe    46 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x46>
  5e:	87 54 69 bc          	xchg   %edx,-0x44(%rcx,%rbp,2)
  62:	46 ec                	rex.RX in (%dx),%al
  64:	3c 0d                	cmp    $0xd,%al
  66:	08 2e                	or     %ch,(%rsi)
  68:	d5 15 61             	{rex2 0x15} (bad)
  6b:	61                   	(bad)
  6c:	24 78                	and    $0x78,%al
  6e:	ef                   	out    %eax,(%dx)
  6f:	35 39 02 79 4b       	xor    $0x4b790239,%eax
  74:	22 86 8a 90 28 b5    	and    -0x4ad76f76(%rsi),%al
  7a:	2f                   	(bad)
  7b:	e3 33                	jrcxz  b0 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0xb0>
  7d:	62 37 37 9c 77       	(bad)
  82:	a9 0a 1d 2c 78       	test   $0x782c1d0a,%eax
  87:	82                   	(bad)
  88:	f7 9a 26 1f 20 6f    	negl   0x6f201f26(%rdx)
  8e:	6d                   	insl   (%dx),%es:(%rdi)
  8f:	9e                   	sahf
  90:	c0 78 4b 7e          	sarb   $0x7e,0x4b(%rax)
  94:	c0 78 8b c2          	sarb   $0xc2,-0x75(%rax)
  98:	20 66 d9             	and    %ah,-0x27(%rsi)
  9b:	cd f2                	int    $0xf2
  9d:	c6 02 ec             	movb   $0xec,(%rdx)
  a0:	c1 11 de             	rcll   $0xde,(%rcx)
  a3:	6b 9a d4 15 97 dd 8a 	imul   $0xffffff8a,-0x2268ea2c(%rdx),%ebx
  aa:	95                   	xchg   %eax,%ebp
  ab:	ca fc d9             	lret   $0xd9fc
  ae:	ad                   	lods   %ds:(%rsi),%eax
  af:	8d 57 48             	lea    0x48(%rdi),%edx
  b2:	71 33                	jno    e7 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0xe7>
  b4:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  b5:	f7 cb 89 b8 58 cb    	test   $0xcb58b889,%ebx
  bb:	85 78 fd             	test   %edi,-0x3(%rax)
  be:	79 91                	jns    51 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x51>
  c0:	8b 9e 52 48 ef 97    	mov    -0x6810b7ae(%rsi),%ebx
  c6:	03 71 2a             	add    0x2a(%rcx),%esi
  c9:	ca 86 c3             	lret   $0xc386
  cc:	a1 69 2d a7 bb 47 db 	movabs 0x60b6db47bba72d69,%eax
  d3:	b6 60 
  d5:	7b c6                	jnp    9d <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x9d>
  d7:	ae                   	scas   %es:(%rdi),%al
  d8:	0a 02                	or     (%rdx),%al
  da:	0d 6e 22 6c a5       	or     $0xa56c226e,%eax
  df:	f0 d6                	lock (bad)
  e1:	dc f7                	fdiv   %st,%st(7)
  e3:	ff                   	(bad)
  e4:	7e 9d                	jle    83 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x83>
  e6:	1b 35 ce 76 31 74    	sbb    0x743176ce(%rip),%esi        # 743177ba <spin_lock.cpp.cc2eb890+0x743177ba>
  ec:	3b b7 c6 2c 59 fb    	cmp    -0x4a6d33a(%rdi),%esi
  f2:	7e ef                	jle    e3 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0xe3>
  f4:	27                   	(bad)
  f5:	ec                   	in     (%dx),%al
  f6:	37                   	(bad)
  f7:	7c 9c                	jl     95 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x95>
  f9:	e3 78                	jrcxz  173 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x173>
  fb:	8e f3                	mov    %ebx,%?
  fd:	00 8f c0 b8 f7 8a    	add    %cl,-0x75084740(%rdi)
 103:	74 72                	je     177 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x177>
 105:	5e                   	pop    %rsi
 106:	bf 1d 70 1e 00       	mov    $0x1e701d,%edi
 10b:	d8 80 3e be d2 ad    	fadds  -0x522d41c2(%rax)
 111:	e8 47 b2 f4 3a       	call   3af4b35d <spin_lock.cpp.cc2eb890+0x3af4b35d>
 116:	b0 e7                	mov    $0xe7,%al
 118:	bc 0c 98 3b 1d       	mov    $0x1d3b980c,%esp
 11d:	04 9e                	add    $0x9e,%al
 11f:	e9 d6 30 e4 8f       	jmp    ffffffff8fe431fa <spin_lock.cpp.cc2eb890+0xffffffff8fe431fa>
 124:	9c                   	pushf
 125:	e1 2e                	loope  155 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x155>
 127:	79 6f                	jns    198 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x198>
 129:	e9 56 c4 83 54       	jmp    5483c584 <spin_lock.cpp.cc2eb890+0x5483c584>
 12e:	e9 7f b0 f3 34       	jmp    34f3b1b2 <spin_lock.cpp.cc2eb890+0x34f3b1b2>
 133:	88 e6                	mov    %ah,%dh
 135:	cd 8d                	int    $0x8d
 137:	ce                   	(bad)
 138:	9c                   	pushf
 139:	ad                   	lods   %ds:(%rsi),%eax
 13a:	14 de                	adc    $0xde,%al
 13c:	47 5e                	rex.RXB pop %r14
 13e:	17                   	(bad)
 13f:	35 50 0e d0 c7       	xor    $0xc7d00e50,%eax
 144:	27                   	(bad)
 145:	bc 1c cc 12 ec       	mov    $0xec12cc1c,%esp
 14a:	94                   	xchg   %eax,%esp
 14b:	63 68 2b             	movsxd 0x2b(%rax),%ebp
 14e:	6f                   	outsl  %ds:(%rsi),(%dx)
 14f:	fd                   	std
 150:	1e                   	(bad)
 151:	cc                   	int3
 152:	16                   	(bad)
 153:	dd de                	fstp   %st(6)
 155:	8e d9                	mov    %ecx,%ds
 157:	a2 3f 57 18 e8 3f 90 	movabs %al,0x1495903fe818573f
 15e:	95 14 
 160:	a2 ac a9 34 ff fc 8f 	movabs %al,0x84d68ffcff34a9ac
 167:	d6 84 
 169:	7f f8                	jg     163 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x163>
 16b:	69 d6 7d b4 50 28    	imul   $0x2850b47d,%esi,%edx
 171:	ef                   	out    %eax,(%dx)
 172:	bd 29 b7 3f fd       	mov    $0xfd3fb729,%ebp
 177:	72 60                	jb     1d9 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x1d9>
 179:	8c 53 7a             	mov    %ss,0x7a(%rbx)
 17c:	b8 32 f8 2d 6e       	mov    $0x6e2df832,%eax
 181:	fd                   	std
 182:	0d e3 2d a8 fe       	or     $0xfea82de3,%eax
 187:	7c e8                	jl     171 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x171>
 189:	45                   	rex.RB
 18a:	4f 29 a4 f7 23 51 eb 	sub    %r12,0x58eb5123(%r15,%r14,8)
 191:	58 
 192:	43 b4 da             	rex.XB mov $0xda,%r12b
 195:	6a 5a                	push   $0x5a
 197:	e3 a1                	jrcxz  13a <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x13a>
 199:	d5 6b 93             	{rex2 0x6b} xchg %rax,%r11
 19c:	e6 a3                	out    %al,$0xa3
 19e:	21 ad a5 3f aa 36    	and    %ebp,0x36aa3fa5(%rbp)
 1a4:	77 c8                	ja     16e <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x16e>
 1a6:	d4                   	(bad)
 1a7:	e4 48                	in     $0x48,%al
 1a9:	0d fa ef 1e ad       	or     $0xad1eeffa,%eax
 1ae:	a9 c5 f3 fe 7a       	test   $0x7afef3c5,%eax
 1b3:	f3 a7                	repz cmpsl %es:(%rdi),%ds:(%rsi)
 1b5:	22 09                	and    (%rcx),%cl
 1b7:	25 91 9b e3 dc       	and    $0xdce39b91,%eax
 1bc:	ee                   	out    %al,(%dx)
 1bd:	3d 31 14 de 20       	cmp    $0x20de1431,%eax
 1c2:	76 c7                	jbe    18b <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x18b>
 1c4:	cd 0e                	int    $0xe
 1c6:	a3 68 ee 8e 09 9c 49 	movabs %eax,0x6666499c098eee68
 1cd:	66 66 
 1cf:	79 0b                	jns    1dc <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x1dc>
 1d1:	2d 16 8b 4b 34       	sub    $0x344b8b16,%eax
 1d6:	8b 69 d5             	mov    -0x2b(%rcx),%ebp
 1d9:	52                   	push   %rdx
 1da:	59                   	pop    %rcx
 1db:	49 b5 5c             	rex.WB mov $0x5c,%r13b
 1de:	ac                   	lods   %ds:(%rsi),%al
 1df:	95                   	xchg   %eax,%ebp
 1e0:	92                   	xchg   %eax,%edx
 1e1:	17                   	(bad)
 1e2:	93                   	xchg   %eax,%ebx
 1e3:	07                   	(bad)
 1e4:	0e                   	(bad)
 1e5:	56                   	push   %rsi
 1e6:	56                   	push   %rsi
 1e7:	28 2a                	sub    %ch,(%rdx)
 1e9:	95                   	xchg   %eax,%ebp
 1ea:	49                   	rex.WB
 1eb:	46                   	rex.RX
 1ec:	46                   	rex.RX
 1ed:	65 6a 51             	gs push $0x51
 1f0:	c5 b8 a4             	(bad)
 1f3:	60                   	(bad)
 1f4:	58                   	pop    %rax
 1f5:	32 ad 02 2a a9 54    	xor    0x54a92a02(%rbp),%ch
 1fb:	b5 8a                	mov    $0x8a,%ch
 1fd:	f5                   	cmc
 1fe:	12 e3                	adc    %bl,%ah
 200:	52                   	push   %rdx
 201:	39 9d 98 50 4c 0b    	cmp    %ebx,0xb4c5098(%rbp)
 207:	4e                   	rex.WRX
 208:	4e 25 25 aa d3 ea    	rex.WRX and $0xffffffffead3aa25,%rax
 20e:	c2 cb 45             	ret    $0x45cb
 211:	05 c3 3a cd b4       	add    $0xb4cd3ac3,%eax
 216:	5e                   	pop    %rsi
 217:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 218:	91                   	xchg   %eax,%ecx
 219:	6d                   	insl   (%dx),%es:(%rdi)
 21a:	93                   	xchg   %eax,%ebx
 21b:	f6 6a f3             	imulb  -0xd(%rdx)
 21e:	9a                   	(bad)
 21f:	cd 8e                	int    $0x8e
 221:	56                   	push   %rsi
 222:	39 90 ec 66 24 76    	cmp    %edx,0x762466ec(%rax)
 228:	6c                   	insb   (%dx),%es:(%rdi)
 229:	d2 d8                	rcr    %cl,%al
 22b:	50                   	push   %rax
 22c:	15 eb 6d 5c f4       	adc    $0xf45c6deb,%eax
 231:	59                   	pop    %rcx
 232:	f1                   	int1
 233:	83 22 46             	andl   $0x46,(%rdx)
 236:	09 5a bd             	or     %ebx,-0x43(%rdx)
 239:	22 59 43             	and    0x43(%rcx),%bl
 23c:	35 04 c4 41 01       	xor    $0x141c404,%eax
 241:	b8 8b 33 cc 0e       	mov    $0xecc338b,%eax
 246:	1e                   	(bad)
 247:	45 3b 47 04          	cmp    0x4(%r15),%r8d
 24b:	ef                   	out    %eax,(%dx)
 24c:	bd 09 6e 8d 9a       	mov    $0x9a8d6e09,%ebp
 251:	d1 9f 5a 6b 69 3b    	rcrl   $1,0x3b696b5a(%rdi)
 257:	00 1d 2b a8 3a 3b    	add    %bl,0x3b3aa82b(%rip)        # 3b3aaa88 <spin_lock.cpp.cc2eb890+0x3b3aaa88>
 25d:	20 40 02             	and    %al,0x2(%rax)
 260:	63 94 42 de c8 19 19 	movsxd 0x1919c8de(%rdx,%rax,2),%edx
 267:	0e                   	(bad)
 268:	08 7c eb 9c          	or     %bh,-0x64(%rbx,%rbp,8)
 26c:	00 3e                	add    %bh,(%rsi)
 26e:	66 b6 8b             	data16 mov $0x8b,%dh
 271:	18 05 b0 91 aa 65    	sbb    %al,0x65aa91b0(%rip)        # 65aa9427 <spin_lock.cpp.cc2eb890+0x65aa9427>
 277:	01 f6                	add    %esi,%esi
 279:	36 80 77 91 58       	ss xorb $0x58,-0x6f(%rdi)
 27e:	ed                   	in     (%dx),%eax
 27f:	32 9d da de 42 c3    	xor    -0x3cbd2126(%rbp),%bl
 285:	36 8c 23             	ss mov %fs,(%rbx)
 288:	ad                   	lods   %ds:(%rsi),%eax
 289:	67 2b 24 d1          	sub    (%ecx,%edx,8),%esp
 28d:	96                   	xchg   %eax,%esi
 28e:	e8 3e c3 36 76       	call   7636c5d1 <spin_lock.cpp.cc2eb890+0x7636c5d1>
 293:	c3                   	ret
 294:	55                   	push   %rbp
 295:	7b ae                	jnp    245 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x245>
 297:	06                   	(bad)
 298:	ce                   	(bad)
 299:	2d 5c 02 8d 0c       	sub    $0xc8d025c,%eax
 29e:	0c c6                	or     $0xc6,%al
 2a0:	58                   	pop    %rax
 2a1:	f9                   	stc
 2a2:	12 4f 2f             	adc    0x2f(%rdi),%cl
 2a5:	5c                   	pop    %rsp
 2a6:	ae                   	scas   %es:(%rdi),%al
 2a7:	31 2e                	xor    %ebp,(%rsi)
 2a9:	5c                   	pop    %rsp
 2aa:	7a ea                	jp     296 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x296>
 2ac:	8b 10                	mov    (%rax),%edx
 2ae:	90                   	nop
 2af:	ad                   	lods   %ds:(%rsi),%eax
 2b0:	15 fb 25 84 83       	adc    $0x838425fb,%eax
 2b5:	21 f0                	and    %esi,%eax
 2b7:	66 d2 dc             	data16 rcr %cl,%ah
 2ba:	d0 95 76 0c 9c 05    	rclb   $1,0x59c0c76(%rbp)
 2c0:	e1 8b                	loope  24d <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x24d>
 2c2:	78 d1                	js     295 <.gnu.lto__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order.151.bad037c419750572+0x295>
 2c4:	be 93 a0 9f 9a       	mov    $0x9a9fa093,%esi
 2c9:	1b 18                	sbb    (%rax),%ebx
 2cb:	d5 b0 90 61 85       	{rex2 0xb0} seto -0x7b(%r17)
 2d0:	5c                   	pop    %rsp
 2d1:	04 a3                	add    $0xa3,%al
 2d3:	39 e4                	cmp    %esp,%esp
 2d5:	46 8f                	rex.RX (bad)
 2d7:	0c a3                	or     $0xa3,%al
 2d9:	09 47 a5             	or     %eax,-0x5b(%rdi)
 2dc:	d8 3e                	fdivrs (%rsi)
 2de:	64 20 e2             	fs and %ah,%dl
 2e1:	2a 06                	sub    (%rsi),%al
 2e3:	b5 e6                	mov    $0xe6,%ch
 2e5:	c1 2e a3             	shrl   $0xa3,(%rsi)
 2e8:	07                   	(bad)

Disassembly of section .gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572:

0000000000000000 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572>:
   0:	28 b5 2f fd 60 6a    	sub    %dh,0x6a60fd2f(%rbp)
   6:	09 e5                	or     %esp,%ebp
   8:	2b 00                	sub    (%rax),%eax
   a:	5a                   	pop    %rdx
   b:	4a 88 10             	rex.WX mov %dl,(%rax)
   e:	48 70 dc             	rex.W jo ffffffffffffffed <spin_lock.cpp.cc2eb890+0xffffffffffffffed>
  11:	51                   	push   %rcx
  12:	3a 7f 85             	cmp    -0x7b(%rdi),%bh
  15:	0d 55 8b a6 7f       	or     $0x7fa68b55,%eax
  1a:	a0 65 3e 60 27 4d 5e 	movabs 0x7a505e4d27603e65,%al
  21:	50 7a 
  23:	f2 42 c6             	repnz rex.X (bad)
  26:	b7 c2                	mov    $0xc2,%bh
  28:	0a 98 76 40 59 49    	or     0x49594076(%rax),%bl
  2e:	68 eb ee 6f fc       	push   $0xfffffffffc6feeeb
  33:	ab                   	stos   %eax,%es:(%rdi)
  34:	a8 c9                	test   $0xc9,%al
  36:	02 7c 68 71          	add    0x71(%rax,%rbp,2),%bh
  3a:	0d 84 e5 80 c3       	or     $0xc380e584,%eax
  3f:	3a e1                	cmp    %cl,%ah
  41:	f0 a1 44 2a 58 a5 3e 	lock movabs 0x6f338d3ea5582a44,%eax
  48:	8d 33 6f 
  4b:	54                   	push   %rsp
  4c:	bf 5d d1 9e cd       	mov    $0xcd9ed15d,%edi
  51:	12 42 62             	adc    0x62(%rdx),%al
  54:	f7 4e 32 f2 00 fd 00 	testl  $0xfd00f2,0x32(%rsi)
  5b:	e1 00                	loope  5d <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x5d>
  5d:	12 5e 76             	adc    0x76(%rsi),%bl
  60:	a2 bb 7d aa b6 dd b9 	movabs %al,0xa134b9ddb6aa7dbb
  67:	34 a1 
  69:	eb e4                	jmp    4f <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x4f>
  6b:	4f 90                	rex.WRXB xchg %rax,%r8
  6d:	17                   	(bad)
  6e:	93                   	xchg   %eax,%ebx
  6f:	6a 5f                	push   $0x5f
  71:	ce                   	(bad)
  72:	63 73 ce             	movsxd -0x32(%rbx),%esi
  75:	72 ce                	jb     45 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x45>
  77:	c2 86 c0             	ret    $0xc086
  7a:	3e 0d ba e5 cc 84    	ds or  $0x84cce5ba,%eax
  80:	7e bb                	jle    3d <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x3d>
  82:	0f f6 30             	psadbw (%rax),%mm6
  85:	e4 9d                	in     $0x9d,%al
  87:	29 2e                	sub    %ebp,(%rsi)
  89:	96                   	xchg   %eax,%esi
  8a:	af                   	scas   %es:(%rdi),%eax
  8b:	8e 2e                	mov    (%rsi),%gs
  8d:	42 a0 d0 9c 9d c2 26 	rex.X movabs 0x6d3ec026c29d9cd0,%al
  94:	c0 3e 6d 
  97:	e7 81                	out    %eax,$0x81
  99:	ea                   	(bad)
  9a:	53                   	push   %rbx
  9b:	f6 3f                	idivb  (%rdi)
  9d:	f5                   	cmc
  9e:	69 23 bb a1 77 36    	imul   $0x3677a1bb,(%rbx),%esp
  a4:	f3 12 da             	repz adc %dl,%bl
  a7:	90                   	nop
  a8:	28 6d 39             	sub    %ch,0x39(%rbp)
  ab:	e7 22                	out    %eax,$0x22
  ad:	ec                   	in     (%dx),%al
  ae:	e3 c8                	jrcxz  78 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x78>
  b0:	03 7d 7e             	add    0x7e(%rbp),%edi
  b3:	be 1e af 87 67       	mov    $0x6787af1e,%esi
  b8:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  b9:	6b 73 38 76          	imul   $0x76,0x38(%rbx),%esi
  bd:	55                   	push   %rbp
  be:	d3 1b                	rcrl   %cl,(%rbx)
  c0:	be c8 fe d8 2b       	mov    $0x2bd8fec8,%esi
  c5:	8c 31                	mov    %?,(%rcx)
  c7:	a1 52 26 45 2b 79 e0 	movabs 0x460fe0792b452652,%eax
  ce:	0f 46 
  d0:	8b 35 25 5e cc 20    	mov    0x20cc5e25(%rip),%esi        # 20cc5efb <spin_lock.cpp.cc2eb890+0x20cc5efb>
  d6:	f7 01 f2 9f 96 1f    	testl  $0x1f969ff2,(%rcx)
  dc:	f7 01 f1 71 7b 40    	testl  $0x407b71f1,(%rcx)
  e2:	7a 5c                	jp     140 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x140>
  e4:	5e                   	pop    %rsi
  e5:	f3 3d 69 36 ce d3    	repz cmp $0xd3ce3669,%eax
  eb:	f5                   	cmc
  ec:	9d                   	popf
  ed:	97                   	xchg   %eax,%edi
  ee:	bf 79 c6 4e 8d       	mov    $0x8d4ec679,%edi
  f3:	eb 8c                	jmp    81 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x81>
  f5:	2c 69                	sub    $0x69,%al
  f7:	dc b6 cb c8 72 c6    	fdivl  -0x398d3735(%rsi)
  fd:	cd f5                	int    $0xf5
  ff:	bc 98 32 8e 0b       	mov    $0xb8e3298,%esp
 104:	f3 9f                	repz lahf
 106:	09 6a 31             	or     %ebp,0x31(%rdx)
 109:	b2 da                	mov    $0xda,%dl
 10b:	e4 78                	in     $0x78,%al
 10d:	31 b9 ce 0e f0 62    	xor    %edi,0x62f00ece(%rcx)
 113:	6e                   	outsb  %ds:(%rsi),(%dx)
 114:	7d 1d                	jge    133 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x133>
 116:	f3 1c 19             	repz sbb $0x19,%al
 119:	12 34 31             	adc    (%rcx,%rsi,1),%dh
 11c:	ae                   	scas   %es:(%rdi),%al
 11d:	b6 5a                	mov    $0x5a,%dh
 11f:	2a 6e 4a             	sub    0x4a(%rsi),%ch
 122:	66 b9 85 e5          	mov    $0xe585,%cx
 126:	17                   	(bad)
 127:	4b ab                	rex.WXB stos %rax,%es:(%rdi)
 129:	ea                   	(bad)
 12a:	de ae b4 5e 1c bf    	fisubrs -0x40e3a14c(%rsi)
 130:	cc                   	int3
 131:	7f 84                	jg     b7 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0xb7>
 133:	8c 2b                	mov    %gs,(%rbx)
 135:	49 b4 4c             	rex.WB mov $0x4c,%r12b
 138:	8a 96 8b df 1b 32    	mov    0x321bdf8b(%rsi),%dl
 13e:	1a 8d f6 bd d2 62    	sbb    0x62d2bdf6(%rbp),%cl
 144:	be 7f ba fb 58       	mov    $0x58fbba7f,%esi
 149:	dd bd a5 7b b5 13    	fnstsw 0x13b57ba5(%rbp)
 14f:	36 a2 6d 59 4c fa 1c 	ss movabs %al,0xa06e21cfa4c596d
 156:	e2 06 0a 
 159:	9d                   	popf
 15a:	53                   	push   %rbx
 15b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 15c:	0d 1b 36 4f 41       	or     $0x414f361b,%eax
 161:	c9                   	leave
 162:	a0 17 2b 9e 75 88 8c 	movabs 0x4fb18c88759e2b17,%al
 169:	b1 4f 
 16b:	d7                   	xlat   %ds:(%rbx)
 16c:	5c                   	pop    %rsp
 16d:	4d 32 ea             	rex.WRB xor %r10b,%r13b
 170:	6a 84                	push   $0xffffffffffffff84
 172:	cc                   	int3
 173:	68 d2 79 a0 09       	push   $0x9a079d2
 178:	fb                   	sti
 179:	f4                   	hlt
 17a:	cf                   	iret
 17b:	9f                   	lahf
 17c:	cc                   	int3
 17d:	97                   	xchg   %eax,%edi
 17e:	73 f9                	jae    179 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x179>
 180:	99                   	cltd
 181:	8e 30                	mov    (%rax),%?
 183:	95                   	xchg   %eax,%ebp
 184:	cf                   	iret
 185:	ba 96 5d 95 64       	mov    $0x64955d96,%edx
 18a:	9b                   	fwait
 18b:	a0 16 a3 ea 66 ff d9 	movabs 0xdd75d9ff66eaa316,%al
 192:	75 dd 
 194:	2f                   	(bad)
 195:	a3 16 b4 fa 1a f3 15 	movabs %eax,0x4c0615f31afab416
 19c:	06 4c 
 19e:	d0 0a                	rorb   $1,(%rdx)
 1a0:	ec                   	in     (%dx),%al
 1a1:	96                   	xchg   %eax,%esi
 1a2:	b7 ae                	mov    $0xae,%bh
 1a4:	73 ce                	jae    174 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x174>
 1a6:	f3 0d d4 0b 18 da    	repz or $0xda180bd4,%eax
 1ac:	d3 8c cf d2 ef 12 b4 	rorl   %cl,-0x4bed102e(%rdi,%rcx,8)
 1b3:	0a e3                	or     %bl,%ah
 1b5:	d2 47 0a             	rolb   %cl,0xa(%rdi)
 1b8:	90                   	nop
 1b9:	fd                   	std
 1ba:	14 94                	adc    $0x94,%al
 1bc:	74 36                	je     1f4 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x1f4>
 1be:	b3 ee                	mov    $0xee,%bl
 1c0:	93                   	xchg   %eax,%ebx
 1c1:	ca 79 e0             	lret   $0xe079
 1c4:	e9 91 02 63 3f       	jmp    3f63045a <spin_lock.cpp.cc2eb890+0x3f63045a>
 1c9:	01 55 25             	add    %edx,0x25(%rbp)
 1cc:	df 74 20 63          	fbstp  0x63(%rax,%riz,1)
 1d0:	27                   	(bad)
 1d1:	ab                   	stos   %eax,%es:(%rdi)
 1d2:	ad                   	lods   %ds:(%rsi),%eax
 1d3:	e8 69 1f cd d8       	call   ffffffffd8cd2141 <spin_lock.cpp.cc2eb890+0xffffffffd8cd2141>
 1d8:	dd 5e cb             	fstpl  -0x35(%rsi)
 1db:	89 67 e9             	mov    %esp,-0x17(%rdi)
 1de:	ef                   	out    %eax,(%dx)
 1df:	48 13 f6             	adc    %rsi,%rsi
 1e2:	67 1f                	addr32 (bad)
 1e4:	4b 23 a3 4e d6 af f2 	rex.WXB and -0xd5029b2(%r11),%rsp
 1eb:	2b 28                	sub    (%rax),%ebp
 1ed:	d0 94 24 c9 39 b7 67 	rclb   $1,0x67b739c9(%rsp)
 1f4:	56                   	push   %rsi
 1f5:	8e cf                	mov    %edi,%cs
 1f7:	2a 96 2c 70 2d 9c    	sub    -0x63d28fd4(%rsi),%dl
 1fd:	5c                   	pop    %rsp
 1fe:	42 e9 fd 59 d4 ad    	rex.X jmp ffffffffadd45c01 <spin_lock.cpp.cc2eb890+0xffffffffadd45c01>
 204:	1c 81                	sbb    $0x81,%al
 206:	9c                   	pushf
 207:	37                   	(bad)
 208:	98                   	cwtl
 209:	0b 98 70 c4 84 4f    	or     0x4f84c470(%rax),%ebx
 20f:	fb                   	sti
 210:	04 fb                	add    $0xfb,%al
 212:	d4                   	(bad)
 213:	8c 4d 2e             	mov    %cs,0x2e(%rbp)
 216:	33 4b 05             	xor    0x5(%rbx),%ecx
 219:	2d 09 94 d6 4b       	sub    $0x4bd69409,%eax
 21e:	e8 de 9b b5 98       	call   ffffffff98b59e01 <spin_lock.cpp.cc2eb890+0xffffffff98b59e01>
 223:	d4                   	(bad)
 224:	bd d1 a3 c1 7c       	mov    $0x7cc1a3d1,%ebp
 229:	03 a5 12 d5 9f d2    	add    -0x2d602aee(%rbp),%esp
 22f:	0e                   	(bad)
 230:	11 ea                	adc    %ebp,%edx
 232:	fe                   	(bad)
 233:	94                   	xchg   %eax,%esp
 234:	47 89 ba 14 a9 20 2a 	rex.RXB mov %r15d,0x2a20a914(%r10)
 23b:	67 d6                	addr32 (bad)
 23d:	fa                   	cli
 23e:	61                   	(bad)
 23f:	c6                   	(bad)
 240:	69 b1 76 e0 69 53 e8 	imul   $0xc6e943e8,0x5369e076(%rcx),%esi
 247:	43 e9 c6 
 24a:	3d ed aa 13 de       	cmp    $0xde13aaed,%eax
 24f:	ed                   	in     (%dx),%eax
 250:	37                   	(bad)
 251:	18 b5 45 22 aa c7    	sbb    %dh,-0x3855ddbb(%rbp)
 257:	d2 e1                	shl    %cl,%cl
 259:	5b                   	pop    %rbx
 25a:	0e                   	(bad)
 25b:	b7 d8                	mov    $0xd8,%bh
 25d:	68 ec 6a f9 4b       	push   $0x4bf96aec
 262:	a9 2a ce 61 23       	test   $0x2361ce2a,%eax
 267:	2d 2b b2 4c e1       	sub    $0xe14cb22b,%eax
 26c:	9c                   	pushf
 26d:	ae                   	scas   %es:(%rdi),%al
 26e:	1d 87 7b 67 9e       	sbb    $0x9e677b87,%eax
 273:	ac                   	lods   %ds:(%rsi),%al
 274:	a1 ba 74 9a c5 b8 0c 	movabs 0x5f560cb8c59a74ba,%eax
 27b:	56 5f 
 27d:	64 4b be 64 28 71 be 	fs rex.WXB movabs $0x39c598adbe712864,%r14
 284:	ad 98 c5 39 
 288:	36 de 32             	ss fidivs (%rdx)
 28b:	2f                   	(bad)
 28c:	db d8                	fcmovnu %st(0),%st
 28e:	0d bd b1 79 4b       	or     $0x4b79b1bd,%eax
 293:	ed                   	in     (%dx),%eax
 294:	08 34 e7             	or     %dh,(%rdi,%riz,8)
 297:	6c                   	insb   (%dx),%es:(%rdi)
 298:	e0 69                	loopne 303 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x303>
 29a:	47                   	rex.RXB
 29b:	48 de 3b             	rex.W fidivrs (%rbx)
 29e:	18 e3                	sbb    %ah,%bl
 2a0:	66 3f                	data16 (bad)
 2a2:	a9 2b 7e 99 b7       	test   $0xb7997e2b,%eax
 2a7:	39 8a 4c 29 ab d3    	cmp    %ecx,-0x2c54d6b4(%rdx)
 2ad:	84 6d 77             	test   %ch,0x77(%rbp)
 2b0:	71 34                	jno    2e6 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x2e6>
 2b2:	7a 10                	jp     2c4 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x2c4>
 2b4:	6a 8a                	push   $0xffffffffffffff8a
 2b6:	fb                   	sti
 2b7:	cf                   	iret
 2b8:	62                   	(bad)
 2b9:	88 7b 2c             	mov    %bh,0x2c(%rbx)
 2bc:	15 1f cb 0b 50       	adc    $0x500bcb1f,%eax
 2c1:	81 c1 51 a3 ab 59    	add    $0x59aba351,%ecx
 2c7:	85 95 8d 71 8a 73    	test   %edx,0x738a718d(%rbp)
 2cd:	17                   	(bad)
 2ce:	df 70 df             	fbstp  -0x21(%rax)
 2d1:	ab                   	stos   %eax,%es:(%rdi)
 2d2:	35 25 ce ed 9c       	xor    $0x9cedce25,%eax
 2d7:	ba 80 e8 c5 cd       	mov    $0xcdc5e880,%edx
 2dc:	be 00 cc a3 1b       	mov    $0x1ba3cc00,%esi
 2e1:	77 1b                	ja     2fe <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x2fe>
 2e3:	00 7b 1b             	add    %bh,0x1b(%rbx)
 2e6:	88 bd 1d 5c 6f ff    	mov    %bh,-0x90a3e3(%rbp)
 2ec:	ac                   	lods   %ds:(%rsi),%al
 2ed:	b7 81                	mov    $0x81,%bh
 2ef:	eb 6d                	jmp    35e <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x35e>
 2f1:	9f                   	lahf
 2f2:	f5                   	cmc
 2f3:	f6 8f bd ed 63 6f f7 	testb  $0xf7,0x6f63edbd(%rdi)
 2fa:	d6                   	(bad)
 2fb:	db bc f5 76 cf 7a 9b 	fstpt  -0x6485308a(%rbp,%rsi,8)
 302:	67 bd bd 63 6f eb    	addr32 mov $0xeb6f63bd,%ebp
 308:	d8 db                	fcomp  %st(3)
 30a:	ed                   	in     (%dx),%eax
 30b:	7a 3b                	jp     348 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x348>
 30d:	b7 de                	mov    $0xde,%bh
 30f:	c6                   	(bad)
 310:	ad                   	lods   %ds:(%rsi),%eax
 311:	b7 d9                	mov    $0xd9,%bh
 313:	f5                   	cmc
 314:	f6 fa                	idiv   %dl
 316:	e7 5b                	out    %eax,$0x5b
 318:	bd d9 3b fd d9       	mov    $0xd9fd3bd9,%ebp
 31d:	fb                   	sti
 31e:	76 b1                	jbe    2d1 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x2d1>
 320:	1f                   	(bad)
 321:	df f9                	(bad)
 323:	df 00                	filds  (%rax)
 325:	c2 a6 19             	ret    $0x19a6
 328:	26 e7 ca             	es out %eax,$0xca
 32b:	ca 39 45             	lret   $0x4539
 32e:	46                   	rex.RX
 32f:	47                   	rex.RXB
 330:	42                   	rex.X
 331:	26 a4                	movsb  %ds:(%rsi),%es:(%rdi)
 333:	12 50 4a             	adc    0x4a(%rax),%dl
 336:	24 d8                	and    $0xd8,%al
 338:	5e                   	pop    %rsi
 339:	12 82 28 7e 68 1a    	adc    0x1a687e28(%rdx),%al
 33f:	41 1c 1a             	rex.B sbb $0x1a,%al
 342:	22 1e                	and    (%rsi),%bl
 344:	9b                   	fwait
 345:	40 20 30             	and    %sil,(%rax)
 348:	71 6c                	jno    3b6 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x3b6>
 34a:	2a 32                	sub    (%rdx),%dh
 34c:	21 20                	and    %esp,(%rax)
 34e:	3a 21                	cmp    (%rcx),%ah
 350:	48 b0 60             	rex.W mov $0x60,%al
 353:	b8 a0 81 89 07       	mov    $0x78981a0,%eax
 358:	c6                   	(bad)
 359:	e2 12                	loop   36d <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x36d>
 35b:	d4                   	(bad)
 35c:	ad                   	lods   %ds:(%rsi),%eax
 35d:	97                   	xchg   %eax,%edi
 35e:	84 4a 46             	test   %cl,0x46(%rdx)
 361:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 362:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 363:	a1 11 aa 98 34 94 34 	movabs 0x621c34943498aa11,%eax
 36a:	1c 62 
 36c:	0f 4a c6             	cmovp  %esi,%eax
 36f:	63 d3                	movsxd %ebx,%edx
 371:	51                   	push   %rcx
 372:	15 51 e4 a0 41       	adc    $0x41a0e451,%eax
 377:	92                   	xchg   %eax,%edx
 378:	d2 11                	rclb   %cl,(%rcx)
 37a:	91                   	xchg   %eax,%ecx
 37b:	28 74 72 22          	sub    %dh,0x22(%rdx,%rsi,2)
 37f:	0a 43 10             	or     0x10(%rbx),%al
 382:	47 30 0d 9b 8a 4e c6 	rex.RXB xor %r9b,-0x39b17565(%rip)        # ffffffffc64e8e24 <spin_lock.cpp.cc2eb890+0xffffffffc64e8e24>
 389:	20 d2                	and    %dl,%dl
 38b:	70 88                	jo     315 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x315>
 38d:	9b                   	fwait
 38e:	58                   	pop    %rax
 38f:	14 31                	adc    $0x31,%al
 391:	02 0a                	add    (%rdx),%cl
 393:	89 c8                	mov    %ecx,%eax
 395:	48 78 24             	rex.W js 3bc <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x3bc>
 398:	4c 60                	rex.WR (bad)
 39a:	44 34 34             	rex.R xor $0x34,%al
 39d:	44 24 52             	rex.R and $0x52,%al
 3a0:	f2 70 64             	bnd jo 407 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x407>
 3a3:	22 36                	and    (%rsi),%dh
 3a5:	15 89 48 18 8f       	adc    $0x8f184889,%eax
 3aa:	44 02 ba db a9 fc d8 	add    -0x27035625(%rdx),%r15b
 3b1:	6f                   	outsl  %ds:(%rsi),(%dx)
 3b2:	25 04 0e 13 aa       	and    $0xaa130e04,%eax
 3b7:	c4                   	(bad)
 3b8:	54                   	push   %rsp
 3b9:	40 a0 9b 62 00 16 2e 	rex movabs 0x7563dc2e1600629b,%al
 3c0:	dc 63 75 
 3c3:	f0 c5 9f 97          	(bad)
 3c7:	4a 04 d1             	rex.WX add $0xd1,%al
 3ca:	b1 fe                	mov    $0xfe,%cl
 3cc:	6c                   	insb   (%dx),%es:(%rdi)
 3cd:	0c 77                	or     $0x77,%al
 3cf:	2a 43 83             	sub    -0x7d(%rbx),%al
 3d2:	66 ce                	data16 (bad)
 3d4:	99                   	cltd
 3d5:	41 6b b8 ca 0d cd e0 	imul   $0x69,-0x1f32f236(%r8),%edi
 3dc:	69 
 3dd:	df 64 09 0e          	fbld   0xe(%rcx,%rcx,1)
 3e1:	fd                   	std
 3e2:	20 4f fb             	and    %cl,-0x5(%rdi)
 3e5:	29 d4                	sub    %edx,%esp
 3e7:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 3e8:	00 f0                	add    %dh,%al
 3ea:	bf b8 6c 5c 6d       	mov    $0x6d5c6cb8,%edi
 3ef:	f9                   	stc
 3f0:	fc                   	cld
 3f1:	7c 40                	jl     433 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x433>
 3f3:	41 a0 1f 1c bc fd f4 	rex.B movabs 0x183e80f4fdbc1c1f,%al
 3fa:	80 3e 18 
 3fd:	18 c6                	sbb    %al,%dh
 3ff:	fb                   	sti
 400:	61                   	(bad)
 401:	9f                   	lahf
 402:	9e                   	sahf
 403:	1f                   	(bad)
 404:	7e 1a                	jle    420 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x420>
 406:	cf                   	iret
 407:	4e e7 bb             	rex.WRX out %eax,$0xbb
 40a:	9c                   	pushf
 40b:	f7 7c 3c dc          	idivl  -0x24(%rsp,%rdi,1)
 40f:	bb bc b6 87 07       	mov    $0x787b6bc,%ebx
 414:	f7 80 e5 76 98 07 87 	testl  $0xfc3b9b87,0x79876e5(%rax)
 41b:	9b 3b fc 
 41e:	30 ff                	xor    %bh,%bh
 420:	54                   	push   %rsp
 421:	1d 36 25 ce 2c       	sbb    $0x2cce2536,%eax
 426:	6e                   	outsb  %ds:(%rsi),(%dx)
 427:	ae                   	scas   %es:(%rdi),%al
 428:	98                   	cwtl
 429:	87 8a 79 c8 b9 0e    	xchg   %ecx,0xeb9c879(%rdx)
 42f:	07                   	(bad)
 430:	80 b4 a8 61 48 22 91 	xorb   $0x42,-0x6eddb79f(%rax,%rbp,4)
 437:	42 
 438:	84 68 44             	test   %ch,0x44(%rax)
 43b:	64 24 49             	fs and $0x49,%al
 43e:	0a 8d 01 d0 02 91    	or     -0x6efd2fff(%rbp),%cl
 444:	99                   	cltd
 445:	eb 1c                	jmp    463 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x463>
 447:	12 60 74             	adc    0x74(%rax),%ah
 44a:	41 c8 59 67 05       	rex.B enter $0x6759,$0x5
 44f:	44 92                	rex.R xchg %eax,%edx
 451:	46 61                	rex.RX (bad)
 453:	41 ed                	rex.B in (%dx),%eax
 455:	cf                   	iret
 456:	1a c0                	sbb    %al,%al
 458:	84 5c 7e 44          	test   %bl,0x44(%rsi,%rdi,2)
 45c:	bf 49 71 32 4d       	mov    $0x4d327149,%edi
 461:	6a 27                	push   $0x27
 463:	e2 81                	loop   3e6 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x3e6>
 465:	6f                   	outsl  %ds:(%rsi),(%dx)
 466:	56                   	push   %rsi
 467:	b2 75                	mov    $0x75,%dl
 469:	d9 7a 45             	fnstcw 0x45(%rdx)
 46c:	09 9c cf 34 00 bc 91 	or     %ebx,-0x6e43ffcc(%rdi,%rcx,8)
 473:	24 46                	and    $0x46,%al
 475:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 476:	4f 28 83 1f ef a7 33 	rex.WRXB sub %r8b,0x33a7ef1f(%r11)
 47d:	3b 0d 46 e9 7b 2a    	cmp    0x2a7be946(%rip),%ecx        # 2a7bedc9 <spin_lock.cpp.cc2eb890+0x2a7bedc9>
 483:	3a fc                	cmp    %ah,%bh
 485:	1a f5                	sbb    %ch,%dh
 487:	12 aa e7 14 07 d0    	adc    -0x2ff8eb19(%rdx),%ch
 48d:	a8 4e                	test   $0x4e,%al
 48f:	ec                   	in     (%dx),%al
 490:	fb                   	sti
 491:	c7                   	(bad)
 492:	25 94 5e 8b fd       	and    $0xfd8b5e94,%eax
 497:	2e ed                	cs in  (%dx),%eax
 499:	0a 12                	or     (%rdx),%dl
 49b:	f3 47 6e             	rep rex.RXB outsb %ds:(%rsi),(%dx)
 49e:	11 14 4c             	adc    %edx,(%rsp,%rcx,2)
 4a1:	10 86 de 4f 83 9c    	adc    %al,-0x637cb022(%rsi)
 4a7:	09 7a 87             	or     %edi,-0x79(%rdx)
 4aa:	38 b0 db 99 a1 af    	cmp    %dh,-0x505e6625(%rax)
 4b0:	48 b2 8e             	rex.W mov $0x8e,%dl
 4b3:	87 1d e9 45 fe be    	xchg   %ebx,-0x4101ba17(%rip)        # ffffffffbefe4aa2 <spin_lock.cpp.cc2eb890+0xffffffffbefe4aa2>
 4b9:	13 78 d8             	adc    -0x28(%rax),%edi
 4bc:	29 ce                	sub    %ecx,%esi
 4be:	ed                   	in     (%dx),%eax
 4bf:	4d                   	rex.WRB
 4c0:	36 88 55 18          	ss mov %dl,0x18(%rbp)
 4c4:	63 ac 24 a0 10 5b 09 	movsxd 0x95b10a0(%rsp),%ebp
 4cb:	24 b1                	and    $0xb1,%al
 4cd:	b6 c0                	mov    $0xc0,%dh
 4cf:	92                   	xchg   %eax,%edx
 4d0:	fa                   	cli
 4d1:	3f                   	(bad)
 4d2:	f8                   	clc
 4d3:	df 0b                	fisttps (%rbx)
 4d5:	8a 19                	mov    (%rcx),%bl
 4d7:	68 c1 1e 5a da       	push   $0xffffffffda5a1ec1
 4dc:	be d8 40 de 63       	mov    $0x63de40d8,%esi
 4e1:	5f                   	pop    %rdi
 4e2:	22 c3                	and    %bl,%al
 4e4:	02 87 a0 a5 33 39    	add    0x3933a5a0(%rdi),%al
 4ea:	ce                   	(bad)
 4eb:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 4ec:	70 91                	jo     47f <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x47f>
 4ee:	c8 0e 03 7c          	enter  $0x30e,$0x7c
 4f2:	9a                   	(bad)
 4f3:	99                   	cltd
 4f4:	7b d7                	jnp    4cd <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x4cd>
 4f6:	a8 bf                	test   $0xbf,%al
 4f8:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 4f9:	38 07                	cmp    %al,(%rdi)
 4fb:	e0 68                	loopne 565 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x565>
 4fd:	c6                   	(bad)
 4fe:	0b c6                	or     %esi,%eax
 500:	16                   	(bad)
 501:	b0 3c                	mov    $0x3c,%al
 503:	b0 22                	mov    $0x22,%al
 505:	36 01 05 1c 3e 24 90 	ss add %eax,-0x6fdbc1e4(%rip)        # ffffffff90244328 <spin_lock.cpp.cc2eb890+0xffffffff90244328>
 50c:	96                   	xchg   %eax,%esi
 50d:	fb                   	sti
 50e:	63 6e 79             	movsxd 0x79(%rsi),%ebp
 511:	2d a5 31 fe ed       	sub    $0xedfe31a5,%eax
 516:	8c 3d 1d 47 f0 de    	mov    %?,-0x210fb8e3(%rip)        # ffffffffdef04c39 <spin_lock.cpp.cc2eb890+0xffffffffdef04c39>
 51c:	33 16                	xor    (%rsi),%edx
 51e:	19 32                	sbb    %esi,(%rdx)
 520:	2d 50 1c 2c 02       	sub    $0x22c1c50,%eax
 525:	4b 9c                	rex.WXB pushf
 527:	37                   	(bad)
 528:	c2 83 83             	ret    $0x8383
 52b:	b7 02                	mov    $0x2,%bh
 52d:	a8 ef                	test   $0xef,%al
 52f:	0c db                	or     $0xdb,%al
 531:	7c 3f                	jl     572 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x572>
 533:	03 33                	add    (%rbx),%esi
 535:	66 24 51             	data16 and $0x51,%al
 538:	c4                   	(bad)
 539:	54                   	push   %rsp
 53a:	9a                   	(bad)
 53b:	71 67                	jno    5a4 <spin_lock.cpp.cc2eb890+0x5a4>
 53d:	53                   	push   %rbx
 53e:	71 c7                	jno    507 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x507>
 540:	70 1c                	jo     55e <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x55e>
 542:	e4 82                	in     $0x82,%al
 544:	cc                   	int3
 545:	d3 20                	shll   %cl,(%rax)
 547:	36 74 87             	ss je  4d1 <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x4d1>
 54a:	d9 83 8e 11 b7 cc    	flds   -0x3348ee72(%rbx)
 550:	86 23                	xchg   %ah,(%rbx)
 552:	bc 6a 68 75 67       	mov    $0x6775686a,%esp
 557:	88 80 80 d5 06 30    	mov    %al,0x3006d580(%rax)
 55d:	6d                   	insl   (%dx),%es:(%rdi)
 55e:	93                   	xchg   %eax,%ebx
 55f:	8e 60 e5             	mov    -0x1b(%rax),%fs
 562:	cf                   	iret
 563:	e0 95                	loopne 4fa <.gnu.lto__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order.157.bad037c419750572+0x4fa>
 565:	d9 d4                	(bad)
 567:	94                   	xchg   %eax,%esp
 568:	f9                   	stc
 569:	65 80 57 5a 55       	adcb   $0x55,%gs:0x5a(%rdi)
 56e:	82                   	(bad)
 56f:	98                   	cwtl
 570:	99                   	cltd
 571:	91                   	xchg   %eax,%ecx
 572:	38 cd                	cmp    %cl,%ch
 574:	01 a2 9d 80 98 f9    	add    %esp,-0x6677f63(%rdx)
 57a:	6e                   	outsb  %ds:(%rsi),(%dx)
 57b:	22 e1                	and    %cl,%ah
 57d:	de 43 34             	fiadds 0x34(%rbx)
 580:	bd bb 73 36 a1       	mov    $0xa13673bb,%ebp
 585:	06                   	(bad)

Disassembly of section .gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572:

0000000000000000 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572>:
   0:	28 b5 2f fd 60 81    	sub    %dh,-0x7e9f02d1(%rbp)
   6:	00 b5 09 00 86 92    	add    %dh,-0x6d79fff7(%rbp)
   c:	44 3d 20 e5 38 1d    	rex.R cmp $0x1d38e520,%eax
  12:	20 d2                	and    %dl,%dl
  14:	47 24 84             	rex.RXB and $0x84,%al
  17:	15 98 71 82 17       	adc    $0x17827198,%eax
  1c:	68 a9 59 18 61       	push   $0x611859a9
  21:	02 61 7e             	add    0x7e(%rcx),%ah
  24:	d4                   	(bad)
  25:	3f                   	(bad)
  26:	29 7d cb             	sub    %edi,-0x35(%rbp)
  29:	26 be a9 87 f3 10    	es mov $0x10f387a9,%esi
  2f:	68 a1 1f d5 f8       	push   $0xfffffffff8d51fa1
  34:	3e 7b 31             	jnp,pt 68 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572+0x68>
  37:	c0 f8 3c             	sar    $0x3c,%al
  3a:	4b 88 4c c4 2f       	rex.WXB mov %cl,0x2f(%r12,%r8,8)
  3f:	53                   	push   %rbx
  40:	27                   	(bad)
  41:	53                   	push   %rbx
  42:	72 71                	jb     b5 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572+0xb5>
  44:	4c                   	rex.WR
  45:	f0 67 f7 df          	lock addr32 neg %edi
  49:	3b a5 30 00 31 00    	cmp    0x310030(%rbp),%esp
  4f:	32 00                	xor    (%rax),%al
  51:	d5 e4 0d b0 d7 cd 0b 	{rex2 0xe4} prefetch -0x4ff43229(%rax)
  58:	b0 
  59:	57                   	push   %rdi
  5a:	5b                   	pop    %rbx
  5b:	b4 0b                	mov    $0xb,%ah
  5d:	78 c6                	js     25 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572+0x25>
  5f:	85 15 00 af dd f5    	test   %edx,-0xa225100(%rip)        # fffffffff5ddaf65 <spin_lock.cpp.cc2eb890+0xfffffffff5ddaf65>
  65:	50                   	push   %rax
  66:	94                   	xchg   %eax,%esp
  67:	8b 9f a2 7f 98 13    	mov    0x13987fa2(%rdi),%ebx
  6d:	8c a8 d2 a7 46 2c    	mov    %gs,0x2c46a7d2(%rax)
  73:	cb                   	lret
  74:	d2 73 44             	shlb   %cl,0x44(%rbx)
  77:	99                   	cltd
  78:	dc d4                	(bad)
  7a:	b6 15                	mov    $0x15,%dh
  7c:	6c                   	insb   (%dx),%es:(%rdi)
  7d:	6f                   	outsl  %ds:(%rsi),(%dx)
  7e:	d8 26                	fsubs  (%rsi)
  80:	10 9d 72 52 96 df    	adc    %bl,-0x2069ad8e(%rbp)
  86:	a1 2b fb e4 3f e7 f4 	movabs 0x5bebf4e73fe4fb2b,%eax
  8d:	eb 5b 
  8f:	9e                   	sahf
  90:	1a 77 4f             	sbb    0x4f(%rdi),%dh
  93:	ca d7 ba             	lret   $0xbad7
  96:	aa                   	stos   %al,%es:(%rdi)
  97:	00 15 db 1f b0 39    	add    %dl,0x39b01fdb(%rip)        # 39b02078 <spin_lock.cpp.cc2eb890+0x39b02078>
  9d:	2c 16                	sub    $0x16,%al
  9f:	9f                   	lahf
  a0:	f6 5d fe             	negb   -0x2(%rbp)
  a3:	22 9e 1c 79 42 69    	and    0x6942791c(%rsi),%bl
  a9:	67 52                	addr32 push %rdx
  ab:	01 76 5b             	add    %esi,0x5b(%rsi)
  ae:	99                   	cltd
  af:	27                   	(bad)
  b0:	36 0f 2b 63 b8       	ss movntps %xmm4,-0x48(%rbx)
  b5:	4c 94                	rex.WR xchg %rax,%rsp
  b7:	c4                   	(bad)
  b8:	9c                   	pushf
  b9:	49 ef                	rex.WB out %eax,(%dx)
  bb:	61                   	(bad)
  bc:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  bd:	f6 d7                	not    %bh
  bf:	31 7f b2             	xor    %edi,-0x4e(%rdi)
  c2:	86 55 42             	xchg   %dl,0x42(%rbp)
  c5:	4d f6 65 44          	rex.WRB mulb 0x44(%r13)
  c9:	4e                   	rex.WRX
  ca:	36 f8                	ss clc
  cc:	56                   	push   %rsi
  cd:	68 87 98 90 8f       	push   $0xffffffff8f909887
  d2:	cd ee                	int    $0xee
  d4:	3e e5 d5             	ds in  $0xd5,%eax
  d7:	07                   	(bad)
  d8:	c1 5e 4f af          	rcrl   $0xaf,0x4f(%rsi)
  dc:	1a 30                	sbb    (%rax),%dh
  de:	aa                   	stos   %al,%es:(%rdi)
  df:	4c 74 4d             	rex.WR je 12f <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572+0x12f>
  e2:	96                   	xchg   %eax,%esi
  e3:	1e                   	(bad)
  e4:	f6 40 3c 7c          	testb  $0x7c,0x3c(%rax)
  e8:	b8 86 6d cb 0e       	mov    $0xecb6d86,%eax
  ed:	c0 0e 44             	rorb   $0x44,(%rsi)
  f0:	d2 78 34             	sarb   %cl,0x34(%rax)
  f3:	da 32                	fidivl (%rdx)
  f5:	8e ed                	mov    %ebp,%gs
  f7:	0b 65 88             	or     -0x78(%rbp),%esp
  fa:	ba 11 a8 7d ba       	mov    $0xba7da811,%edx
  ff:	90                   	nop
 100:	c6                   	(bad)
 101:	6d                   	insl   (%dx),%es:(%rdi)
 102:	1e                   	(bad)
 103:	e1 07                	loope  10c <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572+0x10c>
 105:	22 98 13 75 5e 47    	and    0x475e7513(%rax),%bl
 10b:	c1 10 21             	rcll   $0x21,(%rax)
 10e:	51                   	push   %rcx
 10f:	e1 85                	loope  96 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572+0x96>
 111:	24 91                	and    $0x91,%al
 113:	46 78 a1             	rex.RX js b7 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572+0xb7>
 116:	71 de                	jno    f6 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7releaseEv.227.bad037c419750572+0xf6>
 118:	07                   	(bad)
 119:	d2 32                	shlb   %cl,(%rdx)
 11b:	db e4                	fnsetpm(287 only)
 11d:	9e                   	sahf
 11e:	06                   	(bad)
 11f:	0c 00                	or     $0x0,%al
 121:	b8 79 14 2e 25       	mov    $0x252e1479,%eax
 126:	ca b0 2e             	lret   $0x2eb0
 129:	38 23                	cmp    %ah,(%rbx)
 12b:	38 5b 02             	cmp    %bl,0x2(%rbx)
 12e:	e6 22                	out    %al,$0x22
 130:	c0 2d 2e 21 0a 13 5e 	shrb   $0x5e,0x130a212e(%rip)        # 130a2265 <spin_lock.cpp.cc2eb890+0x130a2265>
 137:	6c                   	insb   (%dx),%es:(%rdi)
 138:	35 70 56 d1 16       	xor    $0x16d15670,%eax
 13d:	d7                   	xlat   %ds:(%rbx)
 13e:	7c 02                	jl     142 <spin_lock.cpp.cc2eb890+0x142>

Disassembly of section .gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572:

0000000000000000 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572>:
   0:	28 b5 2f fd 60 49    	sub    %dh,0x4960fd2f(%rbp)
   6:	01 8d 0d 00 36 99    	add    %ecx,-0x66c9fff3(%rbp)
   c:	5c                   	pop    %rsp
   d:	44 10 91 93 0e 10 9b 	adc    %r10b,-0x64eff16d(%rcx)
  14:	de 8c 24 87 54 1a 69 	fimuls 0x691a5487(%rsp)
  1b:	4f d2 04 60          	rex.WRXB rolb %cl,(%r8,%r12,2)
  1f:	20 a0 9f b3 7e aa    	and    %ah,-0x55814c61(%rax)
  25:	e6 f8                	out    %al,$0xf8
  27:	cd cd                	int    $0xcd
  29:	d4                   	(bad)
  2a:	5e                   	pop    %rsi
  2b:	fa                   	cli
  2c:	0f 4b 90 3f 03 91 94 	cmovnp -0x6b6efcc1(%rax),%edx
  33:	1f                   	(bad)
  34:	66 66 d0 21          	data16 data16 shlb $1,(%rcx)
  38:	92                   	xchg   %eax,%edx
  39:	23 5d 55             	and    0x55(%rbp),%ebx
  3c:	e6 f3                	out    %al,$0xf3
  3e:	71 04                	jno    44 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x44>
  40:	42 95                	rex.X xchg %eax,%ebp
  42:	1f                   	(bad)
  43:	50                   	push   %rax
  44:	24 20                	and    $0x20,%al
  46:	1d 16 b1 c2 58       	sbb    $0x58c2b116,%eax
  4b:	11 c9                	adc    %ecx,%ecx
  4d:	7b 6f                	jnp    be <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0xbe>
  4f:	b9 53 0a 45 00       	mov    $0x450a53,%ecx
  54:	48 00 47 00          	rex.W add %al,0x0(%rdi)
  58:	de 09                	fimuls (%rcx)
  5a:	cc                   	int3
  5b:	cb                   	lret
  5c:	ea                   	(bad)
  5d:	03 e6                	add    %esi,%esp
  5f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
  60:	39 5b e6             	cmp    %ebx,-0x1a(%rbx)
  63:	5e                   	pop    %rsi
  64:	6a 23                	push   $0x23
  66:	89 13                	mov    %edx,(%rbx)
  68:	30 66 76             	xor    %ah,0x76(%rsi)
  6b:	f7 43 41 38 42 ee 32 	testl  $0x32ee4238,0x41(%rbx)
  72:	2a e4                	sub    %ah,%ah
  74:	fc                   	cld
  75:	04 2f                	add    $0x2f,%al
  77:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
  78:	53                   	push   %rbx
  79:	77 29                	ja     a4 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0xa4>
  7b:	e0 84                	loopne 1 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x1>
  7d:	02 4d a7             	add    -0x59(%rbp),%cl
  80:	0d 30 96 50 b9       	or     $0xb9509630,%eax
  85:	5e                   	pop    %rsi
  86:	c5 65 cb             	(bad)
  89:	4a e9 a4 72 18 b9    	rex.WX jmp ffffffffb9187333 <spin_lock.cpp.cc2eb890+0xffffffffb9187333>
  8f:	ef                   	out    %eax,(%dx)
  90:	fb                   	sti
  91:	0c 4b                	or     $0x4b,%al
  93:	27                   	(bad)
  94:	0e                   	(bad)
  95:	f7 b4 6d 8e ed 12 fb 	divl   -0x4ed1272(%rbp,%rbp,2)
  9c:	9c                   	pushf
  9d:	be 87 a2 6c 08       	mov    $0x86ca287,%esi
  a2:	3d ef fd 51 a1       	cmp    $0xa151fdef,%eax
  a7:	5f                   	pop    %rdi
  a8:	3d c5 c3 8c 99       	cmp    $0x998cc3c5,%eax
  ad:	b2 fb                	mov    $0xfb,%dl
  af:	e1 9b                	loope  4c <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x4c>
  b1:	59                   	pop    %rcx
  b2:	18 29                	sbb    %ch,(%rcx)
  b4:	63 84 41 1a 70 77 31 	movsxd 0x3177701a(%rcx,%rax,2),%eax
  bb:	89 cb                	mov    %ecx,%ebx
  bd:	02 bd 1b 21 4c c8    	add    -0x37b3dee5(%rbp),%bh
  c3:	6c                   	insb   (%dx),%es:(%rdi)
  c4:	e7 29                	out    %eax,$0x29
  c6:	70 a7                	jo     6f <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x6f>
  c8:	ba bc fd 0e 9b       	mov    $0x9b0efdbc,%edx
  cd:	a3 c5 c2 a1 7d 14 4f 	movabs %eax,0xddc14f147da1c2c5
  d4:	c1 dd 
  d6:	d3 70 04             	shll   %cl,0x4(%rax)
  d9:	dd be e8 10 63 77    	fnstsw 0x776310e8(%rsi)
  df:	85 e5                	test   %esp,%ebp
  e1:	09 d5                	or     %edx,%ebp
  e3:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
  e4:	03 26                	add    (%rsi),%esp
  e6:	73 6a                	jae    152 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x152>
  e8:	00 97 1a 27 f0 86    	add    %dl,-0x790fd8e6(%rdi)
  ee:	3b 20                	cmp    (%rax),%esp
  f0:	7c c8                	jl     ba <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0xba>
  f2:	bc da 9f 10 bc       	mov    $0xbc109fda,%esp
  f7:	69 6a 4c a1 28 c9 fe 	imul   $0xfec928a1,0x4c(%rdx),%ebp
  fe:	4b 89 c9             	rex.WXB mov %rcx,%r9
 101:	16                   	(bad)
 102:	79 0b                	jns    10f <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x10f>
 104:	cd 0e                	int    $0xe
 106:	58                   	pop    %rax
 107:	90                   	nop
 108:	6c                   	insb   (%dx),%es:(%rdi)
 109:	d5 ee 5e c4          	{rex2 0xee} divps %xmm4,%xmm8
 10d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 10e:	9f                   	lahf
 10f:	61                   	(bad)
 110:	5e                   	pop    %rsi
 111:	5e                   	pop    %rsi
 112:	0f c4 ac 94 58 48 ba 	pinsrw $0x53,0x51ba4858(%rsp,%rdx,4),%mm5
 119:	51 53 
 11b:	b6 45                	mov    $0x45,%dh
 11d:	ee                   	out    %al,(%dx)
 11e:	82                   	(bad)
 11f:	46 cc                	rex.RX int3
 121:	6a f7                	push   $0xfffffffffffffff7
 123:	a9 a6 ec 75 f7       	test   $0xf775eca6,%eax
 128:	f8                   	clc
 129:	a0 a2 02 06 c0 81 69 	movabs 0x46db6981c00602a2,%al
 130:	db 46 
 132:	54                   	push   %rsp
 133:	31 b0 3c 1b 92 11    	xor    %esi,0x11921b3c(%rax)
 139:	36 52                	ss push %rdx
 13b:	f9                   	stc
 13c:	03 c2                	add    %edx,%eax
 13e:	03 0e                	add    (%rsi),%ecx
 140:	06                   	(bad)
 141:	72 5d                	jb     1a0 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x1a0>
 143:	56                   	push   %rsi
 144:	01 2d eb 8c a2 45    	add    %ebp,0x45a28ceb(%rip)        # 45a28e35 <spin_lock.cpp.cc2eb890+0x45a28e35>
 14a:	a2 cb 0a b9 42 1e 0c 	movabs %al,0x4ca00c1e42b90acb
 151:	a0 4c 
 153:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 154:	69 38 99 47 83 5d    	imul   $0x5d834799,(%rax),%edi
 15a:	23 5b 48             	and    0x48(%rbx),%ebx
 15d:	33 60 0c             	xor    0xc(%rax),%esp
 160:	94                   	xchg   %eax,%esp
 161:	7d 32                	jge    195 <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x195>
 163:	0a 0b                	or     (%rbx),%cl
 165:	22 48 a8             	and    -0x58(%rax),%cl
 168:	f0 d9 46 a0          	lock flds -0x60(%rsi)
 16c:	cd 76                	int    $0x76
 16e:	41 83 7d 42 1d       	cmpl   $0x1d,0x42(%r13)
 173:	8d 65 db             	lea    -0x25(%rbp),%esp
 176:	db 2b                	fldt   (%rbx)
 178:	aa                   	stos   %al,%es:(%rdi)
 179:	b2 01                	mov    $0x1,%dl
 17b:	43 d2 13             	rex.XB rclb %cl,(%r11)
 17e:	19 19                	sbb    %ebx,(%rcx)
 180:	00 b8 79 14 2e 4a    	add    %bh,0x4a2e1479(%rax)
 186:	80 75 3e 5b          	xorb   $0x5b,0x3e(%rbp)
 18a:	08 27                	or     %ah,(%rdi)
 18c:	6d                   	insl   (%dx),%es:(%rdi)
 18d:	04 f0                	add    $0xf0,%al
 18f:	1b ee                	sbb    %esi,%ebp
 191:	e1 ec                	loope  17f <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x17f>
 193:	33 cc                	xor    %esp,%ecx
 195:	75 08                	jne    19f <.gnu.lto__ZN10QuantumNEC3Lib8SpinLock7acquireEv.228.bad037c419750572+0x19f>
 197:	bd cd 85 b0 99       	mov    $0x99b085cd,%ebp
 19c:	17                   	(bad)
 19d:	80 7c 40 1a 34       	cmpb   $0x34,0x1a(%rax,%rax,2)
 1a2:	90                   	nop
 1a3:	d4                   	(bad)
 1a4:	ec                   	in     (%dx),%al
 1a5:	0b b7 dc b7 c2 02    	or     0x2c2b7dc(%rdi),%esi
 1ab:	b4 8b                	mov    $0x8b,%ah
 1ad:	83 14 c8 2e          	adcl   $0x2e,(%rax,%rcx,8)
 1b1:	ea                   	(bad)
 1b2:	8e 9e a4 fc 24 d2    	mov    -0x2ddb035c(%rsi),%ds
 1b8:	b9                   	.byte 0xb9
 1b9:	e6 13                	out    %al,$0x13

Disassembly of section .gnu.lto_.symbol_nodes.bad037c419750572:

0000000000000000 <.gnu.lto_.symbol_nodes.bad037c419750572>:
   0:	28 b5 2f fd 60 2e    	sub    %dh,0x2e60fd2f(%rbp)
   6:	01 cd                	add    %ecx,%ebp
   8:	07                   	(bad)
   9:	00 c2                	add    %al,%dl
   b:	cb                   	lret
   c:	2b 2e                	sub    (%rsi),%ebp
   e:	90                   	nop
   f:	2b 1d ff c9 01 5f    	sub    0x5f01c9ff(%rip),%ebx        # 5f01ca14 <spin_lock.cpp.cc2eb890+0x5f01ca14>
  15:	bb ec 52 ff bb       	mov    $0xbbff52ec,%ebx
  1a:	d6                   	(bad)
  1b:	05 5e f4 bf 71       	add    $0x71bff45e,%eax
  20:	cb                   	lret
  21:	45 12 b4 9b 18 34 2d 	adc    -0x6ed2cbe8(%r11,%rbx,4),%r14b
  28:	91 
  29:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
  2a:	9c                   	pushf
  2b:	28 d4                	sub    %dl,%ah
  2d:	24 7a                	and    $0x7a,%al
  2f:	ea                   	(bad)
  30:	fe                   	(bad)
  31:	e4 45                	in     $0x45,%al
  33:	14 03                	adc    $0x3,%al
  35:	d5 08 21 7b a7       	{rex2 0x8} and %rdi,-0x59(%rbx)
  3a:	94                   	xchg   %eax,%esp
  3b:	52                   	push   %rdx
  3c:	d9 18                	fstps  (%rax)
  3e:	46 58                	rex.RX pop %rax
  40:	e6 01                	out    %al,$0x1
  42:	2a b2 2c 40 11 40    	sub    0x4011402c(%rdx),%dh
  48:	3d 2e cb 6d 59       	cmp    $0x596dcb2e,%eax
  4d:	29 65 80             	sub    %esp,-0x80(%rbp)
  50:	df 8c c8 af 86 56 aa 	fisttps -0x55a97951(%rax,%rcx,8)
  57:	4a                   	rex.WX
  58:	26 e4 77             	es in  $0x77,%al
  5b:	43 1f                	rex.XB (bad)
  5d:	7a d1                	jp     30 <.gnu.lto_.symbol_nodes.bad037c419750572+0x30>
  5f:	70 a6                	jo     7 <.gnu.lto_.symbol_nodes.bad037c419750572+0x7>
  61:	42 54                	rex.X push %rsp
  63:	34 8a                	xor    $0x8a,%al
  65:	d1 30                	shll   $1,(%rax)
  67:	af                   	scas   %es:(%rdi),%eax
  68:	1c 11                	sbb    $0x11,%al
  6a:	96                   	xchg   %eax,%esi
  6b:	4c 7e bd             	rex.WR jle 2b <.gnu.lto_.symbol_nodes.bad037c419750572+0x2b>
  6e:	44 e6 a4             	rex.R out %al,$0xa4
  71:	76 f0                	jbe    63 <.gnu.lto_.symbol_nodes.bad037c419750572+0x63>
  73:	ec                   	in     (%dx),%al
  74:	eb 84                	jmp    fffffffffffffffa <spin_lock.cpp.cc2eb890+0xfffffffffffffffa>
  76:	e3 f8                	jrcxz  70 <.gnu.lto_.symbol_nodes.bad037c419750572+0x70>
  78:	4a                   	rex.WX
  79:	f0 d7                	lock xlat %ds:(%rbx)
  7b:	9e                   	sahf
  7c:	c4                   	(bad)
  7d:	d0 e0                	shl    $1,%al
  7f:	da 1d a5 a3 09 6b    	ficompl 0x6b09a3a5(%rip)        # 6b09a42a <spin_lock.cpp.cc2eb890+0x6b09a42a>
  85:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  86:	38 ef                	cmp    %ch,%bh
  88:	05 26 49 ba 3d       	add    $0x3dba4926,%eax
  8d:	38 39                	cmp    %bh,(%rcx)
  8f:	83 20 7d             	andl   $0x7d,(%rax)
  92:	95                   	xchg   %eax,%ebp
  93:	78 a8                	js     3d <.gnu.lto_.symbol_nodes.bad037c419750572+0x3d>
  95:	2c f9                	sub    $0xf9,%al
  97:	19 dd                	sbb    %ebx,%ebp
  99:	93                   	xchg   %eax,%ebx
  9a:	bc 68 82 dd 0d       	mov    $0xddd8268,%esp
  9f:	3d be a2 8b e2       	cmp    $0xe28ba2be,%eax
  a4:	d4                   	(bad)
  a5:	0e                   	(bad)
  a6:	71 82                	jno    2a <.gnu.lto_.symbol_nodes.bad037c419750572+0x2a>
  a8:	0e                   	(bad)
  a9:	3e 8e af 09 f3 a5 d0 	ds mov -0x2f5a0cf7(%rdi),%gs
  b0:	9f                   	lahf
  b1:	69 51 29 41 47 7e c1 	imul   $0xc17e4741,0x29(%rcx),%edx
  b8:	66 e6 1a             	data16 out %al,$0x1a
  bb:	04 1d                	add    $0x1d,%al
  bd:	00 cd                	add    %cl,%ch
  bf:	cb                   	lret
  c0:	0c b0                	or     $0xb0,%al
  c2:	35 d8 34 38 b0       	xor    $0xb03834d8,%eax
  c7:	cc                   	int3
  c8:	83 b5 9a 41 bc 86 54 	xorl   $0x54,-0x7943be66(%rbp)
  cf:	c1 c0 a0             	rol    $0xa0,%eax
  d2:	d2 4f 18             	rorb   %cl,0x18(%rdi)
  d5:	80 68 98 65          	subb   $0x65,-0x68(%rax)
  d9:	f5                   	cmc
  da:	d8 92 5a 0b 56 a0    	fcoms  -0x5fa9f4a6(%rdx)
  e0:	0a 00                	or     (%rax),%al
  e2:	9d                   	popf
  e3:	8c cd                	mov    %cs,%ebp
  e5:	40 a0 23 09 c3 a9 01 	rex movabs 0x11218701a9c30923,%al
  ec:	87 21 11 
  ef:	1a 06                	sbb    (%rsi),%al
  f1:	0c 0c                	or     $0xc,%al
  f3:	02 48 6a             	add    0x6a(%rax),%cl
  f6:	94                   	xchg   %eax,%esp
  f7:	14 b8                	adc    $0xb8,%al
  f9:	85 24 a2             	test   %esp,(%rdx,%riz,4)
  fc:	d0 d6                	rcl    $1,%dh
  fe:	d5 e4 24             	{rex2 0xe4} (bad)
 101:	03                   	.byte 0x3
 102:	5d                   	pop    %rbp

Disassembly of section .gnu.lto_.refs.bad037c419750572:

0000000000000000 <.gnu.lto_.refs.bad037c419750572>:
   0:	28 b5 2f fd 20 05    	sub    %dh,0x520fd2f(%rbp)
   6:	29 00                	sub    %eax,(%rax)
   8:	00 01                	add    %al,(%rcx)
   a:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.lto_.decls.bad037c419750572:

0000000000000000 <.gnu.lto_.decls.bad037c419750572>:
   0:	28 b5 2f fd 60 15    	sub    %dh,0x1560fd2f(%rbp)
   6:	16                   	(bad)
   7:	55                   	push   %rbp
   8:	69 00 aa b2 70 27    	imul   $0x2770b2aa,(%rax),%eax
   e:	52                   	push   %rdx
   f:	40 d0 ba 49 07 06 ca 	rex sarb $1,-0x35f9f8b7(%rdx)
  16:	c0 cb 38             	ror    $0x38,%bl
  19:	4d e0 84             	rex.WRB loopne ffffffffffffffa0 <spin_lock.cpp.cc2eb890+0xffffffffffffffa0>
  1c:	0a dc                	or     %ah,%bl
  1e:	70 11                	jo     31 <.gnu.lto_.decls.bad037c419750572+0x31>
  20:	38 7c 41 63          	cmp    %bh,0x63(%rcx,%rax,2)
  24:	49 c9                	rex.WB leave
  26:	e2 fd                	loop   25 <.gnu.lto_.decls.bad037c419750572+0x25>
  28:	e0 7a                	loopne a4 <.gnu.lto_.decls.bad037c419750572+0xa4>
  2a:	4a 12 78 65          	rex.WX adc 0x65(%rax),%dil
  2e:	54                   	push   %rsp
  2f:	d7                   	xlat   %ds:(%rbx)
  30:	1c 8d                	sbb    $0x8d,%al
  32:	7d fc                	jge    30 <.gnu.lto_.decls.bad037c419750572+0x30>
  34:	91                   	xchg   %eax,%ecx
  35:	c2 80 dd             	ret    $0xdd80
  38:	55                   	push   %rbp
  39:	99                   	cltd
  3a:	9f                   	lahf
  3b:	6b 53 db 36          	imul   $0x36,-0x25(%rbx),%edx
  3f:	4c                   	rex.WR
  40:	36 2a 1f             	ss sub (%rdi),%bl
  43:	86 da                	xchg   %bl,%dl
  45:	bb f2 83 b2 5f       	mov    $0x5fb283f2,%ebx
  4a:	38 e8                	cmp    %ch,%al
  4c:	6e                   	outsb  %ds:(%rsi),(%dx)
  4d:	1d a3 ef a2 24       	sbb    $0x24a2efa3,%eax
  52:	ea                   	(bad)
  53:	72 70                	jb     c5 <.gnu.lto_.decls.bad037c419750572+0xc5>
  55:	9f                   	lahf
  56:	c9                   	leave
  57:	6a c9                	push   $0xffffffffffffffc9
  59:	dc dc                	(bad)
  5b:	7a b3                	jp     10 <.gnu.lto_.decls.bad037c419750572+0x10>
  5d:	46 9a                	rex.RX (bad)
  5f:	94                   	xchg   %eax,%esp
  60:	29 12                	sub    %edx,(%rdx)
  62:	02 5e 02             	add    0x2(%rsi),%bl
  65:	6e                   	outsb  %ds:(%rsi),(%dx)
  66:	02 58 6e             	add    0x6e(%rax),%bl
  69:	60                   	(bad)
  6a:	56                   	push   %rsi
  6b:	87 05 5b 31 3b e6    	xchg   %eax,-0x19c4cea5(%rip)        # ffffffffe63b31cc <spin_lock.cpp.cc2eb890+0xffffffffe63b31cc>
  71:	66 3f                	data16 (bad)
  73:	3f                   	(bad)
  74:	3c 90                	cmp    $0x90,%al
  76:	2c 61                	sub    $0x61,%al
  78:	30 cd                	xor    %cl,%ch
  7a:	f3 96                	repz xchg %eax,%esi
  7c:	7a f6                	jp     74 <.gnu.lto_.decls.bad037c419750572+0x74>
  7e:	aa                   	stos   %al,%es:(%rdi)
  7f:	37                   	(bad)
  80:	76 37                	jbe    b9 <.gnu.lto_.decls.bad037c419750572+0xb9>
  82:	d3 1d cf 7e f9 cf    	rcrl   %cl,-0x30068131(%rip)        # ffffffffcff97f57 <spin_lock.cpp.cc2eb890+0xffffffffcff97f57>
  88:	fb                   	sti
  89:	b0 45                	mov    $0x45,%al
  8b:	25 46 8a cd b5       	and    $0xb5cd8a46,%eax
  90:	b2 62                	mov    $0x62,%dl
  92:	0b b6 5f d6 cb 96    	or     -0x693429a1(%rsi),%esi
  98:	99                   	cltd
  99:	5f                   	pop    %rdi
  9a:	58                   	pop    %rax
  9b:	df 2b                	fildll (%rbx)
  9d:	60                   	(bad)
  9e:	3b b6 5f ee 4b be    	cmp    -0x41b411a1(%rsi),%esi
  a4:	69 61 b9 fd 7c c8 b6 	imul   $0xb6c87cfd,-0x47(%rcx),%esp
  ab:	90                   	nop
  ac:	51                   	push   %rcx
  ad:	33 cd                	xor    %ebp,%ecx
  af:	2d cb a9 00 d7       	sub    $0xd700a9cb,%eax
  b4:	ed                   	in     (%dx),%eax
  b5:	b4 5d                	mov    $0x5d,%ah
  b7:	96                   	xchg   %eax,%esi
  b8:	cb                   	lret
  b9:	b7 6c                	mov    $0x6c,%bh
  bb:	b7 7c                	mov    $0x7c,%bh
  bd:	b1 2c                	mov    $0x2c,%cl
  bf:	d9 79 50             	fnstcw 0x50(%rcx)
  c2:	69 87 75 a7 5b c6 bb 	imul   $0xed0408bb,-0x39a4588b(%rdi),%eax
  c9:	08 04 ed 
  cc:	22 b0 c8 26 6f 92    	and    -0x6d90d938(%rax),%dh
  d2:	e8 cc 6f 16 2d       	call   2d1670a3 <spin_lock.cpp.cc2eb890+0x2d1670a3>
  d7:	27                   	(bad)
  d8:	7e bb                	jle    95 <.gnu.lto_.decls.bad037c419750572+0x95>
  da:	af                   	scas   %es:(%rdi),%eax
  db:	1e                   	(bad)
  dc:	39 c2                	cmp    %eax,%edx
  de:	d8 3c 3f             	fdivrs (%rdi,%rdi,1)
  e1:	d5 33 b2 0e          	{rex2 0x33} mov $0xe,%r26b
  e5:	ad                   	lods   %ds:(%rsi),%eax
  e6:	08 9d b9 21 74 5f    	or     %bl,0x5f7421b9(%rbp)
  ec:	37                   	(bad)
  ed:	f5                   	cmc
  ee:	bb a5 7e 4f e8       	mov    $0xe84f7ea5,%ebx
  f3:	82                   	(bad)
  f4:	f6 84 ee 0b 56 0b 40 	testb  $0x5f,0x400b560b(%rsi,%rbp,8)
  fb:	5f 
  fc:	65 bf be dd fd 93    	gs mov $0x93fdddbe,%edi
 102:	c3                   	ret
 103:	98                   	cwtl
 104:	1f                   	(bad)
 105:	4e dc ba 95 2b 74 57 	rex.WRX fdivrl 0x57742b95(%rdx)
 10c:	b8 10 c9 c2 e6       	mov    $0xe6c2c910,%eax
 111:	17                   	(bad)
 112:	59                   	pop    %rcx
 113:	7d e8                	jge    fd <.gnu.lto_.decls.bad037c419750572+0xfd>
 115:	37                   	(bad)
 116:	bd f1 ab bb c5       	mov    $0xc5bbabf1,%ebp
 11b:	8d                   	lea    (bad),%ebp
 11c:	ea                   	(bad)
 11d:	43 d4                	rex.XB (bad)
 11f:	ff 12                	call   *(%rdx)
 121:	74 0b                	je     12e <.gnu.lto_.decls.bad037c419750572+0x12e>
 123:	7d db                	jge    100 <.gnu.lto_.decls.bad037c419750572+0x100>
 125:	69 d9 dd 3e 36 4d    	imul   $0x4d363edd,%ecx,%ebx
 12b:	bb 3c f9 74 ff       	mov    $0xff74f93c,%ebx
 130:	9e                   	sahf
 131:	77 ff                	ja     132 <.gnu.lto_.decls.bad037c419750572+0x132>
 133:	9e                   	sahf
 134:	f8                   	clc
 135:	7f 36                	jg     16d <.gnu.lto_.decls.bad037c419750572+0x16d>
 137:	b7 0b                	mov    $0xb,%bh
 139:	e4 58                	in     $0x58,%al
 13b:	74 2b                	je     168 <.gnu.lto_.decls.bad037c419750572+0x168>
 13d:	eb fc                	jmp    13b <.gnu.lto_.decls.bad037c419750572+0x13b>
 13f:	b4 a0                	mov    $0xa0,%ah
 141:	d6                   	(bad)
 142:	46 0d 9b 07 d1 dd    	rex.RX or $0xddd1079b,%eax
 148:	fd                   	std
 149:	a1 7e ed 46 76 f7 b2 	movabs 0x5e82b2f77646ed7e,%eax
 150:	82 5e 
 152:	0a 75 18             	or     0x18(%rbp),%dh
 155:	93                   	xchg   %eax,%ebx
 156:	25 b7 52 48 23       	and    $0x234852b7,%eax
 15b:	87 94 8d b5 ac 4a a7 	xchg   %edx,-0x58b5534b(%rbp,%rcx,4)
 162:	5e                   	pop    %rsi
 163:	65 da ed             	gs (bad)
 166:	93                   	xchg   %eax,%ebx
 167:	62 f5 72 87 75       	(bad)
 16c:	55                   	push   %rbp
 16d:	ed                   	in     (%dx),%eax
 16e:	ac                   	lods   %ds:(%rsi),%al
 16f:	ae                   	scas   %es:(%rdi),%al
 170:	69 77 6e 4b 5a 77 da 	imul   $0xda775a4b,0x6e(%rdi),%esi
 177:	c8 a1 4e db          	enter  $0x4ea1,$0xdb
 17b:	a9 d3 ae 53 bb       	test   $0xbb53aed3,%eax
 180:	91                   	xchg   %eax,%ecx
 181:	00 34 94             	add    %dh,(%rsp,%rdx,4)
 184:	53                   	push   %rbx
 185:	bb e0 62 eb 30       	mov    $0x30eb62e0,%ebx
 18a:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 18b:	29 5e 2a             	sub    %ebx,0x2a(%rsi)
 18e:	b7 ac                	mov    $0xac,%bh
 190:	7c e9                	jl     17b <.gnu.lto_.decls.bad037c419750572+0x17b>
 192:	16                   	(bad)
 193:	92                   	xchg   %eax,%edx
 194:	97                   	xchg   %eax,%edi
 195:	8d 4c 83 4c          	lea    0x4c(%rbx,%rax,4),%ecx
 199:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 19a:	55                   	push   %rbp
 19b:	49 3c 9a             	rex.WB cmp $0x9a,%al
 19e:	48 af                	scas   %es:(%rdi),%rax
 1a0:	3d a1 da 02 d1       	cmp    $0xd102daa1,%eax
 1a5:	c9                   	leave
 1a6:	6e                   	outsb  %ds:(%rsi),(%dx)
 1a7:	24 2e                	and    $0x2e,%al
 1a9:	1e                   	(bad)
 1aa:	dd 58 4d             	fstpl  0x4d(%rax)
 1ad:	22 d9                	and    %cl,%bl
 1af:	60                   	(bad)
 1b0:	59                   	pop    %rcx
 1b1:	0c ac                	or     $0xac,%al
 1b3:	75 b7                	jne    16c <.gnu.lto_.decls.bad037c419750572+0x16c>
 1b5:	89 4e db             	mov    %ecx,-0x25(%rsi)
 1b8:	ea                   	(bad)
 1b9:	5c                   	pop    %rsp
 1ba:	8a 4c d3 ba          	mov    -0x46(%rbx,%rdx,8),%cl
 1be:	85 ba 9f b0 ba b7    	test   %edi,-0x48454f61(%rdx)
 1c4:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 1c5:	86 d6                	xchg   %dl,%dh
 1c7:	48 2d bb 93 69 0f    	sub    $0xf6993bb,%rax
 1cd:	25 95 5b bd b6       	and    $0xb6bd5b95,%eax
 1d2:	d6                   	(bad)
 1d3:	c8 45 a6 6b          	enter  $0xa645,$0x6b
 1d7:	c8 34 1e ca          	enter  $0x1e34,$0xca
 1db:	ad                   	lods   %ds:(%rsi),%eax
 1dc:	36 b3 aa             	ss mov $0xaa,%bl
 1df:	94                   	xchg   %eax,%esp
 1e0:	cd f5                	int    $0xf5
 1e2:	64 c2 6a 0d          	fs ret $0xd6a
 1e6:	8a aa 93 4b ab 6d    	mov    0x6dab4b93(%rdx),%ch
 1ec:	64 7a a5             	fs jp  194 <.gnu.lto_.decls.bad037c419750572+0x194>
 1ef:	e4 01                	in     $0x1,%al
 1f1:	95                   	xchg   %eax,%ebp
 1f2:	d5 35 0c 99          	{rex2 0x35} or $0x99,%al
 1f6:	f6 b2 01 c5 81 41    	divb   0x4181c501(%rdx)
 1fc:	8a 0a                	mov    (%rdx),%cl
 1fe:	9b                   	fwait
 1ff:	ff e5                	jmp    *%rbp
 201:	2c d5                	sub    $0xd5,%al
 203:	7d 3f                	jge    244 <.gnu.lto_.decls.bad037c419750572+0x244>
 205:	cb                   	lret
 206:	f8                   	clc
 207:	7f 67                	jg     270 <.gnu.lto_.decls.bad037c419750572+0x270>
 209:	79 fc                	jns    207 <.gnu.lto_.decls.bad037c419750572+0x207>
 20b:	6b 82 c4 bf 3b 76 ca 	imul   $0xffffffca,0x763bbfc4(%rdx),%eax
 212:	e7 e7                	out    %eax,$0xe7
 214:	0c fe                	or     $0xfe,%al
 216:	fd                   	std
 217:	40 07                	rex (bad)
 219:	09 39                	or     %edi,(%rcx)
 21b:	fe                   	(bad)
 21c:	97                   	xchg   %eax,%edi
 21d:	59                   	pop    %rcx
 21e:	e5 47                	in     $0x47,%eax
 220:	58                   	pop    %rax
 221:	29 e4                	sub    %esp,%esp
 223:	bf 38 4a fc 0b       	mov    $0xbfc4a38,%edi
 228:	e7 df                	out    %eax,$0xdf
 22a:	18 c4                	sbb    %al,%ah
 22c:	7f 7d                	jg     2ab <.gnu.lto_.decls.bad037c419750572+0x2ab>
 22e:	ff f2                	push   %rdx
 230:	fe 05 f1 ef cf bf    	incb   -0x4030100f(%rip)        # ffffffffbfcff227 <spin_lock.cpp.cc2eb890+0xffffffffbfcff227>
 236:	42 ff 9e f0 af 09 ff 	rex.X lcall *-0xf65010(%rsi)
 23d:	a2 5b 82 9b ff 41 ff 	movabs %al,0xf99eff41ff9b825b
 244:	9e f9 
 246:	0f c2 7f 2f 66       	cmpps  $0x66,0x2f(%rdi),%xmm7
 24b:	ff cd                	dec    %ebp
 24d:	7f a1                	jg     1f0 <.gnu.lto_.decls.bad037c419750572+0x1f0>
 24f:	fc                   	cld
 250:	7b fe                	jnp    250 <.gnu.lto_.decls.bad037c419750572+0x250>
 252:	0b c2                	or     %edx,%eax
 254:	bf 1a fc fb e2       	mov    $0xe2fbfc1a,%edi
 259:	df df                	(bad)
 25b:	bf 28 fe 55 e0       	mov    $0xe055fe28,%edi
 260:	7f db                	jg     23d <.gnu.lto_.decls.bad037c419750572+0x23d>
 262:	ff                   	(bad)
 263:	39 ff                	cmp    %edi,%edi
 265:	cd fc                	int    $0xfc
 267:	ef                   	out    %eax,(%dx)
 268:	fd                   	std
 269:	47 fb                	rex.RXB sti
 26b:	af                   	scas   %es:(%rdi),%eax
 26c:	8b 8b 8b 8b fb b7    	mov    -0x48047475(%rbx),%ecx
 272:	c6                   	(bad)
 273:	ff a1 c8 1f 04 17    	jmp    *0x17041fc8(%rcx)
 279:	30 e8                	xor    %ch,%al
 27b:	7c d0                	jl     24d <.gnu.lto_.decls.bad037c419750572+0x24d>
 27d:	a9 33 06 86 2c       	test   $0x2c860633,%eax
 282:	ae                   	scas   %es:(%rdi),%al
 283:	b6 2b                	mov    $0x2b,%dh
 285:	39 d8                	cmp    %ebx,%eax
 287:	cc                   	int3
 288:	e2 22                	loop   2ac <.gnu.lto_.decls.bad037c419750572+0x2ac>
 28a:	59                   	pop    %rcx
 28b:	25 7e d5 eb cb       	and    $0xcbebd57e,%eax
 290:	cd 94                	int    $0x94
 292:	69 5e 31 0b 2c b5 03 	imul   $0x3b52c0b,0x31(%rsi),%ebx
 299:	f6 98 91 25 bb c0    	negb   -0x3f44da6f(%rax)
 29f:	40 de b8 05 be 12 ea 	rex fidivrs -0x15ed41fb(%rax)
 2a6:	6e                   	outsb  %ds:(%rsi),(%dx)
 2a7:	16                   	(bad)
 2a8:	02 3c ff             	add    (%rdi,%rdi,8),%bh
 2ab:	e0 ab                	loopne 258 <.gnu.lto_.decls.bad037c419750572+0x258>
 2ad:	bf c0 52 ba 6f       	mov    $0x6fba52c0,%edi
 2b2:	9a                   	(bad)
 2b3:	ab                   	stos   %eax,%es:(%rdi)
 2b4:	73 95                	jae    24b <.gnu.lto_.decls.bad037c419750572+0x24b>
 2b6:	d3 b2 b1 fa db b5    	shll   %cl,-0x4a24054f(%rdx)
 2bc:	bb e7 6a f7 70       	mov    $0x70f76ae7,%ebx
 2c1:	b2 d7                	mov    $0xd7,%dl
 2c3:	56                   	push   %rsi
 2c4:	69 1c a4 8d 22 6d 46 	imul   $0x466d228d,(%rsp,%riz,4),%ebx
 2cb:	dc 7a 29             	fdivrl 0x29(%rdx)
 2ce:	84 87 fc 1c 84 b1    	test   %al,-0x4e7be304(%rdi)
 2d4:	f6 8d af 98 c8 b7 07 	testb  $0x7,-0x48376751(%rbp)
 2db:	b6 3a                	mov    $0x3a,%dh
 2dd:	70 77                	jo     356 <.gnu.lto_.decls.bad037c419750572+0x356>
 2df:	fc                   	cld
 2e0:	76 95                	jbe    277 <.gnu.lto_.decls.bad037c419750572+0x277>
 2e2:	74 90                	je     274 <.gnu.lto_.decls.bad037c419750572+0x274>
 2e4:	62 81 12 40 55       	(bad)
 2e9:	5d                   	pop    %rbp
 2ea:	26 44 c8 dc ef 94    	es rex.R enter $0xefdc,$0x94
 2f0:	f5                   	cmc
 2f1:	ba 38 f5 ba 33       	mov    $0x33baf538,%edx
 2f6:	75 c9                	jne    2c1 <.gnu.lto_.decls.bad037c419750572+0x2c1>
 2f8:	55                   	push   %rbp
 2f9:	df 55 12             	fists  0x12(%rbp)
 2fc:	64 87 4a 4f          	xchg   %ecx,%fs:0x4f(%rdx)
 300:	0f 36                	(bad)
 302:	ab                   	stos   %eax,%es:(%rdi)
 303:	ce                   	(bad)
 304:	54                   	push   %rsp
 305:	bb 5c 77 21 c2       	mov    $0xc221775c,%ebx
 30a:	55                   	push   %rbp
 30b:	07                   	(bad)
 30c:	02 b3 b5 c2 82 71    	add    0x7182c2b5(%rbx),%dh
 312:	15 fb 58 a6 f8       	adc    $0xf8a658fb,%eax
 317:	95                   	xchg   %eax,%ebp
 318:	00 ca                	add    %cl,%dl
 31a:	a2 64 0f 0f 68 ce 54 	movabs %al,0x2aff54ce680f0f64
 321:	ff 2a 
 323:	e1 69                	loope  38e <.gnu.lto_.decls.bad037c419750572+0x38e>
 325:	79 ba                	jns    2e1 <.gnu.lto_.decls.bad037c419750572+0x2e1>
 327:	4a ee                	rex.WX out %al,(%dx)
 329:	e0 29                	loopne 354 <.gnu.lto_.decls.bad037c419750572+0x354>
 32b:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 32c:	fa                   	cli
 32d:	0f 95 10             	setne  (%rax)
 330:	b6 ee                	mov    $0xee,%dh
 332:	e6 b1                	out    %al,$0xb1
 334:	60                   	(bad)
 335:	4c c5 3d 5e d4       	rex.WR vdivpd %ymm4,%ymm8,%ymm10
 33a:	80 d7 8a             	adc    $0x8a,%bh
 33d:	1f                   	(bad)
 33e:	c8 54 ac 64          	enter  $0xac54,$0x64
 342:	1d b9 74 ab 57       	sbb    $0x57ab74b9,%eax
 347:	8a 4b 0d             	mov    0xd(%rbx),%cl
 34a:	5a                   	pop    %rdx
 34b:	58                   	pop    %rax
 34c:	4f ba d3 5f 89 14 cc 	rex.WRXB movabs $0x6ce9e5cc14895fd3,%r10
 353:	e5 e9 6c 
 356:	a9 33 af 23 ab       	test   $0xab23af33,%eax
 35b:	d7                   	xlat   %ds:(%rbx)
 35c:	35 a9 9c 23 05       	xor    $0x5239ca9,%eax
 361:	f2 dd 01             	repnz fldl (%rcx)
 364:	93                   	xchg   %eax,%ebx
 365:	96                   	xchg   %eax,%esi
 366:	24 48                	and    $0x48,%al
 368:	bd 0e 48 fd 59       	mov    $0x59fd480e,%ebp
 36d:	ea                   	(bad)
 36e:	51                   	push   %rcx
 36f:	bc 3c 78 b4 b8       	mov    $0xb8b4783c,%esp
 374:	b1 79                	mov    $0x79,%cl
 376:	4e fe                	rex.WRX (bad)
 378:	1b c7                	sbb    %edi,%eax
 37a:	cd 51                	int    $0x51
 37c:	3e ac                	lods   %ds:(%rsi),%al
 37e:	6e                   	outsb  %ds:(%rsi),(%dx)
 37f:	12 3e                	adc    (%rsi),%bh
 381:	64 67 41 a0 38 8a 9f 	addr32 rex.B mov %fs:0x189f8a38,%al
 388:	18 
 389:	0a 8d 4c 9b 28 36    	or     0x36289b4c(%rbp),%cl
 38f:	19 ca                	sbb    %ecx,%edx
 391:	ac                   	lods   %ds:(%rsi),%al
 392:	e7 04                	out    %eax,$0x4
 394:	0c 12                	or     $0x12,%al
 396:	19 d8                	sbb    %ebx,%eax
 398:	bc 2e 59 19 09       	mov    $0x919592e,%esp
 39d:	3c 3b                	cmp    $0x3b,%al
 39f:	85 d0                	test   %edx,%eax
 3a1:	2d ad d2 0e ca       	sub    $0xca0ed2ad,%eax
 3a6:	ed                   	in     (%dx),%eax
 3a7:	d8 b3 82 17 36 73    	fdivs  0x73361782(%rbx)
 3ad:	1b 42 c7             	sbb    -0x39(%rdx),%eax
 3b0:	bd 22 74 43 6c       	mov    $0x6c437422,%ebp
 3b5:	aa                   	stos   %al,%es:(%rdi)
 3b6:	d0 87 b3 ba 3b cb    	rolb   $1,-0x34c4454d(%rdi)
 3bc:	b3 7a                	mov    $0x7a,%bl
 3be:	ce                   	(bad)
 3bf:	f6 a1 6e 3d 5d 7c    	mulb   0x7c5d3d6e(%rcx)
 3c5:	cc                   	int3
 3c6:	ee                   	out    %al,(%dx)
 3c7:	84 91 22 53 77 5f    	test   %dl,0x5f775322(%rcx)
 3cd:	dc ce                	fmul   %st,%st(6)
 3cf:	36 d4                	ss (bad)
 3d1:	fd                   	std
 3d2:	85 4c 57 a7          	test   %ecx,-0x59(%rdi,%rdx,2)
 3d6:	88 0e                	mov    %cl,(%rsi)
 3d8:	4c 76 38             	rex.WR jbe 413 <.gnu.lto_.decls.bad037c419750572+0x413>
 3db:	0c 29                	or     $0x29,%al
 3dd:	02 c5                	add    %ch,%al
 3df:	e6 3f                	out    %al,$0x3f
 3e1:	28 eb                	sub    %ch,%bl
 3e3:	4d 34 b5             	rex.WRB xor $0xb5,%al
 3e6:	17                   	(bad)
 3e7:	c6                   	(bad)
 3e8:	f6 3a                	idivb  (%rdx)
 3ea:	db b6 cb 86 ea 62    	(bad) 0x62ea86cb(%rsi)
 3f0:	85 83 09 db 56 0e    	test   %eax,0xe56db09(%rbx)
 3f6:	09 52 c7             	or     %edx,-0x39(%rdx)
 3f9:	12 e6                	adc    %dh,%ah
 3fb:	ca 41 0e             	lret   $0xe41
 3fe:	d7                   	xlat   %ds:(%rbx)
 3ff:	0e                   	(bad)
 400:	df 3b                	fistpll (%rbx)
 402:	67 33 42 55          	xor    0x55(%edx),%eax
 406:	65 c6                	gs (bad)
 408:	e6 da                	out    %al,$0xda
 40a:	31 c5                	xor    %eax,%ebp
 40c:	ea                   	(bad)
 40d:	cd a8                	int    $0xa8
 40f:	da 5b 3b             	ficompl 0x3b(%rbx)
 412:	43 db 39             	rex.XB fstpt (%r9)
 415:	25 62 68 9b c2       	and    $0xc29b6862,%eax
 41a:	e5 53                	in     $0x53,%eax
 41c:	84 8e 1d 36 5b 45    	test   %cl,0x455b361d(%rsi)
 422:	09 95 39 6b 5f 39    	or     %edx,0x395f6b39(%rbp)
 428:	6f                   	outsl  %ds:(%rsi),(%dx)
 429:	80 e8 90             	sub    $0x90,%al
 42c:	ad                   	lods   %ds:(%rsi),%eax
 42d:	10 c6                	adc    %al,%dh
 42f:	e6 be                	out    %al,$0xbe
 431:	31 df                	xor    %ebx,%edi
 433:	f0 c6                	lock (bad)
 435:	59                   	pop    %rcx
 436:	38 df                	cmp    %bl,%bh
 438:	37                   	(bad)
 439:	eb e6                	jmp    421 <.gnu.lto_.decls.bad037c419750572+0x421>
 43b:	45 0d dc 07 95 2e    	rex.RB or $0x2e9507dc,%eax
 441:	02 40 75             	add    0x75(%rax),%al
 444:	07                   	(bad)
 445:	25 cb 32 3a f3       	and    $0xf33a32cb,%eax
 44a:	b9 b4 ba 69 db       	mov    $0xdb69bab4,%ecx
 44f:	e6 27                	out    %al,$0x27
 451:	06                   	(bad)
 452:	1b f0                	sbb    %eax,%esi
 454:	9c                   	pushf
 455:	b5 f9                	mov    $0xf9,%ch
 457:	17                   	(bad)
 458:	cd a6                	int    $0xa6
 45a:	59                   	pop    %rcx
 45b:	b5 9c                	mov    $0x9c,%ch
 45d:	72 0a                	jb     469 <.gnu.lto_.decls.bad037c419750572+0x469>
 45f:	ab                   	stos   %eax,%es:(%rdi)
 460:	c7                   	(bad)
 461:	ba 53 10 3d 2c       	mov    $0x2c3d1053,%edx
 466:	79 e0                	jns    448 <.gnu.lto_.decls.bad037c419750572+0x448>
 468:	c6                   	(bad)
 469:	d4                   	(bad)
 46a:	ac                   	lods   %ds:(%rsi),%al
 46b:	59                   	pop    %rcx
 46c:	b5 ff                	mov    $0xff,%ch
 46e:	50                   	push   %rax
 46f:	e9 a0 b6 6c 5e       	jmp    5e6cbb14 <spin_lock.cpp.cc2eb890+0x5e6cbb14>
 474:	42 85 ae 3a 58 4c f3 	rex.X test %ebp,-0xcb3a7c6(%rsi)
 47b:	39 30                	cmp    %esi,(%rax)
 47d:	f5                   	cmc
 47e:	b9 b0 fa 74 45       	mov    $0x4574fab0,%ecx
 483:	e8 2a 1e 1d 17       	call   171d22b2 <spin_lock.cpp.cc2eb890+0x171d22b2>
 488:	2c 3a                	sub    $0x3a,%al
 48a:	58                   	pop    %rax
 48b:	60                   	(bad)
 48c:	f3 b9 ac 7a 26 53    	repz mov $0x53267aac,%ecx
 492:	7d d0                	jge    464 <.gnu.lto_.decls.bad037c419750572+0x464>
 494:	d0 95 b2 53 be 54    	rclb   $1,0x54be53b2(%rbp)
 49a:	c2 d6 0c             	ret    $0xcd6
 49d:	af                   	scas   %es:(%rdi),%eax
 49e:	5b                   	pop    %rbx
 49f:	0b 99 76 8f bd d2    	or     -0x2d42708a(%rcx),%ebx
 4a5:	65 65 85 c2          	gs gs test %eax,%edx
 4a9:	c7 45 07 72 cd 67 89 	movl   $0x8967cd72,0x7(%rbp)
 4b0:	1a 1a                	sbb    (%rdx),%bl
 4b2:	1b 93 f9 96 f9 8b    	sbb    -0x74066907(%rbx),%edx
 4b8:	1a 58 31             	sbb    0x31(%rax),%bl
 4bb:	24 ba                	and    $0xba,%al
 4bd:	bd ba 9b 00 13       	mov    $0x13009bba,%ebp
 4c2:	07                   	(bad)
 4c3:	29 3a                	sub    %edi,(%rdx)
 4c5:	5b                   	pop    %rbx
 4c6:	6c                   	insb   (%dx),%es:(%rdi)
 4c7:	6e                   	outsb  %ds:(%rsi),(%dx)
 4c8:	0e                   	(bad)
 4c9:	2b e6                	sub    %esi,%esp
 4cb:	f8                   	clc
 4cc:	d4                   	(bad)
 4cd:	66 27                	data16 (bad)
 4cf:	8c d9                	mov    %ds,%ecx
 4d1:	8a 79 50             	mov    0x50(%rcx),%bh
 4d4:	b2 4a                	mov    $0x4a,%dl
 4d6:	2b 28                	sub    (%rax),%ebp
 4d8:	90                   	nop
 4d9:	24 d8                	and    $0xd8,%al
 4db:	bc fd e0 fa 79       	mov    $0x79fae0fd,%esp
 4e0:	13 77 55             	adc    0x55(%rdi),%esi
 4e3:	e6 78                	out    %al,$0x78
 4e5:	ce                   	(bad)
 4e6:	79 ac                	jns    494 <.gnu.lto_.decls.bad037c419750572+0x494>
 4e8:	b4 7e                	mov    $0x7e,%ah
 4ea:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 4eb:	5a                   	pop    %rdx
 4ec:	95                   	xchg   %eax,%ebp
 4ed:	e9 70 1b f3 f0       	jmp    fffffffff0f32062 <spin_lock.cpp.cc2eb890+0xfffffffff0f32062>
 4f2:	f3 7c dc             	repz jl 4d1 <.gnu.lto_.decls.bad037c419750572+0x4d1>
 4f5:	86 44 b9 c0          	xchg   %al,-0x40(%rcx,%rdi,4)
 4f9:	e6 7b                	out    %al,$0x7b
 4fb:	2e d4                	cs (bad)
 4fd:	f3 1d 3b 70 d2 27    	repz sbb $0x27d2703b,%eax
 503:	36 79 87             	ss jns 48d <.gnu.lto_.decls.bad037c419750572+0x48d>
 506:	9a                   	(bad)
 507:	ec                   	in     (%dx),%al
 508:	55                   	push   %rbp
 509:	9d                   	popf
 50a:	e0 38                	loopne 544 <.gnu.lto_.decls.bad037c419750572+0x544>
 50c:	33 64 dd 15          	xor    0x15(%rbp,%rbx,8),%esp
 510:	54                   	push   %rsp
 511:	24 cb                	and    $0xcb,%al
 513:	15 32 36 cf 76       	adc    $0x76cf3632,%eax
 518:	c6                   	(bad)
 519:	9e                   	sahf
 51a:	94                   	xchg   %eax,%esp
 51b:	89 72 86             	mov    %esi,-0x7a(%rdx)
 51e:	4d                   	rex.WRB
 51f:	66 03 9e eb f0 52 2c 	add    0x2c52f0eb(%rsi),%bx
 526:	39 77 d8             	cmp    %esi,-0x28(%rdi)
 529:	dc 6d 08             	fsubrl 0x8(%rbp)
 52c:	dd 1d 39 65 3d c0    	fstpl  -0x3fc29ac7(%rip)        # ffffffffc03d6a6b <spin_lock.cpp.cc2eb890+0xffffffffc03d6a6b>
 532:	0d 51 13 47 87       	or     $0x87471351,%eax
 537:	9a                   	(bad)
 538:	2d 28 6b d8 ac       	sub    $0xacd86b28,%eax
 53d:	ea                   	(bad)
 53e:	11 89 c1 6c 06 36    	adc    %ecx,0x36066cc1(%rcx)
 544:	7d a4                	jge    4ea <.gnu.lto_.decls.bad037c419750572+0x4ea>
 546:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 547:	e1 37                	loope  580 <.gnu.lto_.decls.bad037c419750572+0x580>
 549:	bc 46 8d dd a0       	mov    $0xa0dd8d46,%esp
 54e:	40 b6 96             	mov    $0x96,%sil
 551:	53                   	push   %rbx
 552:	da 3d b8 8c c9 d4    	fidivrl -0x2b367348(%rip)        # ffffffffd4c99210 <spin_lock.cpp.cc2eb890+0xffffffffd4c99210>
 558:	5e                   	pop    %rsi
 559:	58                   	pop    %rax
 55a:	ab                   	stos   %eax,%es:(%rdi)
 55b:	81 88 12 0d 9b 6d ce 	orl    $0x6c056bce,0x6d9b0d12(%rax)
 562:	6b 05 6c 
 565:	5c                   	pop    %rsp
 566:	2b 6d 60             	sub    0x60(%rbp),%ebp
 569:	93                   	xchg   %eax,%ebx
 56a:	d9 f0                	f2xm1
 56c:	da a8 11 02 f6 b5    	fisubrl -0x4a09fdef(%rax)
 572:	63 4c 3d 0f          	movsxd 0xf(%rbp,%rdi,1),%ecx
 576:	09 9a aa 35 79 ba    	or     %ebx,-0x4586ca56(%rdx)
 57c:	76 60                	jbe    5de <.gnu.lto_.decls.bad037c419750572+0x5de>
 57e:	53                   	push   %rbx
 57f:	cc                   	int3
 580:	d9 8c 18 46 ab 4d 84 	(bad) -0x7bb254ba(%rax,%rbx,1)
 587:	a0 c8 2d b1 a4 91 73 	movabs 0x46767391a4b12dc8,%al
 58e:	76 46 
 590:	3b ab 6e 3e b2 24    	cmp    0x24b23e6e(%rbx),%ebp
 596:	d9 e4                	ftst
 598:	33 3f                	xor    (%rdi),%edi
 59a:	e3 17                	jrcxz  5b3 <.gnu.lto_.decls.bad037c419750572+0x5b3>
 59c:	ba 68 68 fb d9       	mov    $0xd9fb6868,%edx
 5a1:	6d                   	insl   (%dx),%es:(%rdi)
 5a2:	10 43 e6             	adc    %al,-0x1a(%rbx)
 5a5:	0d 9b 5c e6 3c       	or     $0x3ce65c9b,%eax
 5aa:	d6                   	(bad)
 5ab:	46 ad                	rex.RX lods %ds:(%rsi),%eax
 5ad:	cc                   	int3
 5ae:	17                   	(bad)
 5af:	9b                   	fwait
 5b0:	4c e6 2c             	rex.WR out %al,$0x2c
 5b3:	16                   	(bad)
 5b4:	64 05 38 5c 63 7e    	fs add $0x7e635c38,%eax
 5ba:	9e                   	sahf
 5bb:	2f                   	(bad)
 5bc:	89 99 33 3b 45 ea    	mov    %ebx,-0x15bac4cd(%rcx)
 5c2:	79 4b                	jns    60f <.gnu.lto_.decls.bad037c419750572+0x60f>
 5c4:	2f                   	(bad)
 5c5:	e7 1c                	out    %eax,$0x1c
 5c7:	bc 70 98 1e 92       	mov    $0x921e9870,%esp
 5cc:	1c 69                	sbb    $0x69,%al
 5ce:	9a                   	(bad)
 5cf:	31 ac c3 39 cc 01 51 	xor    %ebp,0x5101cc39(%rbx,%rax,8)
 5d6:	c4                   	(bad)
 5d7:	aa                   	stos   %al,%es:(%rdi)
 5d8:	b0 c9                	mov    $0xc9,%al
 5da:	60                   	(bad)
 5db:	be f0 90 f5 56       	mov    $0x56f590f0,%esi
 5e0:	ce                   	(bad)
 5e1:	58                   	pop    %rax
 5e2:	ac                   	lods   %ds:(%rsi),%al
 5e3:	70 59                	jo     63e <.gnu.lto_.decls.bad037c419750572+0x63e>
 5e5:	ef                   	out    %eax,(%dx)
 5e6:	48 f7 53 ed          	notq   -0x13(%rbx)
 5ea:	ad                   	lods   %ds:(%rsi),%eax
 5eb:	b1 a7                	mov    $0xa7,%cl
 5ed:	b5 56                	mov    $0x56,%ch
 5ef:	5a                   	pop    %rdx
 5f0:	a1 d0 8d 31 09 4b c2 	movabs 0xce5cc24b09318dd0,%eax
 5f7:	5c ce 
 5f9:	65 1f                	gs (bad)
 5fb:	a0 c4 d2 66 60 93 c9 	movabs 0xb78c9936066d2c4,%al
 602:	78 0b 
 604:	90                   	nop
 605:	27                   	(bad)
 606:	54                   	push   %rsp
 607:	f4                   	hlt
 608:	f0 96                	lock xchg %eax,%esi
 60a:	6b d1 f3             	imul   $0xfffffff3,%ecx,%edx
 60d:	d5 a4 8b             	(bad)
 610:	4d                   	rex.WRB
 611:	36 ce                	ss (bad)
 613:	72 ac                	jb     5c1 <.gnu.lto_.decls.bad037c419750572+0x5c1>
 615:	01 d6                	add    %edx,%esi
 617:	cc                   	int3
 618:	0d 55 16 b8 7a       	or     $0x7ab81655,%eax
 61d:	3c bc                	cmp    $0xbc,%al
 61f:	5c                   	pop    %rsp
 620:	95                   	xchg   %eax,%ebp
 621:	9e                   	sahf
 622:	23 6c f2 95          	and    -0x6b(%rdx,%rsi,8),%ebp
 626:	f3 d8 cf             	repz fmul %st(7),%st
 629:	e3 7d                	jrcxz  6a8 <.gnu.lto_.decls.bad037c419750572+0x6a8>
 62b:	21 a2 95 75 47 ec    	and    %esp,-0x13b88a6b(%rdx)
 631:	e7 ed                	out    %eax,$0xed
 633:	c8 d8 04 d9          	enter  $0x4d8,$0xd9
 637:	a2 53 5f c7 54 5e 1a 	movabs %al,0x53ca1a5e54c75f53
 63e:	ca 53 
 640:	96                   	xchg   %eax,%esi
 641:	d3 37                	shll   %cl,(%rdi)
 643:	ae                   	scas   %es:(%rdi),%al
 644:	c2 60 8b             	ret    $0x8b60
 647:	40 f7 d8             	rex neg %eax
 64a:	9d                   	popf
 64b:	2e bd 14 5b 20 25    	cs mov $0x25205b14,%ebp
 651:	d2 d2                	rcl    %cl,%dl
 653:	12 f6                	adc    %dh,%dh
 655:	d5 e5 d3 26          	{rex2 0xe5} psrlq (%r14),%mm4
 659:	e5 0c                	in     $0xc,%eax
 65b:	0f 30                	wrmsr
 65d:	f5                   	cmc
 65e:	15 4a 3d 4b e1       	adc    $0xe14b3d4a,%eax
 663:	29 eb                	sub    %ebp,%ebx
 665:	a3 ec 49 77 72 77 fc 	movabs %eax,0x999cfc77727749ec
 66c:	9c 99 
 66e:	c2 04 c8             	ret    $0xc804
 671:	14 2f                	adc    $0x2f,%al
 673:	9d                   	popf
 674:	8f                   	(bad)
 675:	b7 1e                	mov    $0x1e,%bh
 677:	57                   	push   %rdi
 678:	d8 64 af 9a          	fsubs  -0x66(%rdi,%rbp,4)
 67c:	ac                   	lods   %ds:(%rsi),%al
 67d:	4e                   	rex.WRX
 67e:	4e 2c 5a             	rex.WRX sub $0x5a,%al
 681:	d6                   	(bad)
 682:	94                   	xchg   %eax,%esp
 683:	1f                   	(bad)
 684:	5d                   	pop    %rbp
 685:	d5 0c 6e             	{rex2 0xc} outsb %ds:(%rsi),(%dx)
 688:	4e 3b 49 bd          	rex.WRX cmp -0x43(%rcx),%r9
 68c:	7e 8e                	jle    61c <.gnu.lto_.decls.bad037c419750572+0x61c>
 68e:	b8 45 b1 c2 e6       	mov    $0xe6c2b145,%eax
 693:	39 ca                	cmp    %ecx,%edx
 695:	cf                   	iret
 696:	48 6e                	rex.W outsb %ds:(%rsi),(%dx)
 698:	c2 50 4a             	ret    $0x4a50
 69b:	50                   	push   %rax
 69c:	42 80 16 e5          	rex.X adcb $0xe5,(%rsi)
 6a0:	05 36 f9 09 e3       	add    $0xe309f936,%eax
 6a5:	70 86                	jo     62d <.gnu.lto_.decls.bad037c419750572+0x62d>
 6a7:	c2 37 20             	ret    $0x2037
 6aa:	bf da 0b 4a 10       	mov    $0x104a0bda,%edi
 6af:	5c                   	pop    %rsp
 6b0:	b7 13                	mov    $0x13,%bh
 6b2:	43 61                	rex.XB (bad)
 6b4:	81 d5 ed 74 e6 62    	adc    $0x62e674ed,%ebp
 6ba:	27                   	(bad)
 6bb:	0c a5                	or     $0xa5,%al
 6bd:	fe 4e a8             	decb   -0x58(%rsi)
 6c0:	99                   	cltd
 6c1:	32 53 cd             	xor    -0x33(%rbx),%dl
 6c4:	d7                   	xlat   %ds:(%rbx)
 6c5:	ad                   	lods   %ds:(%rsi),%eax
 6c6:	fa                   	cli
 6c7:	ca a4 92             	lret   $0x92a4
 6ca:	58                   	pop    %rax
 6cb:	11 3a                	adc    %edi,(%rdx)
 6cd:	ae                   	scas   %es:(%rdi),%al
 6ce:	01 78 b6             	add    %edi,-0x4a(%rax)
 6d1:	61                   	(bad)
 6d2:	47 a6                	rex.RXB cmpsb %es:(%rdi),%ds:(%rsi)
 6d4:	ca 9e 1c             	lret   $0x1c9e
 6d7:	6c                   	insb   (%dx),%es:(%rdi)
 6d8:	f2 86 d0             	repnz xchg %dl,%al
 6db:	f1                   	int1
 6dc:	d4                   	(bad)
 6dd:	50                   	push   %rax
 6de:	5e                   	pop    %rsi
 6df:	b2 2c                	mov    $0x2c,%dl
 6e1:	c3                   	ret
 6e2:	df 78 06             	fistpll 0x6(%rax)
 6e5:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 6e6:	c1 4c bb 8a 80       	rorl   $0x80,-0x76(%rbx,%rdi,4)
 6eb:	16                   	(bad)
 6ec:	aa                   	stos   %al,%es:(%rdi)
 6ed:	98                   	cwtl
 6ee:	49 e2 d6             	rex.WB loop 6c7 <.gnu.lto_.decls.bad037c419750572+0x6c7>
 6f1:	cb                   	lret
 6f2:	e4 02                	in     $0x2,%al
 6f4:	bf 19 33 49 c3       	mov    $0xc3493319,%edi
 6f9:	7c 4f                	jl     74a <.gnu.lto_.decls.bad037c419750572+0x74a>
 6fb:	5c                   	pop    %rsp
 6fc:	5f                   	pop    %rdi
 6fd:	ce                   	(bad)
 6fe:	b0 f9                	mov    $0xf9,%al
 700:	ba a4 be 06 a9       	mov    $0xa906bea4,%edx
 705:	df b5 d5 a1 1e 10    	fbstp  0x101ea1d5(%rbp)
 70b:	4e c2 4a 7a          	rex.WRX ret $0x7a4a
 70f:	dd 5e 5b             	fstpl  0x5b(%rsi)
 712:	5b                   	pop    %rbx
 713:	8d 05 c4 8b cd ef    	lea    -0x1032743c(%rip),%eax        # ffffffffefcd92dd <spin_lock.cpp.cc2eb890+0xffffffffefcd92dd>
 719:	e4 d4                	in     $0xd4,%al
 71b:	ef                   	out    %eax,(%dx)
 71c:	c4                   	(bad)
 71d:	6a 6f                	push   $0x6f
 71f:	06                   	(bad)
 720:	3c 0b                	cmp    $0xb,%al
 722:	c7 47 a2 3a 82 2a 3c 	movl   $0x3c2a823a,-0x5e(%rdi)
 729:	b0 89                	mov    $0x89,%al
 72b:	e9 a5 15 8a 5c       	jmp    5c8a1cd5 <spin_lock.cpp.cc2eb890+0x5c8a1cd5>
 730:	0f 53 56 76          	rcpps  0x76(%rsi),%xmm2
 734:	78 5d                	js     793 <.gnu.lto_.decls.bad037c419750572+0x793>
 736:	3d 94 48 61 d3       	cmp    $0xd3614894,%eax
 73b:	c8 59 ab 00          	enter  $0xab59,$0x0
 73f:	a0 25 6f 70 f0 70 23 	movabs 0x909a2370f0706f25,%al
 746:	9a 90 
 748:	86 c7                	xchg   %al,%bh
 74a:	20 13                	and    %dl,(%rbx)
 74c:	31 d8                	xor    %ebx,%eax
 74e:	34 3c                	xor    $0x3c,%al
 750:	8f c5                	pop    %rbp
 752:	e0 b9                	loopne 70d <.gnu.lto_.decls.bad037c419750572+0x70d>
 754:	84 9e e7 8a 02 3e    	test   %bl,0x3e028ae7(%rsi)
 75a:	34 80                	xor    $0x80,%al
 75c:	42 04 8e             	rex.X add $0x8e,%al
 75f:	23 4a 44             	and    0x44(%rdx),%ecx
 762:	8f                   	(bad)
 763:	d0 25 b4 a9 f7 23    	shlb   $1,0x23f7a9b4(%rip)        # 23f7b11d <spin_lock.cpp.cc2eb890+0x23f7b11d>
 769:	91                   	xchg   %eax,%ecx
 76a:	29 38                	sub    %edi,(%rax)
 76c:	63 88 54 9b 88 68    	movsxd 0x68889b54(%rax),%ecx
 772:	70 c6                	jo     73a <.gnu.lto_.decls.bad037c419750572+0x73a>
 774:	79 54                	jns    7ca <.gnu.lto_.decls.bad037c419750572+0x7ca>
 776:	1a 2e                	sbb    (%rsi),%ch
 778:	2d 05 cf 1b 37       	sub    $0x371bcf05,%eax
 77d:	84 47 28             	test   %al,0x28(%rdi)
 780:	91                   	xchg   %eax,%ecx
 781:	c6                   	(bad)
 782:	79 02                	jns    786 <.gnu.lto_.decls.bad037c419750572+0x786>
 784:	07                   	(bad)
 785:	f0 0d 8b 28 b1 88    	lock or $0x88b1288b,%eax
 78b:	9e                   	sahf
 78c:	4b 38 82 29 10 83 3f 	rex.WXB cmp %al,0x3f831029(%r10)
 793:	46                   	rex.RX
 794:	45 c0 18 22          	rex.RB rcrb $0x22,(%r8)
 798:	9c                   	pushf
 799:	c0 e3 52             	shl    $0x52,%bl
 79c:	d1 28                	shrl   $1,(%rax)
 79e:	fc                   	cld
 79f:	70 14                	jo     7b5 <.gnu.lto_.decls.bad037c419750572+0x7b5>
 7a1:	0e                   	(bad)
 7a2:	8b e8                	mov    %eax,%ebp
 7a4:	91                   	xchg   %eax,%ecx
 7a5:	88 32                	mov    %dh,(%rdx)
 7a7:	1d 9d a7 10 10       	sbb    $0x1010a79d,%eax
 7ac:	12 6a 6c             	adc    0x6c(%rdx),%ch
 7af:	32 53 30             	xor    0x30(%rbx),%dl
 7b2:	2a d5                	sub    %ch,%dl
 7b4:	38 1a                	cmp    %bl,(%rdx)
 7b6:	8b bb 19 c1 21 d1    	mov    -0x2ede3ee7(%rbx),%edi
 7bc:	14 61                	adc    $0x61,%al
 7be:	1a 59 00             	sbb    0x0(%rcx),%bl
 7c1:	a3 83 17 2c 4c bc f7 	movabs %eax,0x5393f7bc4c2c1783
 7c8:	93 53 
 7ca:	0a d6                	or     %dh,%dl
 7cc:	10 9a c2 3d 16 d1    	adc    %bl,-0x2ee9c23e(%rdx)
 7d2:	1c 90                	sbb    $0x90,%al
 7d4:	91                   	xchg   %eax,%ecx
 7d5:	0c 23                	or     $0x23,%al
 7d7:	0f 42 a0 e0 34 c2 e0 	cmovb  -0x1f3dcb20(%rax),%esp
 7de:	c5 04 2f             	(bad)
 7e1:	4e 20 0c 16          	rex.WRX and %r9b,(%rsi,%r10,1)
 7e5:	40 18 09             	rex sbb %cl,(%rcx)
 7e8:	ec                   	in     (%dx),%al
 7e9:	9a                   	(bad)
 7ea:	8c 86 4a 28 13 0a    	mov    %es,0xa13284a(%rsi)
 7f0:	c2 e0 4b             	ret    $0x4be0
 7f3:	98                   	cwtl
 7f4:	a8 02                	test   $0x2,%al
 7f6:	10 29                	adc    %ch,(%rcx)
 7f8:	1d 93 9a 4e 20       	sbb    $0x204e9a93,%eax
 7fd:	10 2e                	adc    %ch,(%rsi)
 7ff:	80 47 19 01          	addb   $0x1,0x19(%rdi)
 803:	04 8f                	add    $0x8f,%al
 805:	41 a4                	rex.B movsb %ds:(%rsi),%es:(%rdi)
 807:	f3 3c 47             	repz cmp $0x47,%al
 80a:	a0 67 06 a7 39 4c c2 	movabs 0x3c71c24c39a70667,%al
 811:	71 3c 
 813:	95                   	xchg   %eax,%ebp
 814:	8e 49 27             	mov    0x27(%rcx),%cs
 817:	f1                   	int1
 818:	e8 d8 74 9e 41       	call   419e7cf5 <spin_lock.cpp.cc2eb890+0x419e7cf5>
 81d:	46 20 78 20          	rex.RX and %r15b,0x20(%rax)
 821:	c2 69 c0             	ret    $0xc069
 824:	ee                   	out    %al,(%dx)
 825:	08 85 91 7b 52 52    	or     %al,0x52527b91(%rbp)
 82b:	0d a2 23 94 38       	or     $0x389423a2,%eax
 830:	63 88 34 e2 c3 22    	movsxd 0x22c3e234(%rax),%ecx
 836:	6a 03                	push   $0x3
 838:	85 a1 e2 37 b4 61    	test   %esp,0x61b437e2(%rcx)
 83e:	ac                   	lods   %ds:(%rsi),%al
 83f:	f1                   	int1
 840:	23 ea                	and    %edx,%ebp
 842:	35 19 0d 97 82       	xor    $0x82970d19,%eax
 847:	43 e2 50             	rex.XB loop 89a <.gnu.lto_.decls.bad037c419750572+0x89a>
 84a:	c9                   	leave
 84b:	81 13 84 46 18 45    	adcl   $0x45184684,(%rbx)
 851:	34 49                	xor    $0x49,%al
 853:	86 8b 23 14 c6 8a    	xchg   %cl,-0x7539ebdd(%rbx)
 859:	17                   	(bad)
 85a:	46 31 6c 30 1d       	xor    %r13d,0x1d(%rax,%r14,1)
 85f:	8b 41 26             	mov    0x26(%rcx),%eax
 862:	0e                   	(bad)
 863:	18 00                	sbb    %al,(%rax)
 865:	c6                   	(bad)
 866:	10 e1                	adc    %ah,%cl
 868:	54                   	push   %rsp
 869:	c0 84 52 70 48 14 b6 	rolb   $0x28,-0x49ebb790(%rdx,%rdx,2)
 870:	28 
 871:	92                   	xchg   %eax,%edx
 872:	e0 06                	loopne 87a <.gnu.lto_.decls.bad037c419750572+0x87a>
 874:	10 8d c6 23 d3 27    	adc    %cl,0x27d323c6(%rbp)
 87a:	e8 00 20 f0 28       	call   28f0287f <spin_lock.cpp.cc2eb890+0x28f0287f>
 87f:	63 83 23 2a 44 89    	movsxd -0x76bbd5dd(%rbx),%eax
 885:	49 37                	rex.WB (bad)
 887:	86 e7                	xchg   %ah,%bh
 889:	71 b8                	jno    843 <.gnu.lto_.decls.bad037c419750572+0x843>
 88b:	74 22                	je     8af <.gnu.lto_.decls.bad037c419750572+0x8af>
 88d:	15 83 e7 71 69       	adc    $0x6971e783,%eax
 892:	78 3c                	js     8d0 <.gnu.lto_.decls.bad037c419750572+0x8d0>
 894:	69 04 89 33 56 ac b8 	imul   $0xb8ac5633,(%rcx,%rcx,4),%eax
 89b:	c0 27 f4             	shlb   $0xf4,(%rdi)
 89e:	1a 44 c3 a5          	sbb    -0x5b(%rbx,%rax,8),%al
 8a2:	e0 d1                	loopne 875 <.gnu.lto_.decls.bad037c419750572+0x875>
 8a4:	29 44 6d 18          	sub    %eax,0x18(%rbp,%rbp,2)
 8a8:	8f c1                	pop    %rcx
 8aa:	14 c7                	adc    $0xc7,%al
 8ac:	22 3a                	and    (%rdx),%bh
 8ae:	84 34 2c             	test   %dh,(%rsp,%rbp,1)
 8b1:	d2 40 97             	rolb   %cl,-0x69(%rax)
 8b4:	8a 4c 3e 13          	mov    0x13(%rsi,%rdi,1),%cl
 8b8:	76 84                	jbe    83e <.gnu.lto_.decls.bad037c419750572+0x83e>
 8ba:	00 0a                	add    %cl,(%rdx)
 8bc:	28 19                	sub    %bl,(%rcx)
 8be:	8f 41 a5             	pop    -0x5b(%rcx)
 8c1:	61                   	(bad)
 8c2:	92                   	xchg   %eax,%edx
 8c3:	91                   	xchg   %eax,%ecx
 8c4:	f7 1a                	negl   (%rdx)
 8c6:	44 34 d0             	rex.R xor $0xd0,%al
 8c9:	19 45 a3             	sbb    %eax,-0x5d(%rbp)
 8cc:	70 e9                	jo     8b7 <.gnu.lto_.decls.bad037c419750572+0x8b7>
 8ce:	88 1e                	mov    %bl,(%rsi)
 8d0:	fd                   	std
 8d1:	98                   	cwtl
 8d2:	8a 34 54             	mov    (%rsp,%rdx,2),%dh
 8d5:	dc 60 2a             	fsubl  0x2a(%rax)
 8d8:	a2 44 15 c2 24 15 2c 	movabs %al,0x9c5a2c1524c21544
 8df:	5a 9c 
 8e1:	2d 5c dc f8 01       	sub    $0x1f8dc5c,%eax
 8e6:	89 8a 88 58 00 7f    	mov    %ecx,0x7f005888(%rdx)
 8ec:	29 52 08             	sub    %edx,0x8(%rdx)
 8ef:	7f 43                	jg     934 <.gnu.lto_.decls.bad037c419750572+0x934>
 8f1:	24 26                	and    $0x26,%al
 8f3:	a2 b0 88 fe 94 96 98 	movabs %al,0x117e989694fe88b0
 8fa:	7e 11 
 8fc:	20 1d 97 72 67 e0    	and    %bl,-0x1f988d69(%rip)        # ffffffffe0677b99 <spin_lock.cpp.cc2eb890+0xffffffffe0677b99>
 902:	01 17                	add    %edx,(%rdi)
 904:	47 c3                	rex.RXB ret
 906:	22 a1 90 68 c4 5b    	and    0x5bc46890(%rcx),%ah
 90c:	14 a5                	adc    $0xa5,%al
 90e:	48 f1                	rex.W int1
 910:	62                   	(bad)
 911:	e8 83 18 17 f4       	call   fffffffff4172199 <spin_lock.cpp.cc2eb890+0xfffffffff4172199>
 916:	92                   	xchg   %eax,%edx
 917:	92                   	xchg   %eax,%edx
 918:	84 44 27 08          	test   %al,0x8(%rdi,%riz,1)
 91c:	8d                   	lea    (bad),%eax
 91d:	c4                   	(bad)
 91e:	b3 88                	mov    $0x88,%bl
 920:	26 2d fd 8e 50 e2    	es sub $0xe2508efd,%eax
 926:	6f                   	outsl  %ds:(%rsi),(%dx)
 927:	28 54 62 32          	sub    %dl,0x32(%rdx,%riz,2)
 92b:	2e 91                	cs xchg %eax,%ecx
 92d:	50                   	push   %rax
 92e:	1a a2 33 50 24 a3    	sbb    -0x5cdbafcd(%rdx),%ah
 934:	8d                   	lea    (bad),%esi
 935:	f3 3c 57             	repz cmp $0x57,%al
 938:	14 1d                	adc    $0x1d,%al
 93a:	65 28 0d 91 94 8c 27 	sub    %cl,%gs:0x278c9491(%rip)        # 278c9dd2 <spin_lock.cpp.cc2eb890+0x278c9dd2>
 941:	0e                   	(bad)
 942:	25 a3 8d a1 8d       	and    $0x8da18da3,%eax
 947:	22 e0                	and    %al,%ah
 949:	51                   	push   %rcx
 94a:	46 31 78 94          	rex.RX xor %r15d,-0x6c(%rax)
 94e:	21 c2                	and    %eax,%edx
 950:	09 bc 10 55 1a 16 87 	or     %edi,-0x78e9e5ab(%rax,%rdx,1)
 957:	34 ea                	xor    $0xea,%al
 959:	59                   	pop    %rcx
 95a:	b4 50                	mov    $0x50,%ah
 95c:	d1 c2                	rol    $1,%edx
 95e:	c5 8d 5d 8f 39 40 63 	vminpd -0x679cbfc7(%rdi),%ymm14,%ymm1
 965:	98 
 966:	a8 11                	test   $0x11,%al
 968:	a3 da b6 d6 c1 15 89 	movabs %eax,0x2ba18915c1d6b6da
 96f:	a1 2b 
 971:	0d 5a a3 e4 e1       	or     $0xe1e4a35a,%eax
 976:	c7                   	(bad)
 977:	d4                   	(bad)
 978:	d5 8a 65 a1 92 67 47 	{rex2 0x8a} pcmpgtw -0x67b8986e(%rcx),%mm4
 97f:	98 
 980:	5c                   	pop    %rsp
 981:	16                   	(bad)
 982:	d9 1b                	fstps  (%rbx)
 984:	10 1d 8c 06 14 05    	adc    %bl,0x514068c(%rip)        # 5141016 <spin_lock.cpp.cc2eb890+0x5141016>
 98a:	ec                   	in     (%dx),%al
 98b:	ca 48 2e             	lret   $0x2e48
 98e:	c7                   	(bad)
 98f:	9a                   	(bad)
 990:	a9 62 69 43 5c       	test   $0x5c436962,%eax
 995:	60                   	(bad)
 996:	d3 17                	rcll   %cl,(%rdi)
 998:	95                   	xchg   %eax,%ebp
 999:	7b ca                	jnp    965 <.gnu.lto_.decls.bad037c419750572+0x965>
 99b:	29 73 50             	sub    %esi,0x50(%rbx)
 99e:	b9 a8 9c 54 9a       	mov    $0x9a549ca8,%ecx
 9a3:	b8 1f 5c 66 56       	mov    $0x56665c1f,%eax
 9a8:	14 0f                	adc    $0xf,%al
 9aa:	33 9f 95 27 39 6e    	xor    0x6e392795(%rdi),%ebx
 9b0:	b9 a4 17 17 2a       	mov    $0x2a1717a4,%ecx
 9b5:	1f                   	(bad)
 9b6:	1d 70 aa cf d4       	sbb    $0xd4cfaa70,%eax
 9bb:	5b                   	pop    %rbx
 9bc:	ce                   	(bad)
 9bd:	89 e1                	mov    %esp,%ecx
 9bf:	7a c8                	jp     989 <.gnu.lto_.decls.bad037c419750572+0x989>
 9c1:	21 bf ec a0 85 b5    	and    %edi,-0x4a7a5f14(%rdi)
 9c7:	01 9c 1b 35 1f 6a 98 	add    %ebx,-0x6795e0cb(%rbx,%rbx,1)
 9ce:	b2 e7                	mov    $0xe7,%dl
 9d0:	2d ee b9 f6 79       	sub    $0x79f6b9ee,%eax
 9d5:	1d 91 81 0c 9b       	sbb    $0x9b0c8191,%eax
 9da:	bc a7 a7 56 7b       	mov    $0x7b56a7a7,%esp
 9df:	5d                   	pop    %rbp
 9e0:	d5 d7 73             	(bad)
 9e3:	58                   	pop    %rax
 9e4:	0f e3 61 37          	pavgw  0x37(%rcx),%mm4
 9e8:	ce                   	(bad)
 9e9:	13 81 86 a8 91 28    	adc    0x2891a886(%rcx),%eax
 9ef:	66 9c                	pushfw
 9f1:	34 23                	xor    $0x23,%al
 9f3:	23 23                	and    (%rbx),%esp
 9f5:	22 32                	and    (%rdx),%dh
 9f7:	93                   	xchg   %eax,%ebx
 9f8:	24 e9                	and    $0xe9,%al
 9fa:	01 05 84 20 28 29    	add    %eax,0x29282084(%rip)        # 29282a84 <spin_lock.cpp.cc2eb890+0x29282a84>
 a00:	3c 0f                	cmp    $0xf,%al
 a02:	12 00                	adc    (%rax),%al
 a04:	55                   	push   %rbp
 a05:	39 8e 19 a6 94 91    	cmp    %ecx,-0x6e6b59e7(%rsi)
 a0b:	21 11                	and    %edx,(%rcx)
 a0d:	11 69 92             	adc    %ebp,-0x6e(%rcx)
 a10:	14 da                	adc    $0xda,%al
 a12:	33 6c 11 9b          	xor    -0x65(%rcx,%rdx,1),%ebp
 a16:	54                   	push   %rsp
 a17:	b7 5c                	mov    $0x5c,%bh
 a19:	f5                   	cmc
 a1a:	fc                   	cld
 a1b:	91                   	xchg   %eax,%ecx
 a1c:	ed                   	in     (%dx),%eax
 a1d:	78 41                	js     a60 <.gnu.lto_.decls.bad037c419750572+0xa60>
 a1f:	2e b3 17             	cs mov $0x17,%bl
 a22:	74 f2                	je     a16 <.gnu.lto_.decls.bad037c419750572+0xa16>
 a24:	cb                   	lret
 a25:	53                   	push   %rbx
 a26:	77 5f                	ja     a87 <.gnu.lto_.decls.bad037c419750572+0xa87>
 a28:	71 74                	jno    a9e <.gnu.lto_.decls.bad037c419750572+0xa9e>
 a2a:	b6 93                	mov    $0x93,%dh
 a2c:	b3 92                	mov    $0x92,%bl
 a2e:	5b                   	pop    %rbx
 a2f:	a9 77 40 8c ef       	test   $0xef8c4077,%eax
 a34:	10 14 ae             	adc    %dl,(%rsi,%rbp,4)
 a37:	06                   	(bad)
 a38:	dd 6a 49             	(bad) 0x49(%rdx)
 a3b:	89 e7                	mov    %esp,%edi
 a3d:	0b a6 d8 51 39 fc    	or     -0x3c6ae28(%rsi),%esp
 a43:	38 56 89             	cmp    %dl,-0x77(%rsi)
 a46:	c4                   	(bad)
 a47:	2d f8 8f 76 ed       	sub    $0xed768ff8,%eax
 a4c:	6a f1                	push   $0xfffffffffffffff1
 a4e:	ab                   	stos   %eax,%es:(%rdi)
 a4f:	82                   	(bad)
 a50:	bb 19 3d 69 4b       	mov    $0x4b693d19,%ebx
 a55:	10 6b 15             	adc    %ch,0x15(%rbx)
 a58:	4c 61                	rex.WR (bad)
 a5a:	9c                   	pushf
 a5b:	11 b0 69 0a 9d b9    	adc    %esi,-0x4662f597(%rax)
 a61:	77 0a                	ja     a6d <.gnu.lto_.decls.bad037c419750572+0xa6d>
 a63:	00 ed                	add    %ch,%ch
 a65:	98                   	cwtl
 a66:	98                   	cwtl
 a67:	b1 22                	mov    $0x22,%cl
 a69:	71 8d                	jno    9f8 <.gnu.lto_.decls.bad037c419750572+0x9f8>
 a6b:	10 03                	adc    %al,(%rbx)
 a6d:	05 da 0e 7e 1b       	add    $0x1b7e0eda,%eax
 a72:	43 d1 c8             	rex.XB ror $1,%r8d
 a75:	07                   	(bad)
 a76:	47 01 e8             	rex.RXB add %r13d,%r8d
 a79:	9e                   	sahf
 a7a:	d8 e0                	fsub   %st(0),%st
 a7c:	e2 64                	loop   ae2 <.gnu.lto_.decls.bad037c419750572+0xae2>
 a7e:	03 b8 2b 41 76 ce    	add    -0x3189bed5(%rax),%edi
 a84:	62 73 b7 6e ac       	(bad)
 a89:	eb 8b                	jmp    a16 <.gnu.lto_.decls.bad037c419750572+0xa16>
 a8b:	14 fb                	adc    $0xfb,%al
 a8d:	b1 c1                	mov    $0xc1,%cl
 a8f:	ae                   	scas   %es:(%rdi),%al
 a90:	ac                   	lods   %ds:(%rsi),%al
 a91:	93                   	xchg   %eax,%ebx
 a92:	9d                   	popf
 a93:	d6                   	(bad)
 a94:	af                   	scas   %es:(%rdi),%eax
 a95:	64 86 12             	xchg   %dl,%fs:(%rdx)
 a98:	5f                   	pop    %rdi
 a99:	33 51 a3             	xor    -0x5d(%rcx),%edx
 a9c:	7b 29                	jnp    ac7 <.gnu.lto_.decls.bad037c419750572+0xac7>
 a9e:	38 b6 ff 97 0a e6    	cmp    %dh,-0x19f56801(%rsi)
 aa4:	14 d0                	adc    $0xd0,%al
 aa6:	3f                   	(bad)
 aa7:	92                   	xchg   %eax,%edx
 aa8:	52                   	push   %rdx
 aa9:	cd b6                	int    $0xb6
 aab:	7e d7                	jle    a84 <.gnu.lto_.decls.bad037c419750572+0xa84>
 aad:	76 40                	jbe    aef <.gnu.lto_.decls.bad037c419750572+0xaef>
 aaf:	26 9e                	es sahf
 ab1:	64 60                	fs (bad)
 ab3:	e1 fc                	loope  ab1 <.gnu.lto_.decls.bad037c419750572+0xab1>
 ab5:	78 e9                	js     aa0 <.gnu.lto_.decls.bad037c419750572+0xaa0>
 ab7:	ad                   	lods   %ds:(%rsi),%eax
 ab8:	89 8d 55 bf d6 af    	mov    %ecx,-0x502940ab(%rbp)
 abe:	8f                   	(bad)
 abf:	2e bd 1a 54 59 fb    	cs mov $0xfb59541a,%ebp
 ac5:	58                   	pop    %rax
 ac6:	ba 51 54 22 72       	mov    $0x72225451,%edx
 acb:	06                   	(bad)
 acc:	1c f5                	sbb    $0xf5,%al
 ace:	01 21                	add    %esp,(%rcx)
 ad0:	c1 bb 01 00 c3 89 60 	sarl   $0x60,-0x763cffff(%rbx)
 ad7:	de 08                	fimuls (%rax)
 ad9:	28 cc                	sub    %cl,%ah
 adb:	9f                   	lahf
 adc:	66 02 84 4a 39 ca a7 	data16 add -0x315835c7(%rdx,%rcx,2),%al
 ae3:	ce 
 ae4:	01 ca                	add    %ecx,%edx
 ae6:	01 cd                	add    %ecx,%ebp
 ae8:	9d                   	popf
 ae9:	0b 02                	or     (%rdx),%eax
 aeb:	56                   	push   %rsi
 aec:	0f 62 ee             	punpckldq %mm6,%mm5
 aef:	43                   	rex.XB
 af0:	f2 d0 49 da          	repnz rorb $1,-0x26(%rcx)
 af4:	02 89 5a 4d 92 92    	add    -0x6d6db2a6(%rcx),%cl
 afa:	b5 50                	mov    $0x50,%ch
 afc:	8a c5                	mov    %ch,%al
 afe:	a9 55 e7 2e ce       	test   $0xce2ee755,%eax
 b03:	63 8f a8 ec 6e 98    	movsxd -0x67911358(%rdi),%ecx
 b09:	3c ce                	cmp    $0xce,%al
 b0b:	48 11 3d 78 b2 f1 a2 	adc    %rdi,-0x5d0e4d88(%rip)        # ffffffffa2f1bd8a <spin_lock.cpp.cc2eb890+0xffffffffa2f1bd8a>
 b12:	86 6b 6c             	xchg   %ch,0x6c(%rbx)
 b15:	f4                   	hlt
 b16:	1e                   	(bad)
 b17:	07                   	(bad)
 b18:	e5 30                	in     $0x30,%eax
 b1a:	40 04 30             	rex add $0x30,%al
 b1d:	b7 a2                	mov    $0xa2,%bh
 b1f:	8a 98 d3 60 4d f7    	mov    -0x8b29f2d(%rax),%bl
 b25:	59                   	pop    %rcx
 b26:	eb 86                	jmp    aae <.gnu.lto_.decls.bad037c419750572+0xaae>
 b28:	8a f4                	mov    %ah,%dh
 b2a:	4d                   	rex.WRB
 b2b:	26 7d f3             	es jge b21 <.gnu.lto_.decls.bad037c419750572+0xb21>
 b2e:	29 7b fe             	sub    %edi,-0x2(%rbx)
 b31:	0c 15                	or     $0x15,%al
 b33:	34 69                	xor    $0x69,%al
 b35:	6e                   	outsb  %ds:(%rsi),(%dx)
 b36:	0b d8                	or     %eax,%ebx
 b38:	18 2c ff             	sbb    %ch,(%rdi,%rdi,8)
 b3b:	f2 e9 4a 40 0a 66    	bnd jmp 660a4b8b <spin_lock.cpp.cc2eb890+0x660a4b8b>
 b41:	d0 2f                	shrb   $1,(%rdi)
 b43:	d2 35 8d 71 19 80    	shlb   %cl,-0x7fe68e73(%rip)        # ffffffff80197cd6 <spin_lock.cpp.cc2eb890+0xffffffff80197cd6>
 b49:	c5 cd eb 3c 1e       	vpor   (%rsi,%rbx,1),%ymm6,%ymm7
 b4e:	14 86                	adc    $0x86,%al
 b50:	74 0d                	je     b5f <.gnu.lto_.decls.bad037c419750572+0xb5f>
 b52:	8c 56 4c             	mov    %ss,0x4c(%rsi)
 b55:	0f d9 95 0c eb 9a 4c 	psubusw 0x4c9aeb0c(%rbp),%mm2
 b5c:	53                   	push   %rbx
 b5d:	94                   	xchg   %eax,%esp
 b5e:	b8 44 78 50 61       	mov    $0x61507844,%eax
 b63:	00 c1                	add    %al,%cl
 b65:	06                   	(bad)
 b66:	76 06                	jbe    b6e <.gnu.lto_.decls.bad037c419750572+0xb6e>
 b68:	b8 5a 5e 83 23       	mov    $0x23835e5a,%eax
 b6d:	26 bc 24 e2 3f 2f    	es mov $0x2f3fe224,%esp
 b73:	3b 24 b8             	cmp    (%rax,%rdi,4),%esp
 b76:	f2 f9                	repnz stc
 b78:	7a ff                	jp     b79 <.gnu.lto_.decls.bad037c419750572+0xb79>
 b7a:	58                   	pop    %rax
 b7b:	0e                   	(bad)
 b7c:	eb 21                	jmp    b9f <.gnu.lto_.decls.bad037c419750572+0xb9f>
 b7e:	2c 15                	sub    $0x15,%al
 b80:	aa                   	stos   %al,%es:(%rdi)
 b81:	21 10                	and    %edx,(%rax)
 b83:	f8                   	clc
 b84:	d5 2f 04 39          	{rex2 0x2f} add $0x39,%al
 b88:	b5 7b                	mov    $0x7b,%ch
 b8a:	7d 57                	jge    be3 <.gnu.lto_.decls.bad037c419750572+0xbe3>
 b8c:	95                   	xchg   %eax,%ebp
 b8d:	bd c6 86 1c 23       	mov    $0x231c86c6,%ebp
 b92:	3a 57 a0             	cmp    -0x60(%rdi),%dl
 b95:	42 5e                	rex.X pop %rsi
 b97:	23 90 23 d9 e0 33    	and    0x33e0d923(%rax),%edx
 b9d:	98                   	cwtl
 b9e:	4c fe 06             	rex.WR incb (%rsi)
 ba1:	f9                   	stc
 ba2:	d8 3b                	fdivrs (%rbx)
 ba4:	ac                   	lods   %ds:(%rsi),%al
 ba5:	a3 e2 be 66 cc d9 77 	movabs %eax,0x4e8477d9cc66bee2
 bac:	84 4e 
 bae:	4f                   	rex.WRXB
 baf:	d5 b0 8e             	(bad)
 bb2:	38 4e 38             	cmp    %cl,0x38(%rsi)
 bb5:	b0 0a                	mov    $0xa,%al
 bb7:	61                   	(bad)
 bb8:	c6                   	(bad)
 bb9:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 bba:	5e                   	pop    %rsi
 bbb:	4c d1 65 0c          	rex.WR shlq $1,0xc(%rbp)
 bbf:	9b                   	fwait
 bc0:	3f                   	(bad)
 bc1:	3b d9                	cmp    %ecx,%ebx
 bc3:	64 5a                	fs pop %rdx
 bc5:	c1 87 98 87 9e 99 34 	roll   $0x34,-0x66617868(%rdi)
 bcc:	3f                   	(bad)
 bcd:	fa                   	cli
 bce:	2e d1 dd             	cs rcr $1,%ebp
 bd1:	0c e5                	or     $0xe5,%al
 bd3:	91                   	xchg   %eax,%ecx
 bd4:	bf 78 ce 6d 43       	mov    $0x436dce78,%edi
 bd9:	87 a6 7e be f6 62    	xchg   %esp,0x62f6be7e(%rsi)
 bdf:	51                   	push   %rcx
 be0:	21 61 38             	and    %esp,0x38(%rcx)
 be3:	d0 78 1c             	sarb   $1,0x1c(%rax)
 be6:	2c 4c                	sub    $0x4c,%al
 be8:	e3 7a                	jrcxz  c64 <.gnu.lto_.decls.bad037c419750572+0xc64>
 bea:	7f a8                	jg     b94 <.gnu.lto_.decls.bad037c419750572+0xb94>
 bec:	08 33                	or     %dh,(%rbx)
 bee:	28 f0                	sub    %dh,%al
 bf0:	c0 28 f7             	shrb   $0xf7,(%rax)
 bf3:	e0 66                	loopne c5b <.gnu.lto_.decls.bad037c419750572+0xc5b>
 bf5:	8d 35 87 4b 03 e9    	lea    -0x16fcb479(%rip),%esi        # ffffffffe9035782 <spin_lock.cpp.cc2eb890+0xffffffffe9035782>
 bfb:	10 62 71             	adc    %ah,0x71(%rdx)
 bfe:	f7 5c ad 91          	negl   -0x6f(%rbp,%rbp,4)
 c02:	f2 65 cc             	repnz gs int3
 c05:	f5                   	cmc
 c06:	50                   	push   %rax
 c07:	32 7a 67             	xor    0x67(%rdx),%bh
 c0a:	11 03                	adc    %eax,(%rbx)
 c0c:	55                   	push   %rbp
 c0d:	e2 ed                	loop   bfc <.gnu.lto_.decls.bad037c419750572+0xbfc>
 c0f:	f0 db 55 ef          	lock fistl -0x11(%rbp)
 c13:	49 20 11             	rex.WB and %dl,(%r9)
 c16:	d1 30                	shll   $1,(%rax)
 c18:	a2 14 c5 d4 20 d2 02 	movabs %al,0x250702d220d4c514
 c1f:	07 25 
 c21:	b4 28                	mov    $0x28,%ah
 c23:	e5 79                	in     $0x79,%eax
 c25:	7c 03                	jl     c2a <.gnu.lto_.decls.bad037c419750572+0xc2a>
 c27:	24 ef                	and    $0xef,%al
 c29:	46 c8 10 b2 bf       	rex.RX enter $0xb210,$0xbf
 c2e:	32 b4 5a d1 73 ac 12 	xor    0x12ac73d1(%rdx,%rbx,2),%dh
 c35:	cf                   	iret
 c36:	1d 0e e6 00 08       	sbb    $0x800e60e,%eax
 c3b:	89 ba c0 73 c2 6f    	mov    %edi,0x6fc273c0(%rdx)
 c41:	fb                   	sti
 c42:	32 18                	xor    (%rax),%bl
 c44:	62 62 63 bc 95       	(bad)
 c49:	0e                   	(bad)
 c4a:	2d 81 a9 5e ce       	sub    $0xce5ea981,%eax
 c4f:	f2 4d ab             	repnz rex.WRB stos %rax,%es:(%rdi)
 c52:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 c53:	0f 16 f9             	movlhps %xmm1,%xmm7
 c56:	db 1e                	fistpl (%rsi)
 c58:	56                   	push   %rsi
 c59:	3e e6 48             	ds out %al,$0x48
 c5c:	a8 b6                	test   $0xb6,%al
 c5e:	76 a9                	jbe    c09 <.gnu.lto_.decls.bad037c419750572+0xc09>
 c60:	1a 9b d6 37 2b 9d    	sbb    -0x62d4c82a(%rbx),%bl
 c66:	e3 ca                	jrcxz  c32 <.gnu.lto_.decls.bad037c419750572+0xc32>
 c68:	7f 61                	jg     ccb <.gnu.lto_.decls.bad037c419750572+0xccb>
 c6a:	96                   	xchg   %eax,%esi
 c6b:	6c                   	insb   (%dx),%es:(%rdi)
 c6c:	b1 9c                	mov    $0x9c,%cl
 c6e:	c0 3d 56 00 a8 71 a3 	sarb   $0xa3,0x71a80056(%rip)        # 71a80ccb <spin_lock.cpp.cc2eb890+0x71a80ccb>
 c75:	19 1f                	sbb    %ebx,(%rdi)
 c77:	30 e6                	xor    %ah,%dh
 c79:	43 58                	rex.XB pop %r8
 c7b:	f4                   	hlt
 c7c:	86 81 f5 75 be f7    	xchg   %al,-0x8418a0b(%rcx)
 c82:	12 56 4d             	adc    0x4d(%rsi),%dl
 c85:	44                   	rex.R
 c86:	43 0c c5             	rex.XB or $0xc5,%al
 c89:	b0 72                	mov    $0x72,%al
 c8b:	20 a4 b6 9e 04 36 f0 	and    %ah,-0xfc9fb62(%rsi,%rsi,4)
 c92:	00 89 40 6b 83 90    	add    %cl,-0x6f7c94c0(%rcx)
 c98:	9f                   	lahf
 c99:	f5                   	cmc
 c9a:	63 fe                	movsxd %esi,%edi
 c9c:	8b 4d 14             	mov    0x14(%rbp),%ecx
 c9f:	7c ee                	jl     c8f <.gnu.lto_.decls.bad037c419750572+0xc8f>
 ca1:	bd e9 05 97 a4       	mov    $0xa49705e9,%ebp
 ca6:	01 9a 67 f0 c5 93    	add    %ebx,-0x6c3a0f99(%rdx)
 cac:	8c c2                	mov    %es,%edx
 cae:	9d                   	popf
 caf:	0b ca                	or     %edx,%ecx
 cb1:	dc 05 c8 4f 40 c0    	faddl  -0x3fbfb038(%rip)        # ffffffffc0405c7f <spin_lock.cpp.cc2eb890+0xffffffffc0405c7f>
 cb7:	9b                   	fwait
 cb8:	73 a0                	jae    c5a <.gnu.lto_.decls.bad037c419750572+0xc5a>
 cba:	d5 80 f2 05 a1 48 82 	{rex2 0x80} pslld -0x717db75f(%rip),%mm0        # ffffffff8e825563 <spin_lock.cpp.cc2eb890+0xffffffff8e825563>
 cc1:	8e 
 cc2:	42                   	rex.X
 cc3:	4f 80 ad 3b 9a ca a9 	rex.WRXB subb $0x7f,-0x563565c5(%r13)
 cca:	7f 
 ccb:	80 9a 52 77 18 1f d4 	sbbb   $0xd4,0x1f187752(%rdx)
 cd2:	a8 bd                	test   $0xbd,%al
 cd4:	9b                   	fwait
 cd5:	44 10 77 f1          	adc    %r14b,-0xf(%rdi)
 cd9:	38 b4 13 9e eb 2c f4 	cmp    %dh,-0xbd31462(%rbx,%rdx,1)
 ce0:	87 a1 d1 cf 20 99    	xchg   %esp,-0x66df302f(%rcx)
 ce6:	91                   	xchg   %eax,%ecx
 ce7:	15 48 43 74 4f       	adc    $0x4f744348,%eax
 cec:	7a eb                	jp     cd9 <.gnu.lto_.decls.bad037c419750572+0xcd9>
 cee:	83 93 7a 6d 23 08 5f 	adcl   $0x5f,0x8236d7a(%rbx)
 cf5:	f4                   	hlt
 cf6:	fe                   	(bad)
 cf7:	d3 21                	shll   %cl,(%rcx)
 cf9:	a1 fa 7e 0a 09 2a 6d 	movabs 0x9ee56d2a090a7efa,%eax
 d00:	e5 9e 
 d02:	70 f4                	jo     cf8 <.gnu.lto_.decls.bad037c419750572+0xcf8>
 d04:	2e 78 18             	js,pn  d1f <.gnu.lto_.decls.bad037c419750572+0xd1f>
 d07:	2e 07                	cs (bad)
 d09:	f8                   	clc
 d0a:	f0 2f                	lock (bad)
 d0c:	93                   	xchg   %eax,%ebx
 d0d:	61                   	(bad)
 d0e:	42 db ff             	rex.X (bad)
 d11:	6d                   	insl   (%dx),%es:(%rdi)
 d12:	ce                   	(bad)
 d13:	e3 9b                	jrcxz  cb0 <.gnu.lto_.decls.bad037c419750572+0xcb0>
 d15:	97                   	xchg   %eax,%edi
 d16:	25 49 bf 6a 4e       	and    $0x4e6abf49,%eax
 d1b:	1c 70                	sbb    $0x70,%al
 d1d:	e0 3f                	loopne d5e <spin_lock.cpp.cc2eb890+0xd5e>
 d1f:	09 3c aa             	or     %edi,(%rdx,%rbp,4)
 d22:	7d a8                	jge    ccc <.gnu.lto_.decls.bad037c419750572+0xccc>
 d24:	35 48 c2 81 25       	xor    $0x2581c248,%eax
 d29:	33 4a 74             	xor    0x74(%rdx),%ecx
 d2c:	48 e6 72             	rex.W out %al,$0x72
 d2f:	9e                   	sahf
 d30:	cd 8d                	int    $0x8d
 d32:	7a 55                	jp     d89 <spin_lock.cpp.cc2eb890+0xd89>

Disassembly of section .gnu.lto_.symtab.bad037c419750572:

0000000000000000 <.gnu.lto_.symtab.bad037c419750572>:
   0:	5f                   	pop    %rdi
   1:	5a                   	pop    %rdx
   2:	53                   	push   %rbx
   3:	74 61                	je     66 <.gnu.lto_.symtab.bad037c419750572+0x66>
   5:	6e                   	outsb  %ds:(%rsi),(%dx)
   6:	53                   	push   %rbx
   7:	74 31                	je     3a <.gnu.lto_.symtab.bad037c419750572+0x3a>
   9:	32 6d 65             	xor    0x65(%rbp),%ch
   c:	6d                   	insl   (%dx),%es:(%rdi)
   d:	6f                   	outsl  %ds:(%rsi),(%dx)
   e:	72 79                	jb     89 <.gnu.lto_.symtab.bad037c419750572+0x89>
  10:	5f                   	pop    %rdi
  11:	6f                   	outsl  %ds:(%rsi),(%dx)
  12:	72 64                	jb     78 <.gnu.lto_.symtab.bad037c419750572+0x78>
  14:	65 72 53             	gs jb  6a <.gnu.lto_.symtab.bad037c419750572+0x6a>
  17:	74 32                	je     4b <.gnu.lto_.symtab.bad037c419750572+0x4b>
  19:	33 5f 5f             	xor    0x5f(%rdi),%ebx
  1c:	6d                   	insl   (%dx),%es:(%rdi)
  1d:	65 6d                	gs insl (%dx),%es:(%rdi)
  1f:	6f                   	outsl  %ds:(%rsi),(%dx)
  20:	72 79                	jb     9b <.gnu.lto_.symtab.bad037c419750572+0x9b>
  22:	5f                   	pop    %rdi
  23:	6f                   	outsl  %ds:(%rsi),(%dx)
  24:	72 64                	jb     8a <.gnu.lto_.symtab.bad037c419750572+0x8a>
  26:	65 72 5f             	gs jb  88 <.gnu.lto_.symtab.bad037c419750572+0x88>
  29:	6d                   	insl   (%dx),%es:(%rdi)
  2a:	6f                   	outsl  %ds:(%rsi),(%dx)
  2b:	64 69 66 69 65 72 00 	imul   $0x5f007265,%fs:0x69(%rsi),%esp
  32:	5f 
  33:	5a                   	pop    %rdx
  34:	53                   	push   %rbx
  35:	74 61                	je     98 <.gnu.lto_.symtab.bad037c419750572+0x98>
  37:	6e                   	outsb  %ds:(%rsi),(%dx)
  38:	53                   	push   %rbx
  39:	74 31                	je     6c <.gnu.lto_.symtab.bad037c419750572+0x6c>
  3b:	32 6d 65             	xor    0x65(%rbp),%ch
  3e:	6d                   	insl   (%dx),%es:(%rdi)
  3f:	6f                   	outsl  %ds:(%rsi),(%dx)
  40:	72 79                	jb     bb <.gnu.lto_.symtab.bad037c419750572+0xbb>
  42:	5f                   	pop    %rdi
  43:	6f                   	outsl  %ds:(%rsi),(%dx)
  44:	72 64                	jb     aa <.gnu.lto_.symtab.bad037c419750572+0xaa>
  46:	65 72 53             	gs jb  9c <.gnu.lto_.symtab.bad037c419750572+0x9c>
  49:	74 32                	je     7d <.gnu.lto_.symtab.bad037c419750572+0x7d>
  4b:	33 5f 5f             	xor    0x5f(%rdi),%ebx
  4e:	6d                   	insl   (%dx),%es:(%rdi)
  4f:	65 6d                	gs insl (%dx),%es:(%rdi)
  51:	6f                   	outsl  %ds:(%rsi),(%dx)
  52:	72 79                	jb     cd <.gnu.lto_.symtab.bad037c419750572+0xcd>
  54:	5f                   	pop    %rdi
  55:	6f                   	outsl  %ds:(%rsi),(%dx)
  56:	72 64                	jb     bc <.gnu.lto_.symtab.bad037c419750572+0xbc>
  58:	65 72 5f             	gs jb  ba <.gnu.lto_.symtab.bad037c419750572+0xba>
  5b:	6d                   	insl   (%dx),%es:(%rdi)
  5c:	6f                   	outsl  %ds:(%rsi),(%dx)
  5d:	64 69 66 69 65 72 00 	imul   $0x1007265,%fs:0x69(%rsi),%esp
  64:	01 
	...
  6d:	00 dc                	add    %bl,%ah
  6f:	00 00                	add    %al,(%rax)
  71:	00 5f 5a             	add    %bl,0x5a(%rdi)
  74:	53                   	push   %rbx
  75:	74 33                	je     aa <.gnu.lto_.symtab.bad037c419750572+0xaa>
  77:	33 61 74             	xor    0x74(%rcx),%esp
  7a:	6f                   	outsl  %ds:(%rsi),(%dx)
  7b:	6d                   	insl   (%dx),%es:(%rdi)
  7c:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
  83:	5f                   	pop    %rdi
  84:	74 65                	je     eb <.gnu.lto_.symtab.bad037c419750572+0xeb>
  86:	73 74                	jae    fc <.gnu.lto_.symtab.bad037c419750572+0xfc>
  88:	5f                   	pop    %rdi
  89:	61                   	(bad)
  8a:	6e                   	outsb  %ds:(%rsi),(%dx)
  8b:	64 5f                	fs pop %rdi
  8d:	73 65                	jae    f4 <.gnu.lto_.symtab.bad037c419750572+0xf4>
  8f:	74 5f                	je     f0 <.gnu.lto_.symtab.bad037c419750572+0xf0>
  91:	65 78 70             	gs js  104 <.gnu.lto_.symtab.bad037c419750572+0x104>
  94:	6c                   	insb   (%dx),%es:(%rdi)
  95:	69 63 69 74 50 53 74 	imul   $0x74535074,0x69(%rbx),%esp
  9c:	31 31                	xor    %esi,(%rcx)
  9e:	61                   	(bad)
  9f:	74 6f                	je     110 <.gnu.lto_.symtab.bad037c419750572+0x110>
  a1:	6d                   	insl   (%dx),%es:(%rdi)
  a2:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
  a9:	53                   	push   %rbx
  aa:	74 31                	je     dd <.gnu.lto_.symtab.bad037c419750572+0xdd>
  ac:	32 6d 65             	xor    0x65(%rbp),%ch
  af:	6d                   	insl   (%dx),%es:(%rdi)
  b0:	6f                   	outsl  %ds:(%rsi),(%dx)
  b1:	72 79                	jb     12c <.gnu.lto_.symtab.bad037c419750572+0x12c>
  b3:	5f                   	pop    %rdi
  b4:	6f                   	outsl  %ds:(%rsi),(%dx)
  b5:	72 64                	jb     11b <.gnu.lto_.symtab.bad037c419750572+0x11b>
  b7:	65 72 00             	gs jb  ba <.gnu.lto_.symtab.bad037c419750572+0xba>
  ba:	5f                   	pop    %rdi
  bb:	5a                   	pop    %rdx
  bc:	53                   	push   %rbx
  bd:	74 33                	je     f2 <.gnu.lto_.symtab.bad037c419750572+0xf2>
  bf:	33 61 74             	xor    0x74(%rcx),%esp
  c2:	6f                   	outsl  %ds:(%rsi),(%dx)
  c3:	6d                   	insl   (%dx),%es:(%rdi)
  c4:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
  cb:	5f                   	pop    %rdi
  cc:	74 65                	je     133 <.gnu.lto_.symtab.bad037c419750572+0x133>
  ce:	73 74                	jae    144 <.gnu.lto_.symtab.bad037c419750572+0x144>
  d0:	5f                   	pop    %rdi
  d1:	61                   	(bad)
  d2:	6e                   	outsb  %ds:(%rsi),(%dx)
  d3:	64 5f                	fs pop %rdi
  d5:	73 65                	jae    13c <.gnu.lto_.symtab.bad037c419750572+0x13c>
  d7:	74 5f                	je     138 <.gnu.lto_.symtab.bad037c419750572+0x138>
  d9:	65 78 70             	gs js  14c <.gnu.lto_.symtab.bad037c419750572+0x14c>
  dc:	6c                   	insb   (%dx),%es:(%rdi)
  dd:	69 63 69 74 50 53 74 	imul   $0x74535074,0x69(%rbx),%esp
  e4:	31 31                	xor    %esi,(%rcx)
  e6:	61                   	(bad)
  e7:	74 6f                	je     158 <.gnu.lto_.symtab.bad037c419750572+0x158>
  e9:	6d                   	insl   (%dx),%es:(%rdi)
  ea:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
  f1:	53                   	push   %rbx
  f2:	74 31                	je     125 <.gnu.lto_.symtab.bad037c419750572+0x125>
  f4:	32 6d 65             	xor    0x65(%rbp),%ch
  f7:	6d                   	insl   (%dx),%es:(%rdi)
  f8:	6f                   	outsl  %ds:(%rsi),(%dx)
  f9:	72 79                	jb     174 <.gnu.lto_.symtab.bad037c419750572+0x174>
  fb:	5f                   	pop    %rdi
  fc:	6f                   	outsl  %ds:(%rsi),(%dx)
  fd:	72 64                	jb     163 <.gnu.lto_.symtab.bad037c419750572+0x163>
  ff:	65 72 00             	gs jb  102 <.gnu.lto_.symtab.bad037c419750572+0x102>
 102:	01 00                	add    %eax,(%rax)
	...
 10c:	ee                   	out    %al,(%dx)
 10d:	00 00                	add    %al,(%rax)
 10f:	00 5f 5a             	add    %bl,0x5a(%rdi)
 112:	53                   	push   %rbx
 113:	74 32                	je     147 <.gnu.lto_.symtab.bad037c419750572+0x147>
 115:	36 61                	ss (bad)
 117:	74 6f                	je     188 <.gnu.lto_.symtab.bad037c419750572+0x188>
 119:	6d                   	insl   (%dx),%es:(%rdi)
 11a:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 121:	5f                   	pop    %rdi
 122:	63 6c 65 61          	movsxd 0x61(%rbp,%riz,2),%ebp
 126:	72 5f                	jb     187 <.gnu.lto_.symtab.bad037c419750572+0x187>
 128:	65 78 70             	gs js  19b <.gnu.lto_.symtab.bad037c419750572+0x19b>
 12b:	6c                   	insb   (%dx),%es:(%rdi)
 12c:	69 63 69 74 50 53 74 	imul   $0x74535074,0x69(%rbx),%esp
 133:	31 31                	xor    %esi,(%rcx)
 135:	61                   	(bad)
 136:	74 6f                	je     1a7 <.gnu.lto_.symtab.bad037c419750572+0x1a7>
 138:	6d                   	insl   (%dx),%es:(%rdi)
 139:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 140:	53                   	push   %rbx
 141:	74 31                	je     174 <.gnu.lto_.symtab.bad037c419750572+0x174>
 143:	32 6d 65             	xor    0x65(%rbp),%ch
 146:	6d                   	insl   (%dx),%es:(%rdi)
 147:	6f                   	outsl  %ds:(%rsi),(%dx)
 148:	72 79                	jb     1c3 <.gnu.lto_.symtab.bad037c419750572+0x1c3>
 14a:	5f                   	pop    %rdi
 14b:	6f                   	outsl  %ds:(%rsi),(%dx)
 14c:	72 64                	jb     1b2 <.gnu.lto_.symtab.bad037c419750572+0x1b2>
 14e:	65 72 00             	gs jb  151 <.gnu.lto_.symtab.bad037c419750572+0x151>
 151:	5f                   	pop    %rdi
 152:	5a                   	pop    %rdx
 153:	53                   	push   %rbx
 154:	74 32                	je     188 <.gnu.lto_.symtab.bad037c419750572+0x188>
 156:	36 61                	ss (bad)
 158:	74 6f                	je     1c9 <.gnu.lto_.symtab.bad037c419750572+0x1c9>
 15a:	6d                   	insl   (%dx),%es:(%rdi)
 15b:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 162:	5f                   	pop    %rdi
 163:	63 6c 65 61          	movsxd 0x61(%rbp,%riz,2),%ebp
 167:	72 5f                	jb     1c8 <.gnu.lto_.symtab.bad037c419750572+0x1c8>
 169:	65 78 70             	gs js  1dc <.gnu.lto_.symtab.bad037c419750572+0x1dc>
 16c:	6c                   	insb   (%dx),%es:(%rdi)
 16d:	69 63 69 74 50 53 74 	imul   $0x74535074,0x69(%rbx),%esp
 174:	31 31                	xor    %esi,(%rcx)
 176:	61                   	(bad)
 177:	74 6f                	je     1e8 <.gnu.lto_.symtab.bad037c419750572+0x1e8>
 179:	6d                   	insl   (%dx),%es:(%rdi)
 17a:	69 63 5f 66 6c 61 67 	imul   $0x67616c66,0x5f(%rbx),%esp
 181:	53                   	push   %rbx
 182:	74 31                	je     1b5 <.gnu.lto_.symtab.bad037c419750572+0x1b5>
 184:	32 6d 65             	xor    0x65(%rbp),%ch
 187:	6d                   	insl   (%dx),%es:(%rdi)
 188:	6f                   	outsl  %ds:(%rsi),(%dx)
 189:	72 79                	jb     204 <.gnu.lto_.symtab.bad037c419750572+0x204>
 18b:	5f                   	pop    %rdi
 18c:	6f                   	outsl  %ds:(%rsi),(%dx)
 18d:	72 64                	jb     1f3 <.gnu.lto_.symtab.bad037c419750572+0x1f3>
 18f:	65 72 00             	gs jb  192 <.gnu.lto_.symtab.bad037c419750572+0x192>
 192:	01 00                	add    %eax,(%rax)
	...
 19c:	f5                   	cmc
 19d:	00 00                	add    %al,(%rax)
 19f:	00 5f 5a             	add    %bl,0x5a(%rdi)
 1a2:	4e 31 30             	rex.WRX xor %r14,(%rax)
 1a5:	51                   	push   %rcx
 1a6:	75 61                	jne    209 <.gnu.lto_.symtab.bad037c419750572+0x209>
 1a8:	6e                   	outsb  %ds:(%rsi),(%dx)
 1a9:	74 75                	je     220 <spin_lock.cpp.cc2eb890+0x220>
 1ab:	6d                   	insl   (%dx),%es:(%rdi)
 1ac:	4e                   	rex.WRX
 1ad:	45                   	rex.RB
 1ae:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 1b3:	38 53 70             	cmp    %dl,0x70(%rbx)
 1b6:	69 6e 4c 6f 63 6b 37 	imul   $0x376b636f,0x4c(%rsi),%ebp
 1bd:	72 65                	jb     224 <spin_lock.cpp.cc2eb890+0x224>
 1bf:	6c                   	insb   (%dx),%es:(%rdi)
 1c0:	65 61                	gs (bad)
 1c2:	73 65                	jae    229 <spin_lock.cpp.cc2eb890+0x229>
 1c4:	45 76 00             	rex.RB jbe 1c7 <.gnu.lto_.symtab.bad037c419750572+0x1c7>
	...
 1cf:	00 00                	add    %al,(%rax)
 1d1:	00 26                	add    %ah,(%rsi)
 1d3:	01 00                	add    %eax,(%rax)
 1d5:	00 5f 5a             	add    %bl,0x5a(%rdi)
 1d8:	4e 31 30             	rex.WRX xor %r14,(%rax)
 1db:	51                   	push   %rcx
 1dc:	75 61                	jne    23f <spin_lock.cpp.cc2eb890+0x23f>
 1de:	6e                   	outsb  %ds:(%rsi),(%dx)
 1df:	74 75                	je     256 <spin_lock.cpp.cc2eb890+0x256>
 1e1:	6d                   	insl   (%dx),%es:(%rdi)
 1e2:	4e                   	rex.WRX
 1e3:	45                   	rex.RB
 1e4:	43 33 4c 69 62       	xor    0x62(%r9,%r13,2),%ecx
 1e9:	38 53 70             	cmp    %dl,0x70(%rbx)
 1ec:	69 6e 4c 6f 63 6b 37 	imul   $0x376b636f,0x4c(%rsi),%ebp
 1f3:	61                   	(bad)
 1f4:	63 71 75             	movsxd 0x75(%rcx),%esi
 1f7:	69 72 65 45 76 00 00 	imul   $0x7645,0x65(%rdx),%esi
	...
 206:	00 00                	add    %al,(%rax)
 208:	29 01                	sub    %eax,(%rcx)
	...

Disassembly of section .gnu.lto_.ext_symtab.bad037c419750572:

0000000000000000 <.gnu.lto_.ext_symtab.bad037c419750572>:
   0:	01 01                	add    %eax,(%rcx)
   2:	00 01                	add    %al,(%rcx)
   4:	00 01                	add    %al,(%rcx)
   6:	00 01                	add    %al,(%rcx)
   8:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .gnu.lto_.opts:

0000000000000000 <.gnu.lto_.opts>:
   0:	27                   	(bad)
   1:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
   6:	6f                   	outsl  %ds:(%rsi),(%dx)
   7:	70 65                	jo     6e <.gnu.lto_.opts+0x6e>
   9:	6e                   	outsb  %ds:(%rsi),(%dx)
   a:	6d                   	insl   (%dx),%es:(%rdi)
   b:	70 27                	jo     34 <.gnu.lto_.opts+0x34>
   d:	20 27                	and    %ah,(%rdi)
   f:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  14:	6f                   	outsl  %ds:(%rsi),(%dx)
  15:	70 65                	jo     7c <.gnu.lto_.opts+0x7c>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	61                   	(bad)
  19:	63 63 27             	movsxd 0x27(%rbx),%esp
  1c:	20 27                	and    %ah,(%rdi)
  1e:	2d 66 63 66 2d       	sub    $0x2d666366,%eax
  23:	70 72                	jo     97 <.gnu.lto_.opts+0x97>
  25:	6f                   	outsl  %ds:(%rsi),(%dx)
  26:	74 65                	je     8d <.gnu.lto_.opts+0x8d>
  28:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  2c:	6e                   	outsb  %ds:(%rsi),(%dx)
  2d:	3d 6e 6f 6e 65       	cmp    $0x656e6f6e,%eax
  32:	27                   	(bad)
  33:	20 27                	and    %ah,(%rdi)
  35:	2d 67 27 20 27       	sub    $0x27202767,%eax
  3a:	2d 6d 63 6d 6f       	sub    $0x6f6d636d,%eax
  3f:	64 65 6c             	fs gs insb (%dx),%es:(%rdi)
  42:	3d 6c 61 72 67       	cmp    $0x6772616c,%eax
  47:	65 27                	gs (bad)
  49:	20 27                	and    %ah,(%rdi)
  4b:	2d 6d 6e 6f 2d       	sub    $0x2d6f6e6d,%eax
  50:	72 65                	jb     b7 <.gnu.lto_.opts+0xb7>
  52:	64 2d 7a 6f 6e 65    	fs sub $0x656e6f7a,%eax
  58:	27                   	(bad)
  59:	20 27                	and    %ah,(%rdi)
  5b:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  60:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  66:	72 69                	jb     d1 <.gnu.lto_.opts+0xd1>
  68:	63 27                	movsxd (%rdi),%esp
  6a:	20 27                	and    %ah,(%rdi)
  6c:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  71:	68 3d 78 38 36       	push   $0x3638783d
  76:	2d 36 34 27 20       	sub    $0x20273436,%eax
  7b:	27                   	(bad)
  7c:	2d 4f 30 27 20       	sub    $0x2027304f,%eax
  81:	27                   	(bad)
  82:	2d 57 65 72 72       	sub    $0x72726557,%eax
  87:	6f                   	outsl  %ds:(%rsi),(%dx)
  88:	72 27                	jb     b1 <.gnu.lto_.opts+0xb1>
  8a:	20 27                	and    %ah,(%rdi)
  8c:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  91:	73 74                	jae    107 <.gnu.lto_.opts+0x107>
  93:	61                   	(bad)
  94:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  97:	70 72                	jo     10b <.gnu.lto_.opts+0x10b>
  99:	6f                   	outsl  %ds:(%rsi),(%dx)
  9a:	74 65                	je     101 <.gnu.lto_.opts+0x101>
  9c:	63 74 6f 72          	movsxd 0x72(%rdi,%rbp,2),%esi
  a0:	27                   	(bad)
  a1:	20 27                	and    %ah,(%rdi)
  a3:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  a8:	73 74                	jae    11e <.gnu.lto_.opts+0x11e>
  aa:	72 69                	jb     115 <.gnu.lto_.opts+0x115>
  ac:	63 74 2d 61          	movsxd 0x61(%rbp,%rbp,1),%esi
  b0:	6c                   	insb   (%dx),%es:(%rdi)
  b1:	69 61 73 69 6e 67 27 	imul   $0x27676e69,0x73(%rcx),%esp
  b8:	20 27                	and    %ah,(%rdi)
  ba:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  bf:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
  c2:	6d                   	insl   (%dx),%es:(%rdi)
  c3:	6f                   	outsl  %ds:(%rsi),(%dx)
  c4:	6e                   	outsb  %ds:(%rsi),(%dx)
  c5:	27                   	(bad)
  c6:	20 27                	and    %ah,(%rdi)
  c8:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  cd:	65 78 63             	gs js  133 <spin_lock.cpp.cc2eb890+0x133>
  d0:	65 70 74             	gs jo  147 <spin_lock.cpp.cc2eb890+0x147>
  d3:	69 6f 6e 73 27 20 27 	imul   $0x27202773,0x6e(%rdi),%ebp
  da:	2d 66 73 74 61       	sub    $0x61747366,%eax
  df:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  e2:	63 68 65             	movsxd 0x65(%rax),%ebp
  e5:	63 6b 3d             	movsxd 0x3d(%rbx),%ebp
  e8:	6e                   	outsb  %ds:(%rsi),(%dx)
  e9:	6f                   	outsl  %ds:(%rsi),(%dx)
  ea:	27                   	(bad)
  eb:	20 27                	and    %ah,(%rdi)
  ed:	2d 66 66 75 6e       	sub    $0x6e756666,%eax
  f2:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  f6:	6e                   	outsb  %ds:(%rsi),(%dx)
  f7:	2d 73 65 63 74       	sub    $0x74636573,%eax
  fc:	69 6f 6e 73 27 20 27 	imul   $0x27202773,0x6e(%rdi),%ebp
 103:	2d 66 64 61 74       	sub    $0x74616466,%eax
 108:	61                   	(bad)
 109:	2d 73 65 63 74       	sub    $0x74636573,%eax
 10e:	69 6f 6e 73 27 20 27 	imul   $0x27202773,0x6e(%rdi),%ebp
 115:	2d 66 50 49 43       	sub    $0x43495066,%eax
 11a:	27                   	(bad)
 11b:	20 27                	and    %ah,(%rdi)
 11d:	2d 66 6c 74 6f       	sub    $0x6f746c66,%eax
 122:	27                   	(bad)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 47 4e             	sub    %al,0x4e(%rdi)
   9:	55                   	push   %rbp
   a:	29 20                	sub    %esp,(%rax)
   c:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
   f:	32 2e                	xor    (%rsi),%ch
  11:	31 20                	xor    %esp,(%rax)
  13:	32 30                	xor    (%rax),%dh
  15:	32 34 30             	xor    (%rax,%rsi,1),%dh
  18:	39 31                	cmp    %esi,(%rcx)
  1a:	30 00                	xor    %al,(%rax)

Disassembly of section .note.gnu.property:

0000000000000000 <.note.gnu.property>:
   0:	04 00                	add    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	20 00                	and    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	05 00 00 00 47       	add    $0x47000000,%eax
   d:	4e 55                	rex.WRX push %rbp
   f:	00 02                	add    %al,(%rdx)
  11:	00 01                	add    %al,(%rcx)
  13:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
	...
  1f:	00 01                	add    %al,(%rcx)
  21:	00 01                	add    %al,(%rcx)
  23:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
  27:	00 01                	add    %al,(%rcx)
  29:	00 00                	add    %al,(%rax)
  2b:	00 00                	add    %al,(%rax)
  2d:	00 00                	add    %al,(%rax)
	...
